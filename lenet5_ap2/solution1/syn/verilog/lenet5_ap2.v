// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="lenet5_ap2,hls_ip_2017_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.184800,HLS_SYN_LAT=6540444,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=15,HLS_SYN_FF=10121,HLS_SYN_LUT=7422}" *)

module lenet5_ap2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        index,
        conv_bias_address0,
        conv_bias_ce0,
        conv_bias_q0,
        in_r_address0,
        in_r_ce0,
        in_r_q0,
        conv_weight_address0,
        conv_weight_ce0,
        conv_weight_q0,
        conv_dot_address0,
        conv_dot_ce0,
        conv_dot_we0,
        conv_dot_d0,
        conv_dot_q0,
        pool_dot_address0,
        pool_dot_ce0,
        pool_dot_we0,
        pool_dot_d0,
        pool_dot_q0,
        fc_in_address0,
        fc_in_ce0,
        fc_in_we0,
        fc_in_d0,
        fc_in_q0,
        fc_weight_address0,
        fc_weight_ce0,
        fc_weight_q0,
        fc_bias_address0,
        fc_bias_ce0,
        fc_bias_q0,
        fc_dot_address0,
        fc_dot_ce0,
        fc_dot_we0,
        fc_dot_d0,
        fc_dot_q0,
        ap_return
);

parameter    ap_ST_fsm_state1 = 147'd1;
parameter    ap_ST_fsm_state2 = 147'd2;
parameter    ap_ST_fsm_state3 = 147'd4;
parameter    ap_ST_fsm_state4 = 147'd8;
parameter    ap_ST_fsm_state5 = 147'd16;
parameter    ap_ST_fsm_state6 = 147'd32;
parameter    ap_ST_fsm_state7 = 147'd64;
parameter    ap_ST_fsm_state8 = 147'd128;
parameter    ap_ST_fsm_state9 = 147'd256;
parameter    ap_ST_fsm_state10 = 147'd512;
parameter    ap_ST_fsm_state11 = 147'd1024;
parameter    ap_ST_fsm_state12 = 147'd2048;
parameter    ap_ST_fsm_state13 = 147'd4096;
parameter    ap_ST_fsm_state14 = 147'd8192;
parameter    ap_ST_fsm_state15 = 147'd16384;
parameter    ap_ST_fsm_state16 = 147'd32768;
parameter    ap_ST_fsm_state17 = 147'd65536;
parameter    ap_ST_fsm_state18 = 147'd131072;
parameter    ap_ST_fsm_state19 = 147'd262144;
parameter    ap_ST_fsm_state20 = 147'd524288;
parameter    ap_ST_fsm_state21 = 147'd1048576;
parameter    ap_ST_fsm_state22 = 147'd2097152;
parameter    ap_ST_fsm_state23 = 147'd4194304;
parameter    ap_ST_fsm_state24 = 147'd8388608;
parameter    ap_ST_fsm_state25 = 147'd16777216;
parameter    ap_ST_fsm_state26 = 147'd33554432;
parameter    ap_ST_fsm_state27 = 147'd67108864;
parameter    ap_ST_fsm_state28 = 147'd134217728;
parameter    ap_ST_fsm_state29 = 147'd268435456;
parameter    ap_ST_fsm_state30 = 147'd536870912;
parameter    ap_ST_fsm_state31 = 147'd1073741824;
parameter    ap_ST_fsm_state32 = 147'd2147483648;
parameter    ap_ST_fsm_state33 = 147'd4294967296;
parameter    ap_ST_fsm_state34 = 147'd8589934592;
parameter    ap_ST_fsm_state35 = 147'd17179869184;
parameter    ap_ST_fsm_state36 = 147'd34359738368;
parameter    ap_ST_fsm_state37 = 147'd68719476736;
parameter    ap_ST_fsm_state38 = 147'd137438953472;
parameter    ap_ST_fsm_state39 = 147'd274877906944;
parameter    ap_ST_fsm_state40 = 147'd549755813888;
parameter    ap_ST_fsm_state41 = 147'd1099511627776;
parameter    ap_ST_fsm_state42 = 147'd2199023255552;
parameter    ap_ST_fsm_state43 = 147'd4398046511104;
parameter    ap_ST_fsm_state44 = 147'd8796093022208;
parameter    ap_ST_fsm_state45 = 147'd17592186044416;
parameter    ap_ST_fsm_state46 = 147'd35184372088832;
parameter    ap_ST_fsm_state47 = 147'd70368744177664;
parameter    ap_ST_fsm_state48 = 147'd140737488355328;
parameter    ap_ST_fsm_state49 = 147'd281474976710656;
parameter    ap_ST_fsm_state50 = 147'd562949953421312;
parameter    ap_ST_fsm_state51 = 147'd1125899906842624;
parameter    ap_ST_fsm_state52 = 147'd2251799813685248;
parameter    ap_ST_fsm_state53 = 147'd4503599627370496;
parameter    ap_ST_fsm_state54 = 147'd9007199254740992;
parameter    ap_ST_fsm_state55 = 147'd18014398509481984;
parameter    ap_ST_fsm_state56 = 147'd36028797018963968;
parameter    ap_ST_fsm_state57 = 147'd72057594037927936;
parameter    ap_ST_fsm_state58 = 147'd144115188075855872;
parameter    ap_ST_fsm_state59 = 147'd288230376151711744;
parameter    ap_ST_fsm_state60 = 147'd576460752303423488;
parameter    ap_ST_fsm_state61 = 147'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 147'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 147'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 147'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 147'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 147'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 147'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 147'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 147'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 147'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 147'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 147'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 147'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 147'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 147'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 147'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 147'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 147'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 147'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 147'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 147'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 147'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 147'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 147'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 147'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 147'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 147'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 147'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 147'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 147'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 147'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 147'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 147'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 147'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 147'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 147'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 147'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 147'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 147'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 147'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 147'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 147'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 147'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 147'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 147'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 147'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 147'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 147'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 147'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 147'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 147'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 147'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 147'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 147'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 147'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 147'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 147'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 147'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 147'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 147'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state121 = 147'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state122 = 147'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state123 = 147'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state124 = 147'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state125 = 147'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state126 = 147'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state127 = 147'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state128 = 147'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state129 = 147'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state130 = 147'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state131 = 147'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_state132 = 147'd2722258935367507707706996859454145691648;
parameter    ap_ST_fsm_state133 = 147'd5444517870735015415413993718908291383296;
parameter    ap_ST_fsm_state134 = 147'd10889035741470030830827987437816582766592;
parameter    ap_ST_fsm_state135 = 147'd21778071482940061661655974875633165533184;
parameter    ap_ST_fsm_state136 = 147'd43556142965880123323311949751266331066368;
parameter    ap_ST_fsm_state137 = 147'd87112285931760246646623899502532662132736;
parameter    ap_ST_fsm_state138 = 147'd174224571863520493293247799005065324265472;
parameter    ap_ST_fsm_state139 = 147'd348449143727040986586495598010130648530944;
parameter    ap_ST_fsm_state140 = 147'd696898287454081973172991196020261297061888;
parameter    ap_ST_fsm_state141 = 147'd1393796574908163946345982392040522594123776;
parameter    ap_ST_fsm_state142 = 147'd2787593149816327892691964784081045188247552;
parameter    ap_ST_fsm_state143 = 147'd5575186299632655785383929568162090376495104;
parameter    ap_ST_fsm_state144 = 147'd11150372599265311570767859136324180752990208;
parameter    ap_ST_fsm_state145 = 147'd22300745198530623141535718272648361505980416;
parameter    ap_ST_fsm_state146 = 147'd44601490397061246283071436545296723011960832;
parameter    ap_ST_fsm_state147 = 147'd89202980794122492566142873090593446023921664;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] index;
output  [5:0] conv_bias_address0;
output   conv_bias_ce0;
input  [63:0] conv_bias_q0;
output  [23:0] in_r_address0;
output   in_r_ce0;
input  [63:0] in_r_q0;
output  [12:0] conv_weight_address0;
output   conv_weight_ce0;
input  [63:0] conv_weight_q0;
output  [15:0] conv_dot_address0;
output   conv_dot_ce0;
output   conv_dot_we0;
output  [63:0] conv_dot_d0;
input  [63:0] conv_dot_q0;
output  [13:0] pool_dot_address0;
output   pool_dot_ce0;
output   pool_dot_we0;
output  [63:0] pool_dot_d0;
input  [63:0] pool_dot_q0;
output  [8:0] fc_in_address0;
output   fc_in_ce0;
output   fc_in_we0;
output  [63:0] fc_in_d0;
input  [63:0] fc_in_q0;
output  [17:0] fc_weight_address0;
output   fc_weight_ce0;
input  [63:0] fc_weight_q0;
output  [8:0] fc_bias_address0;
output   fc_bias_ce0;
input  [63:0] fc_bias_q0;
output  [1:0] fc_dot_address0;
output   fc_dot_ce0;
output   fc_dot_we0;
output  [unknown:unknown] fc_dot_d0;
input  [unknown:unknown] fc_dot_q0;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[5:0] conv_bias_address0;
reg conv_bias_ce0;
reg in_r_ce0;
reg[12:0] conv_weight_address0;
reg conv_weight_ce0;
reg[15:0] conv_dot_address0;
reg conv_dot_ce0;
reg conv_dot_we0;
reg[63:0] conv_dot_d0;
reg[13:0] pool_dot_address0;
reg pool_dot_ce0;
reg pool_dot_we0;
reg[63:0] pool_dot_d0;
reg[8:0] fc_in_address0;
reg fc_in_ce0;
reg fc_in_we0;
reg[17:0] fc_weight_address0;
reg fc_weight_ce0;
reg[8:0] fc_bias_address0;
reg fc_bias_ce0;
reg[1:0] fc_dot_address0;
reg fc_dot_ce0;
reg fc_dot_we0;
reg[unknown:unknown] fc_dot_d0;

(* fsm_encoding = "none" *) reg   [146:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [63:0] reg_1029;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state39;
reg   [63:0] reg_1034;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state47;
wire   [63:0] grp_fu_1017_p2;
reg   [63:0] reg_1039;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state53;
wire    ap_CS_fsm_state87;
wire    ap_CS_fsm_state110;
wire    ap_CS_fsm_state133;
wire   [63:0] grp_fu_1006_p2;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state58;
wire    ap_CS_fsm_state92;
wire    ap_CS_fsm_state115;
wire    ap_CS_fsm_state138;
reg   [63:0] reg_1053;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state62;
wire    ap_CS_fsm_state98;
wire    ap_CS_fsm_state121;
wire    ap_CS_fsm_state144;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state68;
reg   [63:0] reg_1065;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state71;
reg   [63:0] reg_1070;
wire    ap_CS_fsm_state81;
wire    ap_CS_fsm_state104;
wire    ap_CS_fsm_state127;
reg   [63:0] reg_1075;
wire    ap_CS_fsm_state93;
wire    ap_CS_fsm_state116;
wire    ap_CS_fsm_state139;
reg   [63:0] reg_1080;
wire   [24:0] tmp_fu_1085_p1;
reg   [24:0] tmp_reg_3287;
wire   [2:0] channel_1_fu_1095_p2;
reg   [2:0] channel_1_reg_3295;
wire    ap_CS_fsm_state2;
wire   [0:0] exitcond25_fu_1089_p2;
wire   [63:0] tmp_2_fu_1130_p2;
reg   [63:0] tmp_2_reg_3311;
wire   [63:0] tmp_5_fu_1146_p2;
reg   [63:0] tmp_5_reg_3316;
wire   [4:0] col_1_fu_1158_p2;
reg   [4:0] col_1_reg_3324;
wire    ap_CS_fsm_state4;
wire   [16:0] tmp_19_fu_1197_p2;
reg   [16:0] tmp_19_reg_3329;
wire   [0:0] exitcond29_fu_1152_p2;
wire   [4:0] row_1_fu_1209_p2;
reg   [4:0] row_1_reg_3337;
wire    ap_CS_fsm_state5;
reg   [15:0] conv_dot_addr_reg_3342;
wire   [0:0] exitcond28_fu_1203_p2;
wire   [2:0] fil_col_1_fu_1239_p2;
reg   [2:0] fil_col_1_reg_3350;
wire    ap_CS_fsm_state6;
wire   [4:0] tmp_15_fu_1245_p2;
reg   [4:0] tmp_15_reg_3355;
wire   [0:0] exitcond27_fu_1233_p2;
wire   [13:0] tmp_17_cast_fu_1251_p1;
reg   [13:0] tmp_17_cast_reg_3360;
wire   [2:0] fil_row_1_fu_1265_p2;
reg   [2:0] fil_row_1_reg_3368;
wire    ap_CS_fsm_state7;
wire   [24:0] grp_fu_3280_p3;
reg   [24:0] tmp_137_reg_3373;
wire   [0:0] exitcond26_fu_1259_p2;
wire   [13:0] tmp_142_fu_1319_p2;
reg   [13:0] tmp_142_reg_3378;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state10;
reg   [63:0] in_load_reg_3393;
wire   [0:0] notlhs_fu_1350_p2;
reg   [0:0] notlhs_reg_3398;
wire    ap_CS_fsm_state27;
wire   [0:0] notrhs_fu_1356_p2;
reg   [0:0] notrhs_reg_3403;
wire   [0:0] grp_fu_1021_p2;
reg   [0:0] tmp_45_reg_3408;
reg   [63:0] max_value_load_reg_3413;
wire    ap_CS_fsm_state29;
wire   [2:0] channel_2_fu_1389_p2;
reg   [2:0] channel_2_reg_3421;
wire   [63:0] tmp_6_fu_1415_p2;
reg   [63:0] tmp_6_reg_3426;
wire   [0:0] exitcond24_fu_1383_p2;
wire   [63:0] tmp_s_fu_1441_p2;
reg   [63:0] tmp_s_reg_3431;
wire   [3:0] col_2_fu_1453_p2;
reg   [3:0] col_2_reg_3440;
wire    ap_CS_fsm_state30;
wire   [4:0] tmp_7_fu_1459_p3;
reg   [4:0] tmp_7_reg_3445;
wire   [0:0] exitcond23_fu_1447_p2;
wire   [16:0] tmp_42_fu_1500_p2;
reg   [16:0] tmp_42_reg_3450;
wire   [14:0] tmp_57_fu_1539_p2;
reg   [14:0] tmp_57_reg_3455;
wire   [3:0] row_2_fu_1551_p2;
reg   [3:0] row_2_reg_3463;
wire    ap_CS_fsm_state31;
wire   [4:0] tmp_11_fu_1557_p3;
reg   [4:0] tmp_11_reg_3468;
wire   [0:0] exitcond22_fu_1545_p2;
wire   [1:0] fil_col_2_fu_1589_p2;
reg   [1:0] fil_col_2_reg_3481;
wire    ap_CS_fsm_state33;
wire   [16:0] tmp_134_fu_1633_p2;
reg   [16:0] tmp_134_reg_3486;
wire   [0:0] exitcond21_fu_1583_p2;
wire   [1:0] fil_row_2_fu_1668_p2;
reg   [1:0] fil_row_2_reg_3494;
wire    ap_CS_fsm_state34;
wire   [0:0] exitcond20_fu_1662_p2;
reg   [0:0] tmp_93_reg_3504;
wire    ap_CS_fsm_state36;
wire   [63:0] max_value_5_fu_1776_p3;
wire    ap_CS_fsm_state37;
wire   [4:0] i_1_fu_1790_p2;
reg   [4:0] i_1_reg_3517;
wire    ap_CS_fsm_state38;
wire   [0:0] exitcond19_fu_1784_p2;
wire   [63:0] tmp_24_fu_1829_p2;
reg   [63:0] tmp_24_reg_3534;
wire   [63:0] tmp_25_fu_1855_p2;
reg   [63:0] tmp_25_reg_3539;
wire   [3:0] col_3_fu_1867_p2;
reg   [3:0] col_3_reg_3547;
wire    ap_CS_fsm_state40;
wire   [16:0] tmp_96_fu_1906_p2;
reg   [16:0] tmp_96_reg_3552;
wire   [0:0] exitcond18_fu_1861_p2;
wire   [3:0] row_3_fu_1918_p2;
reg   [3:0] row_3_reg_3560;
wire    ap_CS_fsm_state41;
reg   [15:0] conv_dot_addr_2_reg_3565;
wire   [0:0] exitcond17_fu_1912_p2;
wire   [2:0] fil_col_3_fu_1948_p2;
reg   [2:0] fil_col_3_reg_3573;
wire    ap_CS_fsm_state42;
wire   [63:0] tmp_41_fu_1960_p1;
reg   [63:0] tmp_41_reg_3578;
wire   [0:0] exitcond16_fu_1942_p2;
wire   [13:0] tmp_42_cast_fu_1964_p1;
reg   [13:0] tmp_42_cast_reg_3583;
wire   [2:0] fil_row_3_fu_1978_p2;
reg   [2:0] fil_row_3_reg_3591;
wire    ap_CS_fsm_state43;
wire   [14:0] tmp_65_cast_fu_1990_p1;
reg   [14:0] tmp_65_cast_reg_3596;
wire   [0:0] exitcond15_fu_1972_p2;
wire   [63:0] tmp_66_fu_1994_p1;
reg   [63:0] tmp_66_reg_3601;
wire   [2:0] n_1_fu_2004_p2;
reg   [2:0] n_1_reg_3609;
wire    ap_CS_fsm_state44;
wire   [10:0] tmp_178_fu_2045_p1;
reg   [10:0] tmp_178_reg_3614;
wire   [0:0] exitcond14_fu_1998_p2;
wire   [13:0] tmp_179_fu_2049_p1;
reg   [13:0] tmp_179_reg_3619;
wire   [63:0] tmp_182_fu_2053_p2;
reg   [63:0] tmp_182_reg_3624;
wire   [14:0] tmp_181_fu_2078_p2;
reg   [14:0] tmp_181_reg_3630;
wire    ap_CS_fsm_state45;
wire   [13:0] tmp_186_fu_2098_p1;
reg   [13:0] tmp_186_reg_3635;
wire   [11:0] tmp_187_fu_2102_p1;
reg   [11:0] tmp_187_reg_3640;
wire    ap_CS_fsm_state46;
reg   [63:0] pool_dot_load_1_reg_3655;
wire   [0:0] notlhs1_fu_2150_p2;
reg   [0:0] notlhs1_reg_3660;
wire    ap_CS_fsm_state63;
wire   [0:0] notrhs1_fu_2156_p2;
reg   [0:0] notrhs1_reg_3665;
reg   [0:0] tmp_84_reg_3670;
reg   [63:0] max_value_1_load_reg_3675;
wire    ap_CS_fsm_state65;
wire   [4:0] i_2_fu_2189_p2;
reg   [4:0] i_2_reg_3683;
wire   [63:0] tmp_65_fu_2215_p2;
reg   [63:0] tmp_65_reg_3688;
wire   [0:0] exitcond13_fu_2183_p2;
wire   [63:0] tmp_76_fu_2241_p2;
reg   [63:0] tmp_76_reg_3693;
wire   [2:0] j_1_fu_2253_p2;
reg   [2:0] j_1_reg_3702;
wire    ap_CS_fsm_state66;
wire   [3:0] tmp_21_fu_2259_p3;
reg   [3:0] tmp_21_reg_3707;
wire   [0:0] exitcond12_fu_2247_p2;
wire   [16:0] tmp_124_fu_2300_p2;
reg   [16:0] tmp_124_reg_3712;
wire   [14:0] tmp_128_fu_2339_p2;
reg   [14:0] tmp_128_reg_3717;
wire   [2:0] k_2_fu_2351_p2;
reg   [2:0] k_2_reg_3725;
wire    ap_CS_fsm_state67;
wire   [3:0] tmp_36_fu_2357_p3;
reg   [3:0] tmp_36_reg_3730;
wire   [0:0] exitcond11_fu_2345_p2;
wire   [1:0] l_1_fu_2389_p2;
reg   [1:0] l_1_reg_3743;
wire    ap_CS_fsm_state69;
wire   [16:0] tmp_165_fu_2433_p2;
reg   [16:0] tmp_165_reg_3748;
wire   [0:0] exitcond10_fu_2383_p2;
wire   [1:0] m_1_fu_2468_p2;
reg   [1:0] m_1_reg_3756;
wire    ap_CS_fsm_state70;
wire   [0:0] exitcond9_fu_2462_p2;
reg   [0:0] tmp_112_reg_3766;
wire    ap_CS_fsm_state72;
wire   [63:0] max_value_11_fu_2576_p3;
wire    ap_CS_fsm_state73;
wire   [8:0] next_mul_fu_2584_p2;
reg   [8:0] next_mul_reg_3776;
wire    ap_CS_fsm_state74;
wire   [4:0] i_3_fu_2596_p2;
reg   [4:0] i_3_reg_3784;
wire   [63:0] tmp_108_fu_2622_p2;
reg   [63:0] tmp_108_reg_3789;
wire   [0:0] exitcond8_fu_2590_p2;
wire   [2:0] j_2_fu_2638_p2;
reg   [2:0] j_2_reg_3797;
wire    ap_CS_fsm_state75;
wire   [14:0] tmp_147_fu_2677_p2;
reg   [14:0] tmp_147_reg_3802;
wire   [0:0] exitcond7_fu_2632_p2;
wire   [8:0] tmp8_cast_fu_2697_p1;
reg   [8:0] tmp8_cast_reg_3807;
wire   [2:0] k_1_fu_2711_p2;
reg   [2:0] k_1_reg_3815;
wire    ap_CS_fsm_state76;
wire   [0:0] exitcond6_fu_2705_p2;
wire   [8:0] tmp_59_fu_2737_p2;
reg   [8:0] tmp_59_reg_3825;
wire   [6:0] col_4_fu_2752_p2;
reg   [6:0] col_4_reg_3833;
wire    ap_CS_fsm_state78;
wire   [16:0] tmp_32_cast1_fu_2763_p1;
reg   [16:0] tmp_32_cast1_reg_3838;
wire   [0:0] exitcond5_fu_2746_p2;
reg   [8:0] fc_bias_addr_reg_3843;
wire   [1:0] fc_dot_addr_reg_3848;
wire   [8:0] row_4_fu_2788_p2;
reg   [8:0] row_4_reg_3856;
wire    ap_CS_fsm_state79;
wire   [16:0] tmp_159_fu_2830_p2;
reg   [16:0] tmp_159_reg_3861;
wire   [0:0] exitcond4_fu_2782_p2;
wire    ap_CS_fsm_state80;
reg   [63:0] fc_in_load_reg_3876;
reg   [0:0] tmp_98_reg_3881;
wire    ap_CS_fsm_state99;
wire   [6:0] i_4_fu_2900_p2;
reg   [6:0] i_4_reg_3889;
wire    ap_CS_fsm_state101;
wire   [16:0] tmp_33_cast1_fu_2911_p1;
reg   [16:0] tmp_33_cast1_reg_3894;
wire   [0:0] exitcond3_fu_2894_p2;
reg   [8:0] fc_bias_addr_1_reg_3899;
wire   [1:0] fc_dot_addr_1_reg_3904;
wire   [6:0] j_3_fu_2936_p2;
reg   [6:0] j_3_reg_3912;
wire    ap_CS_fsm_state102;
wire   [16:0] tmp_172_fu_2982_p2;
reg   [16:0] tmp_172_reg_3917;
wire   [0:0] exitcond2_fu_2930_p2;
wire    ap_CS_fsm_state103;
reg   [0:0] tmp_103_reg_3932;
wire    ap_CS_fsm_state122;
wire   [31:0] max_index_1_cast_fu_3046_p1;
reg   [31:0] max_index_1_cast_reg_3937;
wire    ap_CS_fsm_state124;
wire   [3:0] i_5_fu_3056_p2;
reg   [3:0] i_5_reg_3945;
wire   [17:0] tmp_47_cast1_fu_3067_p1;
reg   [17:0] tmp_47_cast1_reg_3950;
wire   [0:0] exitcond1_fu_3050_p2;
reg   [8:0] fc_bias_addr_2_reg_3955;
wire   [6:0] j_4_fu_3092_p2;
reg   [6:0] j_4_reg_3968;
wire    ap_CS_fsm_state125;
wire   [17:0] tmp_196_fu_3138_p2;
reg   [17:0] tmp_196_reg_3973;
wire   [0:0] exitcond_fu_3086_p2;
wire   [0:0] tmp_72_fu_3143_p2;
reg   [0:0] tmp_72_reg_3978;
wire    ap_CS_fsm_state126;
reg   [0:0] tmp_121_reg_3995;
wire    ap_CS_fsm_state145;
wire   [0:0] sel_tmp2_fu_3253_p2;
reg   [0:0] sel_tmp2_reg_4000;
wire    ap_CS_fsm_state146;
wire   [31:0] max_index_2_fu_3259_p3;
reg   [31:0] max_index_2_reg_4005;
wire   [63:0] max_value_12_fu_3273_p3;
wire    ap_CS_fsm_state147;
reg   [2:0] channel_reg_486;
reg   [4:0] col_reg_498;
reg   [4:0] row_reg_510;
wire    ap_CS_fsm_state28;
reg   [63:0] tmp_3_reg_522;
reg   [2:0] fil_col_reg_534;
reg   [63:0] tmp_18_reg_545;
reg   [2:0] fil_row_reg_557;
reg   [2:0] channel1_reg_568;
reg   [3:0] col2_reg_579;
reg   [3:0] row3_reg_590;
reg   [1:0] fil_col4_reg_602;
reg   [63:0] max_value_3_reg_613;
reg   [1:0] fil_row5_reg_624;
reg   [63:0] max_value_4_reg_635;
reg   [4:0] i_reg_647;
reg   [3:0] col6_reg_659;
reg   [3:0] row7_reg_671;
wire    ap_CS_fsm_state64;
reg   [63:0] tmp_31_reg_683;
reg   [2:0] fil_col8_reg_695;
reg   [63:0] tmp_50_reg_706;
reg   [2:0] fil_row9_reg_718;
reg   [63:0] tmp_68_reg_729;
reg   [2:0] n_reg_741;
reg   [4:0] i1_reg_752;
reg   [2:0] j_reg_763;
reg   [2:0] k_reg_774;
reg   [1:0] l_reg_786;
reg   [63:0] max_value_9_reg_797;
reg   [1:0] m_reg_808;
reg   [63:0] max_value_8_reg_819;
reg   [4:0] i2_reg_831;
reg   [8:0] phi_mul_reg_842;
reg   [2:0] j1_reg_854;
reg   [2:0] k1_reg_865;
wire    ap_CS_fsm_state77;
reg   [6:0] col4_reg_876;
wire    ap_CS_fsm_state100;
reg   [63:0] tmp_46_reg_887;
reg   [8:0] row4_reg_899;
reg   [6:0] i4_reg_911;
wire    ap_CS_fsm_state123;
reg   [63:0] storemerge4_reg_922;
reg   [6:0] j3_reg_935;
reg   [3:0] max_index_1_reg_947;
reg   [31:0] max_index_reg_959;
reg   [63:0] max_value_s_reg_971;
reg   [63:0] storemerge5_reg_981;
reg   [6:0] j4_reg_994;
wire   [63:0] tmp_1_fu_1101_p3;
wire   [63:0] tmp_136_cast_fu_1224_p1;
wire  signed [63:0] tmp_162_cast_fu_1324_p1;
wire   [63:0] tmp_166_cast_fu_1328_p1;
wire   [63:0] tmp_143_cast_fu_1574_p1;
wire   [63:0] tmp_154_cast_fu_1648_p1;
wire   [63:0] tmp_173_cast_fu_1688_p1;
wire   [63:0] tmp_20_fu_1796_p3;
wire   [63:0] tmp_153_cast_fu_1933_p1;
wire   [63:0] tmp_198_cast_fu_2106_p1;
wire   [63:0] tmp_205_cast_fu_2127_p1;
wire   [63:0] tmp_172_cast_fu_2374_p1;
wire   [63:0] tmp_181_cast_fu_2448_p1;
wire   [63:0] tmp_192_cast_fu_2488_p1;
wire   [63:0] tmp_180_cast_fu_2726_p1;
wire   [63:0] tmp_60_fu_2742_p1;
wire   [63:0] tmp_167_cast_fu_2777_p1;
wire   [63:0] tmp_179_cast_fu_2840_p1;
wire   [63:0] tmp_52_fu_2835_p1;
wire   [63:0] tmp_174_cast_fu_2925_p1;
wire   [63:0] tmp_191_cast_fu_2992_p1;
wire   [63:0] tmp_186_cast_fu_3081_p1;
wire   [63:0] tmp_210_cast_fu_3154_p1;
reg   [63:0] max_value_fu_208;
reg   [63:0] max_value_1_fu_212;
wire    ap_CS_fsm_state9;
wire   [63:0] storemerge_fu_1371_p3;
wire   [63:0] storemerge1_fu_2171_p3;
wire   [63:0] storemerge2_fu_2885_p3;
wire   [63:0] storemerge3_fu_3037_p3;
reg   [63:0] grp_fu_1006_p0;
reg   [63:0] grp_fu_1006_p1;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state54;
wire    ap_CS_fsm_state88;
wire    ap_CS_fsm_state94;
wire    ap_CS_fsm_state111;
wire    ap_CS_fsm_state117;
wire    ap_CS_fsm_state134;
wire    ap_CS_fsm_state140;
reg   [63:0] grp_fu_1017_p0;
reg   [63:0] grp_fu_1017_p1;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state48;
wire    ap_CS_fsm_state82;
wire    ap_CS_fsm_state105;
wire    ap_CS_fsm_state128;
reg   [63:0] grp_fu_1021_p0;
reg   [63:0] grp_fu_1021_p1;
wire   [63:0] p_shl3_fu_1110_p4;
wire   [63:0] p_shl4_fu_1120_p4;
wire   [63:0] p_shl2_fu_1136_p4;
wire   [63:0] tmp_4_fu_1164_p1;
wire   [63:0] tmp_12_fu_1168_p2;
wire   [11:0] tmp_16_fu_1173_p1;
wire   [14:0] tmp_17_fu_1185_p1;
wire   [16:0] p_shl5_cast_fu_1177_p3;
wire   [16:0] p_shl6_cast_fu_1189_p3;
wire   [16:0] tmp_cast_fu_1215_p1;
wire   [16:0] tmp_61_fu_1219_p2;
wire   [4:0] fil_col_cast_fu_1229_p1;
wire   [4:0] fil_row_cast_fu_1255_p1;
wire   [4:0] tmp_28_fu_1271_p2;
wire   [9:0] tmp_135_fu_1277_p3;
wire   [63:0] tmp_30_fu_1288_p1;
wire   [63:0] tmp_138_fu_1292_p2;
wire   [11:0] tmp_140_fu_1301_p1;
wire   [13:0] p_shl7_cast_fu_1305_p3;
wire   [13:0] tmp_139_fu_1297_p1;
wire   [13:0] tmp_141_fu_1313_p2;
wire   [63:0] tmp_13_to_int_fu_1332_p1;
wire   [10:0] tmp_14_fu_1336_p4;
wire   [51:0] tmp_106_fu_1346_p1;
wire   [0:0] tmp_39_fu_1362_p2;
wire   [0:0] tmp_51_fu_1366_p2;
wire   [63:0] p_shl1_fu_1395_p4;
wire   [63:0] p_shl5_fu_1405_p4;
wire   [63:0] p_shl8_fu_1421_p4;
wire   [63:0] p_shl9_fu_1431_p4;
wire   [63:0] tmp_8_fu_1467_p1;
wire   [63:0] tmp_29_fu_1471_p2;
wire   [11:0] tmp_35_fu_1476_p1;
wire   [14:0] tmp_37_fu_1488_p1;
wire   [16:0] p_shl14_cast_fu_1480_p3;
wire   [16:0] p_shl15_cast_fu_1492_p3;
wire   [63:0] tmp_9_fu_1506_p1;
wire   [63:0] tmp_44_fu_1510_p2;
wire   [10:0] tmp_48_fu_1515_p1;
wire   [13:0] tmp_55_fu_1527_p1;
wire   [14:0] p_shl12_cast_fu_1519_p3;
wire   [14:0] p_shl13_cast_fu_1531_p3;
wire   [16:0] tmp_12_cast_fu_1565_p1;
wire   [16:0] tmp_101_fu_1569_p2;
wire   [4:0] fil_col4_cast_fu_1579_p1;
wire   [4:0] tmp_26_fu_1595_p2;
wire   [63:0] tmp_27_fu_1600_p1;
wire   [63:0] tmp_131_fu_1604_p2;
wire   [11:0] tmp_132_fu_1609_p1;
wire   [14:0] tmp_133_fu_1621_p1;
wire   [16:0] p_shl16_cast_fu_1613_p3;
wire   [16:0] p_shl17_cast_fu_1625_p3;
wire   [14:0] tmp_25_cast_fu_1639_p1;
wire   [14:0] tmp_130_fu_1643_p2;
wire   [4:0] fil_row5_cast_fu_1658_p1;
wire   [4:0] tmp_43_fu_1674_p2;
wire   [16:0] tmp_44_cast_fu_1679_p1;
wire   [16:0] tmp_150_fu_1683_p2;
wire   [63:0] max_value_4_to_int_fu_1693_p1;
wire   [63:0] max_value_16_to_int_fu_1711_p1;
wire   [10:0] tmp_86_fu_1697_p4;
wire   [51:0] tmp_151_fu_1707_p1;
wire   [0:0] notrhs2_fu_1735_p2;
wire   [0:0] notlhs2_fu_1729_p2;
wire   [10:0] tmp_88_fu_1715_p4;
wire   [51:0] tmp_152_fu_1725_p1;
wire   [0:0] notrhs3_fu_1753_p2;
wire   [0:0] notlhs3_fu_1747_p2;
wire   [0:0] tmp_90_fu_1741_p2;
wire   [0:0] tmp_91_fu_1759_p2;
wire   [0:0] tmp_92_fu_1765_p2;
wire   [0:0] tmp_94_fu_1771_p2;
wire   [63:0] p_shl6_fu_1809_p4;
wire   [63:0] p_shl7_fu_1819_p4;
wire   [63:0] p_shl10_fu_1835_p4;
wire   [63:0] p_shl11_fu_1845_p4;
wire   [63:0] tmp_10_fu_1873_p1;
wire   [63:0] tmp_82_fu_1877_p2;
wire   [11:0] tmp_87_fu_1882_p1;
wire   [14:0] tmp_89_fu_1894_p1;
wire   [16:0] p_shl22_cast_fu_1886_p3;
wire   [16:0] p_shl23_cast_fu_1898_p3;
wire   [16:0] tmp_24_cast_fu_1924_p1;
wire   [16:0] tmp_129_fu_1928_p2;
wire   [3:0] fil_col8_cast_fu_1938_p1;
wire   [3:0] tmp_40_fu_1954_p2;
wire   [3:0] fil_row9_cast_fu_1968_p1;
wire   [3:0] tmp_64_fu_1984_p2;
wire   [63:0] p_shl18_fu_2014_p4;
wire   [63:0] p_shl19_fu_2024_p4;
wire   [63:0] tmp_176_fu_2034_p2;
wire   [63:0] tmp_177_fu_2040_p2;
wire   [63:0] tmp_78_fu_2010_p1;
wire   [14:0] p_shl26_cast_fu_2058_p3;
wire   [14:0] p_shl27_cast_fu_2065_p3;
wire   [14:0] tmp_180_fu_2072_p2;
wire   [63:0] tmp_183_fu_2083_p2;
wire   [63:0] tmp_184_fu_2088_p2;
wire   [63:0] tmp_185_fu_2093_p2;
wire   [13:0] p_shl24_cast_fu_2110_p3;
wire   [13:0] tmp_188_fu_2117_p2;
wire   [13:0] tmp_189_fu_2122_p2;
wire   [63:0] tmp_38_to_int_fu_2132_p1;
wire   [10:0] tmp_77_fu_2136_p4;
wire   [51:0] tmp_149_fu_2146_p1;
wire   [0:0] tmp_83_fu_2162_p2;
wire   [0:0] tmp_85_fu_2166_p2;
wire   [63:0] p_shl12_fu_2195_p4;
wire   [63:0] p_shl13_fu_2205_p4;
wire   [63:0] p_shl14_fu_2221_p4;
wire   [63:0] p_shl15_fu_2231_p4;
wire   [63:0] tmp_22_fu_2267_p1;
wire   [63:0] tmp_115_fu_2271_p2;
wire   [11:0] tmp_117_fu_2276_p1;
wire   [14:0] tmp_123_fu_2288_p1;
wire   [16:0] p_shl36_cast_fu_2280_p3;
wire   [16:0] p_shl37_cast_fu_2292_p3;
wire   [63:0] tmp_23_fu_2306_p1;
wire   [63:0] tmp_125_fu_2310_p2;
wire   [10:0] tmp_126_fu_2315_p1;
wire   [13:0] tmp_127_fu_2327_p1;
wire   [14:0] p_shl34_cast_fu_2319_p3;
wire   [14:0] p_shl35_cast_fu_2331_p3;
wire   [16:0] tmp_37_cast_fu_2365_p1;
wire   [16:0] tmp_148_fu_2369_p2;
wire   [3:0] l_cast_fu_2379_p1;
wire   [3:0] tmp_62_fu_2395_p2;
wire   [63:0] tmp_63_fu_2400_p1;
wire   [63:0] tmp_162_fu_2404_p2;
wire   [11:0] tmp_163_fu_2409_p1;
wire   [14:0] tmp_164_fu_2421_p1;
wire   [16:0] p_shl38_cast_fu_2413_p3;
wire   [16:0] p_shl39_cast_fu_2425_p3;
wire   [14:0] tmp_61_cast_fu_2439_p1;
wire   [14:0] tmp_161_fu_2443_p2;
wire   [3:0] m_cast_fu_2458_p1;
wire   [3:0] tmp_75_fu_2474_p2;
wire   [16:0] tmp_76_cast_fu_2479_p1;
wire   [16:0] tmp_173_fu_2483_p2;
wire   [63:0] max_value_10_to_int_fu_2493_p1;
wire   [63:0] max_value_18_to_int_fu_2511_p1;
wire   [10:0] tmp_105_fu_2497_p4;
wire   [51:0] tmp_174_fu_2507_p1;
wire   [0:0] notrhs6_fu_2535_p2;
wire   [0:0] notlhs6_fu_2529_p2;
wire   [10:0] tmp_107_fu_2515_p4;
wire   [51:0] tmp_175_fu_2525_p1;
wire   [0:0] notrhs7_fu_2553_p2;
wire   [0:0] notlhs7_fu_2547_p2;
wire   [0:0] tmp_109_fu_2541_p2;
wire   [0:0] tmp_110_fu_2559_p2;
wire   [0:0] tmp_111_fu_2565_p2;
wire   [0:0] tmp_113_fu_2571_p2;
wire   [63:0] p_shl16_fu_2602_p4;
wire   [63:0] p_shl17_fu_2612_p4;
wire   [63:0] tmp_34_fu_2644_p1;
wire   [63:0] tmp_144_fu_2648_p2;
wire   [10:0] tmp_145_fu_2653_p1;
wire   [13:0] tmp_146_fu_2665_p1;
wire   [14:0] p_shl42_cast_fu_2657_p3;
wire   [14:0] p_shl43_cast_fu_2669_p3;
wire   [4:0] p_shl_fu_2683_p3;
wire   [4:0] j1_cast_fu_2628_p1;
wire   [4:0] tmp8_fu_2691_p2;
wire   [14:0] tmp_57_cast_fu_2717_p1;
wire   [14:0] tmp_160_fu_2721_p2;
wire   [8:0] k1_cast_fu_2701_p1;
wire   [8:0] tmp9_fu_2731_p2;
wire   [7:0] tmp_32_cast_fu_2767_p1;
wire   [7:0] tmp_143_fu_2771_p2;
wire   [15:0] tmp_155_fu_2794_p3;
wire   [11:0] tmp_156_fu_2806_p3;
wire   [16:0] p_shl44_cast_fu_2802_p1;
wire   [16:0] p_shl45_cast_fu_2814_p1;
wire   [16:0] tmp_157_fu_2818_p2;
wire   [16:0] tmp_158_fu_2824_p2;
wire   [63:0] tmp_49_to_int_fu_2844_p1;
wire   [10:0] tmp_95_fu_2848_p4;
wire   [51:0] tmp_154_fu_2858_p1;
wire   [0:0] notrhs4_fu_2868_p2;
wire   [0:0] notlhs4_fu_2862_p2;
wire   [0:0] tmp_97_fu_2874_p2;
wire   [0:0] tmp_99_fu_2880_p2;
wire   [8:0] tmp_33_cast_fu_2915_p1;
wire   [8:0] tmp_153_fu_2919_p2;
wire   [13:0] tmp_168_fu_2942_p3;
wire   [9:0] tmp_169_fu_2954_p3;
wire   [14:0] p_shl46_cast_fu_2950_p1;
wire   [14:0] p_shl47_cast_fu_2962_p1;
wire   [14:0] tmp_170_fu_2966_p2;
wire  signed [16:0] tmp_189_cast_fu_2972_p1;
wire   [16:0] tmp_171_fu_2976_p2;
wire   [63:0] tmp_56_to_int_fu_2996_p1;
wire   [10:0] tmp_100_fu_3000_p4;
wire   [51:0] tmp_167_fu_3010_p1;
wire   [0:0] notrhs5_fu_3020_p2;
wire   [0:0] notlhs5_fu_3014_p2;
wire   [0:0] tmp_102_fu_3026_p2;
wire   [0:0] tmp_104_fu_3032_p2;
wire   [8:0] tmp_47_cast_fu_3071_p1;
wire   [8:0] tmp_166_fu_3075_p2;
wire   [13:0] tmp_192_fu_3098_p3;
wire   [9:0] tmp_193_fu_3110_p3;
wire   [14:0] p_shl48_cast_fu_3106_p1;
wire   [14:0] p_shl49_cast_fu_3118_p1;
wire   [14:0] tmp_194_fu_3122_p2;
wire  signed [17:0] tmp_208_cast_fu_3128_p1;
wire   [17:0] tmp_195_fu_3132_p2;
wire   [63:0] max_value_17_to_int_fu_3158_p1;
wire   [63:0] max_value_to_int_fu_3176_p1;
wire   [10:0] tmp_114_fu_3162_p4;
wire   [51:0] tmp_190_fu_3172_p1;
wire   [0:0] notrhs8_fu_3200_p2;
wire   [0:0] notlhs8_fu_3194_p2;
wire   [10:0] tmp_116_fu_3180_p4;
wire   [51:0] tmp_191_fu_3190_p1;
wire   [0:0] notrhs9_fu_3218_p2;
wire   [0:0] notlhs9_fu_3212_p2;
wire   [0:0] tmp_118_fu_3206_p2;
wire   [0:0] tmp_119_fu_3224_p2;
wire   [0:0] tmp_120_fu_3230_p2;
wire   [0:0] tmp_122_fu_3236_p2;
wire   [0:0] sel_tmp1_fu_3248_p2;
wire   [31:0] sel_tmp_fu_3241_p3;
wire   [63:0] max_value_15_fu_3266_p1;
wire   [63:0] max_value_15_fu_3266_p3;
wire   [14:0] grp_fu_3280_p0;
wire   [9:0] grp_fu_3280_p1;
reg   [4:0] grp_fu_1021_opcode;
reg   [146:0] ap_NS_fsm;
wire   [24:0] grp_fu_3280_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 147'd1;
end

lenet5_ap2_dadd_6bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
lenet5_ap2_dadd_6bkb_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1006_p0),
    .din1(grp_fu_1006_p1),
    .ce(1'b1),
    .dout(grp_fu_1006_p2)
);

lenet5_ap2_dmul_6cud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
lenet5_ap2_dmul_6cud_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1017_p0),
    .din1(grp_fu_1017_p1),
    .ce(1'b1),
    .dout(grp_fu_1017_p2)
);

lenet5_ap2_dcmp_6dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
lenet5_ap2_dcmp_6dEe_U3(
    .din0(grp_fu_1021_p0),
    .din1(grp_fu_1021_p1),
    .opcode(grp_fu_1021_opcode),
    .dout(grp_fu_1021_p2)
);

lenet5_ap2_mac_mueOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 25 ),
    .dout_WIDTH( 25 ))
lenet5_ap2_mac_mueOg_U4(
    .din0(grp_fu_3280_p0),
    .din1(grp_fu_3280_p1),
    .din2(tmp_reg_3287),
    .dout(grp_fu_3280_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state30) & (exitcond23_fu_1447_p2 == 1'd1))) begin
        channel1_reg_568 <= channel_2_reg_3421;
    end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond25_fu_1089_p2 == 1'd1))) begin
        channel1_reg_568 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (exitcond29_fu_1152_p2 == 1'd1))) begin
        channel_reg_486 <= channel_1_reg_3295;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        channel_reg_486 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state31) & (exitcond22_fu_1545_p2 == 1'd1))) begin
        col2_reg_579 <= col_2_reg_3440;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'd0 == exitcond24_fu_1383_p2))) begin
        col2_reg_579 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state74) & (exitcond8_fu_2590_p2 == 1'd1))) begin
        col4_reg_876 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state100)) begin
        col4_reg_876 <= col_4_reg_3833;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state41) & (exitcond17_fu_1912_p2 == 1'd1))) begin
        col6_reg_659 <= col_3_reg_3547;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        col6_reg_659 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (exitcond28_fu_1203_p2 == 1'd1))) begin
        col_reg_498 <= col_1_reg_3324;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        col_reg_498 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state34) & (exitcond20_fu_1662_p2 == 1'd1))) begin
        fil_col4_reg_602 <= fil_col_2_reg_3481;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        fil_col4_reg_602 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state43) & (exitcond15_fu_1972_p2 == 1'd1))) begin
        fil_col8_reg_695 <= fil_col_3_reg_3573;
    end else if (((1'b1 == ap_CS_fsm_state41) & (1'd0 == exitcond17_fu_1912_p2))) begin
        fil_col8_reg_695 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (exitcond26_fu_1259_p2 == 1'd1))) begin
        fil_col_reg_534 <= fil_col_1_reg_3350;
    end else if (((1'b1 == ap_CS_fsm_state5) & (1'd0 == exitcond28_fu_1203_p2))) begin
        fil_col_reg_534 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state33) & (1'd0 == exitcond21_fu_1583_p2))) begin
        fil_row5_reg_624 <= 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        fil_row5_reg_624 <= fil_row_2_reg_3494;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state44) & (exitcond14_fu_1998_p2 == 1'd1))) begin
        fil_row9_reg_718 <= fil_row_3_reg_3591;
    end else if (((1'b1 == ap_CS_fsm_state42) & (1'd0 == exitcond16_fu_1942_p2))) begin
        fil_row9_reg_718 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (1'd0 == exitcond27_fu_1233_p2))) begin
        fil_row_reg_557 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        fil_row_reg_557 <= fil_row_1_reg_3368;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state66) & (exitcond12_fu_2247_p2 == 1'd1))) begin
        i1_reg_752 <= i_2_reg_3683;
    end else if (((1'b1 == ap_CS_fsm_state38) & (exitcond19_fu_1784_p2 == 1'd1))) begin
        i1_reg_752 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state65) & (exitcond13_fu_2183_p2 == 1'd1))) begin
        i2_reg_831 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_state75) & (exitcond7_fu_2632_p2 == 1'd1))) begin
        i2_reg_831 <= i_3_reg_3784;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state78) & (exitcond5_fu_2746_p2 == 1'd1))) begin
        i4_reg_911 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state123)) begin
        i4_reg_911 <= i_4_reg_3889;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) & (exitcond24_fu_1383_p2 == 1'd1))) begin
        i_reg_647 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_state40) & (exitcond18_fu_1861_p2 == 1'd1))) begin
        i_reg_647 <= i_1_reg_3517;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state76) & (exitcond6_fu_2705_p2 == 1'd1))) begin
        j1_reg_854 <= j_2_reg_3797;
    end else if (((1'b1 == ap_CS_fsm_state74) & (1'd0 == exitcond8_fu_2590_p2))) begin
        j1_reg_854 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state115)) begin
        j3_reg_935 <= j_3_reg_3912;
    end else if (((1'b1 == ap_CS_fsm_state101) & (1'd0 == exitcond3_fu_2894_p2))) begin
        j3_reg_935 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state138)) begin
        j4_reg_994 <= j_4_reg_3968;
    end else if (((1'b1 == ap_CS_fsm_state124) & (1'd0 == exitcond1_fu_3050_p2))) begin
        j4_reg_994 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state67) & (exitcond11_fu_2345_p2 == 1'd1))) begin
        j_reg_763 <= j_1_reg_3702;
    end else if (((1'b1 == ap_CS_fsm_state65) & (1'd0 == exitcond13_fu_2183_p2))) begin
        j_reg_763 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state75) & (1'd0 == exitcond7_fu_2632_p2))) begin
        k1_reg_865 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        k1_reg_865 <= k_1_reg_3815;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state66) & (1'd0 == exitcond12_fu_2247_p2))) begin
        k_reg_774 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state69) & (exitcond10_fu_2383_p2 == 1'd1))) begin
        k_reg_774 <= k_2_reg_3725;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state70) & (exitcond9_fu_2462_p2 == 1'd1))) begin
        l_reg_786 <= l_1_reg_3743;
    end else if ((1'b1 == ap_CS_fsm_state68)) begin
        l_reg_786 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state69) & (1'd0 == exitcond10_fu_2383_p2))) begin
        m_reg_808 <= 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        m_reg_808 <= m_1_reg_3756;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state101) & (exitcond3_fu_2894_p2 == 1'd1))) begin
        max_index_1_reg_947 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state147)) begin
        max_index_1_reg_947 <= i_5_reg_3945;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state69) & (exitcond10_fu_2383_p2 == 1'd1))) begin
        max_value_1_fu_212 <= max_value_9_reg_797;
    end else if (((1'b1 == ap_CS_fsm_state38) & (exitcond19_fu_1784_p2 == 1'd1))) begin
        max_value_1_fu_212 <= max_value_load_reg_3413;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state34) & (exitcond20_fu_1662_p2 == 1'd1))) begin
        max_value_3_reg_613 <= max_value_4_reg_635;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        max_value_3_reg_613 <= conv_dot_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state33) & (1'd0 == exitcond21_fu_1583_p2))) begin
        max_value_4_reg_635 <= max_value_3_reg_613;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        max_value_4_reg_635 <= max_value_5_fu_1776_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state69) & (1'd0 == exitcond10_fu_2383_p2))) begin
        max_value_8_reg_819 <= max_value_9_reg_797;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        max_value_8_reg_819 <= max_value_11_fu_2576_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state70) & (exitcond9_fu_2462_p2 == 1'd1))) begin
        max_value_9_reg_797 <= max_value_8_reg_819;
    end else if ((1'b1 == ap_CS_fsm_state68)) begin
        max_value_9_reg_797 <= conv_dot_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state101) & (exitcond3_fu_2894_p2 == 1'd1))) begin
        max_value_s_reg_971 <= max_value_1_load_reg_3675;
    end else if ((1'b1 == ap_CS_fsm_state147)) begin
        max_value_s_reg_971 <= max_value_12_fu_3273_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state43) & (1'd0 == exitcond15_fu_1972_p2))) begin
        n_reg_741 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        n_reg_741 <= n_1_reg_3609;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state65) & (exitcond13_fu_2183_p2 == 1'd1))) begin
        phi_mul_reg_842 <= 9'd0;
    end else if (((1'b1 == ap_CS_fsm_state75) & (exitcond7_fu_2632_p2 == 1'd1))) begin
        phi_mul_reg_842 <= next_mul_reg_3776;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state30) & (1'd0 == exitcond23_fu_1447_p2))) begin
        row3_reg_590 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state33) & (exitcond21_fu_1583_p2 == 1'd1))) begin
        row3_reg_590 <= row_2_reg_3463;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state92)) begin
        row4_reg_899 <= row_4_reg_3856;
    end else if (((1'b1 == ap_CS_fsm_state78) & (1'd0 == exitcond5_fu_2746_p2))) begin
        row4_reg_899 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state40) & (1'd0 == exitcond18_fu_1861_p2))) begin
        row7_reg_671 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        row7_reg_671 <= row_3_reg_3560;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (1'd0 == exitcond29_fu_1152_p2))) begin
        row_reg_510 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        row_reg_510 <= row_1_reg_3337;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state115)) begin
        storemerge4_reg_922 <= grp_fu_1006_p2;
    end else if (((1'b1 == ap_CS_fsm_state101) & (1'd0 == exitcond3_fu_2894_p2))) begin
        storemerge4_reg_922 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state138)) begin
        storemerge5_reg_981 <= grp_fu_1006_p2;
    end else if (((1'b1 == ap_CS_fsm_state124) & (1'd0 == exitcond1_fu_3050_p2))) begin
        storemerge5_reg_981 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (1'd0 == exitcond27_fu_1233_p2))) begin
        tmp_18_reg_545 <= tmp_3_reg_522;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        tmp_18_reg_545 <= grp_fu_1006_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state43) & (exitcond15_fu_1972_p2 == 1'd1))) begin
        tmp_31_reg_683 <= tmp_50_reg_706;
    end else if (((1'b1 == ap_CS_fsm_state41) & (1'd0 == exitcond17_fu_1912_p2))) begin
        tmp_31_reg_683 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (exitcond26_fu_1259_p2 == 1'd1))) begin
        tmp_3_reg_522 <= tmp_18_reg_545;
    end else if (((1'b1 == ap_CS_fsm_state5) & (1'd0 == exitcond28_fu_1203_p2))) begin
        tmp_3_reg_522 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state92)) begin
        tmp_46_reg_887 <= grp_fu_1006_p2;
    end else if (((1'b1 == ap_CS_fsm_state78) & (1'd0 == exitcond5_fu_2746_p2))) begin
        tmp_46_reg_887 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state44) & (exitcond14_fu_1998_p2 == 1'd1))) begin
        tmp_50_reg_706 <= tmp_68_reg_729;
    end else if (((1'b1 == ap_CS_fsm_state42) & (1'd0 == exitcond16_fu_1942_p2))) begin
        tmp_50_reg_706 <= tmp_31_reg_683;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state43) & (1'd0 == exitcond15_fu_1972_p2))) begin
        tmp_68_reg_729 <= tmp_50_reg_706;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        tmp_68_reg_729 <= grp_fu_1006_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        channel_1_reg_3295 <= channel_1_fu_1095_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        channel_2_reg_3421 <= channel_2_fu_1389_p2;
        max_value_load_reg_3413 <= max_value_fu_208;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        col_1_reg_3324 <= col_1_fu_1158_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        col_2_reg_3440 <= col_2_fu_1453_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        col_3_reg_3547 <= col_3_fu_1867_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        col_4_reg_3833 <= col_4_fu_2752_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state41) & (1'd0 == exitcond17_fu_1912_p2))) begin
        conv_dot_addr_2_reg_3565 <= tmp_153_cast_fu_1933_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (1'd0 == exitcond28_fu_1203_p2))) begin
        conv_dot_addr_reg_3342 <= tmp_136_cast_fu_1224_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state101) & (1'd0 == exitcond3_fu_2894_p2))) begin
        fc_bias_addr_1_reg_3899 <= tmp_174_cast_fu_2925_p1;
        tmp_33_cast1_reg_3894[6 : 0] <= tmp_33_cast1_fu_2911_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state124) & (1'd0 == exitcond1_fu_3050_p2))) begin
        fc_bias_addr_2_reg_3955 <= tmp_186_cast_fu_3081_p1;
        tmp_47_cast1_reg_3950[3 : 0] <= tmp_47_cast1_fu_3067_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state78) & (1'd0 == exitcond5_fu_2746_p2))) begin
        fc_bias_addr_reg_3843[7 : 0] <= tmp_167_cast_fu_2777_p1[7 : 0];
        tmp_32_cast1_reg_3838[6 : 0] <= tmp_32_cast1_fu_2763_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        fc_in_load_reg_3876 <= fc_in_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        fil_col_1_reg_3350 <= fil_col_1_fu_1239_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        fil_col_2_reg_3481 <= fil_col_2_fu_1589_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        fil_col_3_reg_3573 <= fil_col_3_fu_1948_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        fil_row_1_reg_3368 <= fil_row_1_fu_1265_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        fil_row_2_reg_3494 <= fil_row_2_fu_1668_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        fil_row_3_reg_3591 <= fil_row_3_fu_1978_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        i_1_reg_3517 <= i_1_fu_1790_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        i_2_reg_3683 <= i_2_fu_2189_p2;
        max_value_1_load_reg_3675 <= max_value_1_fu_212;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        i_3_reg_3784 <= i_3_fu_2596_p2;
        next_mul_reg_3776 <= next_mul_fu_2584_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        i_4_reg_3889 <= i_4_fu_2900_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state124)) begin
        i_5_reg_3945 <= i_5_fu_3056_p2;
        max_index_1_cast_reg_3937[3 : 0] <= max_index_1_cast_fu_3046_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        in_load_reg_3393 <= in_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state66)) begin
        j_1_reg_3702 <= j_1_fu_2253_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        j_2_reg_3797 <= j_2_fu_2638_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state102)) begin
        j_3_reg_3912 <= j_3_fu_2936_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state125)) begin
        j_4_reg_3968 <= j_4_fu_3092_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        k_1_reg_3815 <= k_1_fu_2711_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        k_2_reg_3725 <= k_2_fu_2351_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        l_1_reg_3743 <= l_1_fu_2389_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        m_1_reg_3756 <= m_1_fu_2468_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state146)) begin
        max_index_2_reg_4005 <= max_index_2_fu_3259_p3;
        sel_tmp2_reg_4000 <= sel_tmp2_fu_3253_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state147)) begin
        max_index_reg_959 <= max_index_2_reg_4005;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state33) & (exitcond21_fu_1583_p2 == 1'd1))) begin
        max_value_fu_208 <= max_value_3_reg_613;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        n_1_reg_3609 <= n_1_fu_2004_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        notlhs1_reg_3660 <= notlhs1_fu_2150_p2;
        notrhs1_reg_3665 <= notrhs1_fu_2156_p2;
        tmp_84_reg_3670 <= grp_fu_1021_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        notlhs_reg_3398 <= notlhs_fu_1350_p2;
        notrhs_reg_3403 <= notrhs_fu_1356_p2;
        tmp_45_reg_3408 <= grp_fu_1021_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        pool_dot_load_1_reg_3655 <= pool_dot_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state39))) begin
        reg_1029 <= conv_bias_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state47))) begin
        reg_1034 <= conv_weight_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state133))) begin
        reg_1039 <= grp_fu_1017_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state121) | (1'b1 == ap_CS_fsm_state144))) begin
        reg_1053 <= grp_fu_1006_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state71))) begin
        reg_1065 <= conv_dot_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state127))) begin
        reg_1070 <= fc_weight_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state116) | (1'b1 == ap_CS_fsm_state139))) begin
        reg_1075 <= fc_bias_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state127))) begin
        reg_1080 <= fc_dot_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        row_1_reg_3337 <= row_1_fu_1209_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        row_2_reg_3463 <= row_2_fu_1551_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        row_3_reg_3560 <= row_3_fu_1918_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        row_4_reg_3856 <= row_4_fu_2788_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state75) & (1'd0 == exitcond7_fu_2632_p2))) begin
        tmp8_cast_reg_3807[4 : 0] <= tmp8_cast_fu_2697_p1[4 : 0];
        tmp_147_reg_3802[14 : 1] <= tmp_147_fu_2677_p2[14 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state122)) begin
        tmp_103_reg_3932 <= grp_fu_1021_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state74) & (1'd0 == exitcond8_fu_2590_p2))) begin
        tmp_108_reg_3789[63 : 1] <= tmp_108_fu_2622_p2[63 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        tmp_112_reg_3766 <= grp_fu_1021_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state31) & (1'd0 == exitcond22_fu_1545_p2))) begin
        tmp_11_reg_3468[4 : 1] <= tmp_11_fu_1557_p3[4 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state145)) begin
        tmp_121_reg_3995 <= grp_fu_1021_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state66) & (1'd0 == exitcond12_fu_2247_p2))) begin
        tmp_124_reg_3712[16 : 3] <= tmp_124_fu_2300_p2[16 : 3];
        tmp_128_reg_3717[14 : 1] <= tmp_128_fu_2339_p2[14 : 1];
        tmp_21_reg_3707[3 : 1] <= tmp_21_fu_2259_p3[3 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state33) & (1'd0 == exitcond21_fu_1583_p2))) begin
        tmp_134_reg_3486[16 : 2] <= tmp_134_fu_1633_p2[16 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (1'd0 == exitcond26_fu_1259_p2))) begin
        tmp_137_reg_3373 <= grp_fu_3280_p3;
        tmp_142_reg_3378 <= tmp_142_fu_1319_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state79) & (1'd0 == exitcond4_fu_2782_p2))) begin
        tmp_159_reg_3861 <= tmp_159_fu_2830_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (1'd0 == exitcond27_fu_1233_p2))) begin
        tmp_15_reg_3355 <= tmp_15_fu_1245_p2;
        tmp_17_cast_reg_3360[2 : 0] <= tmp_17_cast_fu_1251_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state69) & (1'd0 == exitcond10_fu_2383_p2))) begin
        tmp_165_reg_3748[16 : 2] <= tmp_165_fu_2433_p2[16 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state102) & (1'd0 == exitcond2_fu_2930_p2))) begin
        tmp_172_reg_3917 <= tmp_172_fu_2982_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state44) & (1'd0 == exitcond14_fu_1998_p2))) begin
        tmp_178_reg_3614 <= tmp_178_fu_2045_p1;
        tmp_179_reg_3619 <= tmp_179_fu_2049_p1;
        tmp_182_reg_3624 <= tmp_182_fu_2053_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        tmp_181_reg_3630 <= tmp_181_fu_2078_p2;
        tmp_186_reg_3635 <= tmp_186_fu_2098_p1;
        tmp_187_reg_3640 <= tmp_187_fu_2102_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state125) & (1'd0 == exitcond_fu_3086_p2))) begin
        tmp_196_reg_3973 <= tmp_196_fu_3138_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (1'd0 == exitcond29_fu_1152_p2))) begin
        tmp_19_reg_3329[16 : 2] <= tmp_19_fu_1197_p2[16 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        tmp_24_reg_3534[63 : 2] <= tmp_24_fu_1829_p2[63 : 2];
        tmp_25_reg_3539[63 : 1] <= tmp_25_fu_1855_p2[63 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_2_reg_3311[63 : 2] <= tmp_2_fu_1130_p2[63 : 2];
        tmp_5_reg_3316[63 : 1] <= tmp_5_fu_1146_p2[63 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state67) & (1'd0 == exitcond11_fu_2345_p2))) begin
        tmp_36_reg_3730[3 : 1] <= tmp_36_fu_2357_p3[3 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state42) & (1'd0 == exitcond16_fu_1942_p2))) begin
        tmp_41_reg_3578[3 : 0] <= tmp_41_fu_1960_p1[3 : 0];
        tmp_42_cast_reg_3583[2 : 0] <= tmp_42_cast_fu_1964_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state30) & (1'd0 == exitcond23_fu_1447_p2))) begin
        tmp_42_reg_3450[16 : 3] <= tmp_42_fu_1500_p2[16 : 3];
        tmp_57_reg_3455[14 : 1] <= tmp_57_fu_1539_p2[14 : 1];
        tmp_7_reg_3445[4 : 1] <= tmp_7_fu_1459_p3[4 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state76) & (1'd0 == exitcond6_fu_2705_p2))) begin
        tmp_59_reg_3825 <= tmp_59_fu_2737_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state43) & (1'd0 == exitcond15_fu_1972_p2))) begin
        tmp_65_cast_reg_3596[3 : 0] <= tmp_65_cast_fu_1990_p1[3 : 0];
        tmp_66_reg_3601[2 : 0] <= tmp_66_fu_1994_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state65) & (1'd0 == exitcond13_fu_2183_p2))) begin
        tmp_65_reg_3688[63 : 1] <= tmp_65_fu_2215_p2[63 : 1];
        tmp_76_reg_3693[63 : 2] <= tmp_76_fu_2241_p2[63 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) & (1'd0 == exitcond24_fu_1383_p2))) begin
        tmp_6_reg_3426[63 : 1] <= tmp_6_fu_1415_p2[63 : 1];
        tmp_s_reg_3431[63 : 2] <= tmp_s_fu_1441_p2[63 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state125) & (exitcond_fu_3086_p2 == 1'd1))) begin
        tmp_72_reg_3978 <= tmp_72_fu_3143_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        tmp_93_reg_3504 <= grp_fu_1021_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state40) & (1'd0 == exitcond18_fu_1861_p2))) begin
        tmp_96_reg_3552[16 : 2] <= tmp_96_fu_1906_p2[16 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state99)) begin
        tmp_98_reg_3881 <= grp_fu_1021_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        tmp_reg_3287 <= tmp_fu_1085_p1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state124) & (exitcond1_fu_3050_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state124) & (exitcond1_fu_3050_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        conv_bias_address0 = tmp_20_fu_1796_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        conv_bias_address0 = tmp_1_fu_1101_p3;
    end else begin
        conv_bias_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state38))) begin
        conv_bias_ce0 = 1'b1;
    end else begin
        conv_bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        conv_dot_address0 = tmp_192_cast_fu_2488_p1;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        conv_dot_address0 = tmp_172_cast_fu_2374_p1;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        conv_dot_address0 = conv_dot_addr_2_reg_3565;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        conv_dot_address0 = tmp_173_cast_fu_1688_p1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        conv_dot_address0 = tmp_143_cast_fu_1574_p1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        conv_dot_address0 = conv_dot_addr_reg_3342;
    end else begin
        conv_dot_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state64))) begin
        conv_dot_ce0 = 1'b1;
    end else begin
        conv_dot_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        conv_dot_d0 = storemerge1_fu_2171_p3;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        conv_dot_d0 = storemerge_fu_1371_p3;
    end else begin
        conv_dot_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state64))) begin
        conv_dot_we0 = 1'b1;
    end else begin
        conv_dot_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        conv_weight_address0 = tmp_205_cast_fu_2127_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        conv_weight_address0 = tmp_166_cast_fu_1328_p1;
    end else begin
        conv_weight_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state46))) begin
        conv_weight_ce0 = 1'b1;
    end else begin
        conv_weight_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state125)) begin
        fc_bias_address0 = fc_bias_addr_2_reg_3955;
    end else if ((1'b1 == ap_CS_fsm_state102)) begin
        fc_bias_address0 = fc_bias_addr_1_reg_3899;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        fc_bias_address0 = fc_bias_addr_reg_3843;
    end else begin
        fc_bias_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state125))) begin
        fc_bias_ce0 = 1'b1;
    end else begin
        fc_bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state146)) begin
        fc_dot_address0 = 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        fc_dot_address0 = 64'd2;
    end else if (((1'b1 == ap_CS_fsm_state125) | (1'b1 == ap_CS_fsm_state145))) begin
        fc_dot_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        fc_dot_address0 = 64'd1;
    end else if (((1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state123))) begin
        fc_dot_address0 = fc_dot_addr_1_reg_3904;
    end else if ((1'b1 == ap_CS_fsm_state100)) begin
        fc_dot_address0 = fc_dot_addr_reg_3848;
    end else begin
        fc_dot_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state103) | (1'b1 == ap_CS_fsm_state125) | (1'b1 == ap_CS_fsm_state126) | (1'b1 == ap_CS_fsm_state145) | (1'b1 == ap_CS_fsm_state146) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state123))) begin
        fc_dot_ce0 = 1'b1;
    end else begin
        fc_dot_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state145)) begin
        fc_dot_d0 = reg_1053;
    end else if ((1'b1 == ap_CS_fsm_state125)) begin
        fc_dot_d0 = storemerge5_reg_981;
    end else if ((1'b1 == ap_CS_fsm_state123)) begin
        fc_dot_d0 = storemerge3_fu_3037_p3;
    end else if ((1'b1 == ap_CS_fsm_state102)) begin
        fc_dot_d0 = storemerge4_reg_922;
    end else if ((1'b1 == ap_CS_fsm_state100)) begin
        fc_dot_d0 = storemerge2_fu_2885_p3;
    end else begin
        fc_dot_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state125) | (1'b1 == ap_CS_fsm_state145) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state123))) begin
        fc_dot_we0 = 1'b1;
    end else begin
        fc_dot_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        fc_in_address0 = tmp_52_fu_2835_p1;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        fc_in_address0 = tmp_60_fu_2742_p1;
    end else begin
        fc_in_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state77))) begin
        fc_in_ce0 = 1'b1;
    end else begin
        fc_in_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        fc_in_we0 = 1'b1;
    end else begin
        fc_in_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state126)) begin
        fc_weight_address0 = tmp_210_cast_fu_3154_p1;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        fc_weight_address0 = tmp_191_cast_fu_2992_p1;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        fc_weight_address0 = tmp_179_cast_fu_2840_p1;
    end else begin
        fc_weight_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state103) | (1'b1 == ap_CS_fsm_state126))) begin
        fc_weight_ce0 = 1'b1;
    end else begin
        fc_weight_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state134) | (1'b1 == ap_CS_fsm_state140))) begin
        grp_fu_1006_p0 = storemerge5_reg_981;
    end else if (((1'b1 == ap_CS_fsm_state111) | (1'b1 == ap_CS_fsm_state117))) begin
        grp_fu_1006_p0 = storemerge4_reg_922;
    end else if (((1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state94))) begin
        grp_fu_1006_p0 = tmp_46_reg_887;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        grp_fu_1006_p0 = tmp_68_reg_729;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_fu_1006_p0 = tmp_31_reg_683;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_1006_p0 = tmp_18_reg_545;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_1006_p0 = tmp_3_reg_522;
    end else begin
        grp_fu_1006_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state117) | (1'b1 == ap_CS_fsm_state140))) begin
        grp_fu_1006_p1 = reg_1075;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state111) | (1'b1 == ap_CS_fsm_state134))) begin
        grp_fu_1006_p1 = reg_1039;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state42))) begin
        grp_fu_1006_p1 = reg_1029;
    end else begin
        grp_fu_1006_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state128))) begin
        grp_fu_1017_p0 = reg_1080;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        grp_fu_1017_p0 = fc_in_load_reg_3876;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        grp_fu_1017_p0 = pool_dot_load_1_reg_3655;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_1017_p0 = in_load_reg_3393;
    end else begin
        grp_fu_1017_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state128))) begin
        grp_fu_1017_p1 = reg_1070;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state48))) begin
        grp_fu_1017_p1 = reg_1034;
    end else begin
        grp_fu_1017_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state145)) begin
        grp_fu_1021_opcode = 5'd2;
    end else if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state122))) begin
        grp_fu_1021_opcode = 5'd4;
    end else begin
        grp_fu_1021_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        grp_fu_1021_p0 = max_value_8_reg_819;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        grp_fu_1021_p0 = max_value_4_reg_635;
    end else if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state122) | (1'b1 == ap_CS_fsm_state145))) begin
        grp_fu_1021_p0 = reg_1053;
    end else begin
        grp_fu_1021_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state145)) begin
        grp_fu_1021_p1 = max_value_s_reg_971;
    end else if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state72))) begin
        grp_fu_1021_p1 = reg_1065;
    end else if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state122))) begin
        grp_fu_1021_p1 = 64'd0;
    end else begin
        grp_fu_1021_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        in_r_ce0 = 1'b1;
    end else begin
        in_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        pool_dot_address0 = tmp_180_cast_fu_2726_p1;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        pool_dot_address0 = tmp_181_cast_fu_2448_p1;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        pool_dot_address0 = tmp_198_cast_fu_2106_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        pool_dot_address0 = tmp_154_cast_fu_1648_p1;
    end else begin
        pool_dot_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state76))) begin
        pool_dot_ce0 = 1'b1;
    end else begin
        pool_dot_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        pool_dot_d0 = max_value_9_reg_797;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        pool_dot_d0 = max_value_3_reg_613;
    end else begin
        pool_dot_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state33) & (exitcond21_fu_1583_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state69) & (exitcond10_fu_2383_p2 == 1'd1)))) begin
        pool_dot_we0 = 1'b1;
    end else begin
        pool_dot_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (exitcond25_fu_1089_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (exitcond29_fu_1152_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (exitcond28_fu_1203_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (1'd0 == exitcond27_fu_1233_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (exitcond26_fu_1259_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state29 : begin
            if (((1'b1 == ap_CS_fsm_state29) & (exitcond24_fu_1383_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state30 : begin
            if (((1'b1 == ap_CS_fsm_state30) & (exitcond23_fu_1447_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state31 : begin
            if (((1'b1 == ap_CS_fsm_state31) & (exitcond22_fu_1545_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            if (((1'b1 == ap_CS_fsm_state33) & (exitcond21_fu_1583_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state34 : begin
            if (((1'b1 == ap_CS_fsm_state34) & (exitcond20_fu_1662_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state38 : begin
            if (((1'b1 == ap_CS_fsm_state38) & (exitcond19_fu_1784_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            if (((1'b1 == ap_CS_fsm_state40) & (exitcond18_fu_1861_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        ap_ST_fsm_state41 : begin
            if (((1'b1 == ap_CS_fsm_state41) & (exitcond17_fu_1912_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end
        end
        ap_ST_fsm_state42 : begin
            if (((1'b1 == ap_CS_fsm_state42) & (1'd0 == exitcond16_fu_1942_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end
        end
        ap_ST_fsm_state43 : begin
            if (((1'b1 == ap_CS_fsm_state43) & (exitcond15_fu_1972_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end
        end
        ap_ST_fsm_state44 : begin
            if (((1'b1 == ap_CS_fsm_state44) & (exitcond14_fu_1998_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state65 : begin
            if (((1'b1 == ap_CS_fsm_state65) & (exitcond13_fu_2183_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state74;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state66;
            end
        end
        ap_ST_fsm_state66 : begin
            if (((1'b1 == ap_CS_fsm_state66) & (exitcond12_fu_2247_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end
        end
        ap_ST_fsm_state67 : begin
            if (((1'b1 == ap_CS_fsm_state67) & (exitcond11_fu_2345_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state66;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state68;
            end
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            if (((1'b1 == ap_CS_fsm_state69) & (exitcond10_fu_2383_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state70;
            end
        end
        ap_ST_fsm_state70 : begin
            if (((1'b1 == ap_CS_fsm_state70) & (exitcond9_fu_2462_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state69;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state71;
            end
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state74 : begin
            if (((1'b1 == ap_CS_fsm_state74) & (exitcond8_fu_2590_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state78;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end
        end
        ap_ST_fsm_state75 : begin
            if (((1'b1 == ap_CS_fsm_state75) & (exitcond7_fu_2632_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state74;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state76;
            end
        end
        ap_ST_fsm_state76 : begin
            if (((1'b1 == ap_CS_fsm_state76) & (exitcond6_fu_2705_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state77;
            end
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state78 : begin
            if (((1'b1 == ap_CS_fsm_state78) & (exitcond5_fu_2746_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state101;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state79;
            end
        end
        ap_ST_fsm_state79 : begin
            if (((1'b1 == ap_CS_fsm_state79) & (exitcond4_fu_2782_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state93;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state80;
            end
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state101 : begin
            if (((1'b1 == ap_CS_fsm_state101) & (exitcond3_fu_2894_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state124;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state102;
            end
        end
        ap_ST_fsm_state102 : begin
            if (((1'b1 == ap_CS_fsm_state102) & (exitcond2_fu_2930_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state116;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state103;
            end
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state124 : begin
            if (((1'b1 == ap_CS_fsm_state124) & (exitcond1_fu_3050_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state125;
            end
        end
        ap_ST_fsm_state125 : begin
            if (((1'b1 == ap_CS_fsm_state125) & (exitcond_fu_3086_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state139;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state126;
            end
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state131;
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state135;
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        ap_ST_fsm_state136 : begin
            ap_NS_fsm = ap_ST_fsm_state137;
        end
        ap_ST_fsm_state137 : begin
            ap_NS_fsm = ap_ST_fsm_state138;
        end
        ap_ST_fsm_state138 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state139 : begin
            ap_NS_fsm = ap_ST_fsm_state140;
        end
        ap_ST_fsm_state140 : begin
            ap_NS_fsm = ap_ST_fsm_state141;
        end
        ap_ST_fsm_state141 : begin
            ap_NS_fsm = ap_ST_fsm_state142;
        end
        ap_ST_fsm_state142 : begin
            ap_NS_fsm = ap_ST_fsm_state143;
        end
        ap_ST_fsm_state143 : begin
            ap_NS_fsm = ap_ST_fsm_state144;
        end
        ap_ST_fsm_state144 : begin
            ap_NS_fsm = ap_ST_fsm_state145;
        end
        ap_ST_fsm_state145 : begin
            ap_NS_fsm = ap_ST_fsm_state146;
        end
        ap_ST_fsm_state146 : begin
            ap_NS_fsm = ap_ST_fsm_state147;
        end
        ap_ST_fsm_state147 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state100 = ap_CS_fsm[32'd99];

assign ap_CS_fsm_state101 = ap_CS_fsm[32'd100];

assign ap_CS_fsm_state102 = ap_CS_fsm[32'd101];

assign ap_CS_fsm_state103 = ap_CS_fsm[32'd102];

assign ap_CS_fsm_state104 = ap_CS_fsm[32'd103];

assign ap_CS_fsm_state105 = ap_CS_fsm[32'd104];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state110 = ap_CS_fsm[32'd109];

assign ap_CS_fsm_state111 = ap_CS_fsm[32'd110];

assign ap_CS_fsm_state115 = ap_CS_fsm[32'd114];

assign ap_CS_fsm_state116 = ap_CS_fsm[32'd115];

assign ap_CS_fsm_state117 = ap_CS_fsm[32'd116];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state121 = ap_CS_fsm[32'd120];

assign ap_CS_fsm_state122 = ap_CS_fsm[32'd121];

assign ap_CS_fsm_state123 = ap_CS_fsm[32'd122];

assign ap_CS_fsm_state124 = ap_CS_fsm[32'd123];

assign ap_CS_fsm_state125 = ap_CS_fsm[32'd124];

assign ap_CS_fsm_state126 = ap_CS_fsm[32'd125];

assign ap_CS_fsm_state127 = ap_CS_fsm[32'd126];

assign ap_CS_fsm_state128 = ap_CS_fsm[32'd127];

assign ap_CS_fsm_state133 = ap_CS_fsm[32'd132];

assign ap_CS_fsm_state134 = ap_CS_fsm[32'd133];

assign ap_CS_fsm_state138 = ap_CS_fsm[32'd137];

assign ap_CS_fsm_state139 = ap_CS_fsm[32'd138];

assign ap_CS_fsm_state140 = ap_CS_fsm[32'd139];

assign ap_CS_fsm_state144 = ap_CS_fsm[32'd143];

assign ap_CS_fsm_state145 = ap_CS_fsm[32'd144];

assign ap_CS_fsm_state146 = ap_CS_fsm[32'd145];

assign ap_CS_fsm_state147 = ap_CS_fsm[32'd146];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state92 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state93 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state94 = ap_CS_fsm[32'd93];

assign ap_CS_fsm_state98 = ap_CS_fsm[32'd97];

assign ap_CS_fsm_state99 = ap_CS_fsm[32'd98];

assign ap_return = max_index_reg_959;

assign channel_1_fu_1095_p2 = (channel_reg_486 + 3'd1);

assign channel_2_fu_1389_p2 = (channel1_reg_568 + 3'd1);

assign col_1_fu_1158_p2 = (col_reg_498 + 5'd1);

assign col_2_fu_1453_p2 = (col2_reg_579 + 4'd1);

assign col_3_fu_1867_p2 = (col6_reg_659 + 4'd1);

assign col_4_fu_2752_p2 = (col4_reg_876 + 7'd1);

assign exitcond10_fu_2383_p2 = ((l_reg_786 == 2'd2) ? 1'b1 : 1'b0);

assign exitcond11_fu_2345_p2 = ((k_reg_774 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond12_fu_2247_p2 = ((j_reg_763 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond13_fu_2183_p2 = ((i1_reg_752 == 5'd16) ? 1'b1 : 1'b0);

assign exitcond14_fu_1998_p2 = ((n_reg_741 == 3'd6) ? 1'b1 : 1'b0);

assign exitcond15_fu_1972_p2 = ((fil_row9_reg_718 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond16_fu_1942_p2 = ((fil_col8_reg_695 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond17_fu_1912_p2 = ((row7_reg_671 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond18_fu_1861_p2 = ((col6_reg_659 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond19_fu_1784_p2 = ((i_reg_647 == 5'd16) ? 1'b1 : 1'b0);

assign exitcond1_fu_3050_p2 = ((max_index_1_reg_947 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond20_fu_1662_p2 = ((fil_row5_reg_624 == 2'd2) ? 1'b1 : 1'b0);

assign exitcond21_fu_1583_p2 = ((fil_col4_reg_602 == 2'd2) ? 1'b1 : 1'b0);

assign exitcond22_fu_1545_p2 = ((row3_reg_590 == 4'd14) ? 1'b1 : 1'b0);

assign exitcond23_fu_1447_p2 = ((col2_reg_579 == 4'd14) ? 1'b1 : 1'b0);

assign exitcond24_fu_1383_p2 = ((channel1_reg_568 == 3'd6) ? 1'b1 : 1'b0);

assign exitcond25_fu_1089_p2 = ((channel_reg_486 == 3'd6) ? 1'b1 : 1'b0);

assign exitcond26_fu_1259_p2 = ((fil_row_reg_557 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond27_fu_1233_p2 = ((fil_col_reg_534 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond28_fu_1203_p2 = ((row_reg_510 == 5'd28) ? 1'b1 : 1'b0);

assign exitcond29_fu_1152_p2 = ((col_reg_498 == 5'd28) ? 1'b1 : 1'b0);

assign exitcond2_fu_2930_p2 = ((j3_reg_935 == 7'd120) ? 1'b1 : 1'b0);

assign exitcond3_fu_2894_p2 = ((i4_reg_911 == 7'd84) ? 1'b1 : 1'b0);

assign exitcond4_fu_2782_p2 = ((row4_reg_899 == 9'd400) ? 1'b1 : 1'b0);

assign exitcond5_fu_2746_p2 = ((col4_reg_876 == 7'd120) ? 1'b1 : 1'b0);

assign exitcond6_fu_2705_p2 = ((k1_reg_865 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond7_fu_2632_p2 = ((j1_reg_854 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond8_fu_2590_p2 = ((i2_reg_831 == 5'd16) ? 1'b1 : 1'b0);

assign exitcond9_fu_2462_p2 = ((m_reg_808 == 2'd2) ? 1'b1 : 1'b0);

assign exitcond_fu_3086_p2 = ((j4_reg_994 == 7'd84) ? 1'b1 : 1'b0);

assign fc_dot_addr_1_reg_3904 = 64'd2;

assign fc_dot_addr_reg_3848 = 64'd1;

assign fc_in_d0 = pool_dot_q0;

assign fil_col4_cast_fu_1579_p1 = fil_col4_reg_602;

assign fil_col8_cast_fu_1938_p1 = fil_col8_reg_695;

assign fil_col_1_fu_1239_p2 = (fil_col_reg_534 + 3'd1);

assign fil_col_2_fu_1589_p2 = (fil_col4_reg_602 + 2'd1);

assign fil_col_3_fu_1948_p2 = (fil_col8_reg_695 + 3'd1);

assign fil_col_cast_fu_1229_p1 = fil_col_reg_534;

assign fil_row5_cast_fu_1658_p1 = fil_row5_reg_624;

assign fil_row9_cast_fu_1968_p1 = fil_row9_reg_718;

assign fil_row_1_fu_1265_p2 = (fil_row_reg_557 + 3'd1);

assign fil_row_2_fu_1668_p2 = (fil_row5_reg_624 + 2'd1);

assign fil_row_3_fu_1978_p2 = (fil_row9_reg_718 + 3'd1);

assign fil_row_cast_fu_1255_p1 = fil_row_reg_557;

assign grp_fu_3280_p0 = 25'd10000;

assign grp_fu_3280_p1 = grp_fu_3280_p10;

assign grp_fu_3280_p10 = tmp_135_fu_1277_p3;

assign i_1_fu_1790_p2 = (i_reg_647 + 5'd1);

assign i_2_fu_2189_p2 = (i1_reg_752 + 5'd1);

assign i_3_fu_2596_p2 = (i2_reg_831 + 5'd1);

assign i_4_fu_2900_p2 = (i4_reg_911 + 7'd1);

assign i_5_fu_3056_p2 = (max_index_1_reg_947 + 4'd1);

assign in_r_address0 = tmp_162_cast_fu_1324_p1;

assign j1_cast_fu_2628_p1 = j1_reg_854;

assign j_1_fu_2253_p2 = (j_reg_763 + 3'd1);

assign j_2_fu_2638_p2 = (j1_reg_854 + 3'd1);

assign j_3_fu_2936_p2 = (j3_reg_935 + 7'd1);

assign j_4_fu_3092_p2 = (j4_reg_994 + 7'd1);

assign k1_cast_fu_2701_p1 = k1_reg_865;

assign k_1_fu_2711_p2 = (k1_reg_865 + 3'd1);

assign k_2_fu_2351_p2 = (k_reg_774 + 3'd1);

assign l_1_fu_2389_p2 = (l_reg_786 + 2'd1);

assign l_cast_fu_2379_p1 = l_reg_786;

assign m_1_fu_2468_p2 = (m_reg_808 + 2'd1);

assign m_cast_fu_2458_p1 = m_reg_808;

assign max_index_1_cast_fu_3046_p1 = max_index_1_reg_947;

assign max_index_2_fu_3259_p3 = ((sel_tmp2_fu_3253_p2[0:0] === 1'b1) ? max_index_1_cast_reg_3937 : sel_tmp_fu_3241_p3);

assign max_value_10_to_int_fu_2493_p1 = max_value_8_reg_819;

assign max_value_11_fu_2576_p3 = ((tmp_113_fu_2571_p2[0:0] === 1'b1) ? reg_1065 : max_value_8_reg_819);

assign max_value_12_fu_3273_p3 = ((sel_tmp2_reg_4000[0:0] === 1'b1) ? reg_1053 : max_value_15_fu_3266_p3);

assign max_value_15_fu_3266_p1 = fc_dot_q0;

assign max_value_15_fu_3266_p3 = ((tmp_72_reg_3978[0:0] === 1'b1) ? max_value_15_fu_3266_p1 : max_value_s_reg_971);

assign max_value_16_to_int_fu_1711_p1 = reg_1065;

assign max_value_17_to_int_fu_3158_p1 = reg_1053;

assign max_value_18_to_int_fu_2511_p1 = reg_1065;

assign max_value_4_to_int_fu_1693_p1 = max_value_4_reg_635;

assign max_value_5_fu_1776_p3 = ((tmp_94_fu_1771_p2[0:0] === 1'b1) ? reg_1065 : max_value_4_reg_635);

assign max_value_to_int_fu_3176_p1 = max_value_s_reg_971;

assign n_1_fu_2004_p2 = (n_reg_741 + 3'd1);

assign next_mul_fu_2584_p2 = (phi_mul_reg_842 + 9'd25);

assign notlhs1_fu_2150_p2 = ((tmp_77_fu_2136_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign notlhs2_fu_1729_p2 = ((tmp_86_fu_1697_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign notlhs3_fu_1747_p2 = ((tmp_88_fu_1715_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign notlhs4_fu_2862_p2 = ((tmp_95_fu_2848_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign notlhs5_fu_3014_p2 = ((tmp_100_fu_3000_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign notlhs6_fu_2529_p2 = ((tmp_105_fu_2497_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign notlhs7_fu_2547_p2 = ((tmp_107_fu_2515_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign notlhs8_fu_3194_p2 = ((tmp_114_fu_3162_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign notlhs9_fu_3212_p2 = ((tmp_116_fu_3180_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign notlhs_fu_1350_p2 = ((tmp_14_fu_1336_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign notrhs1_fu_2156_p2 = ((tmp_149_fu_2146_p1 == 52'd0) ? 1'b1 : 1'b0);

assign notrhs2_fu_1735_p2 = ((tmp_151_fu_1707_p1 == 52'd0) ? 1'b1 : 1'b0);

assign notrhs3_fu_1753_p2 = ((tmp_152_fu_1725_p1 == 52'd0) ? 1'b1 : 1'b0);

assign notrhs4_fu_2868_p2 = ((tmp_154_fu_2858_p1 == 52'd0) ? 1'b1 : 1'b0);

assign notrhs5_fu_3020_p2 = ((tmp_167_fu_3010_p1 == 52'd0) ? 1'b1 : 1'b0);

assign notrhs6_fu_2535_p2 = ((tmp_174_fu_2507_p1 == 52'd0) ? 1'b1 : 1'b0);

assign notrhs7_fu_2553_p2 = ((tmp_175_fu_2525_p1 == 52'd0) ? 1'b1 : 1'b0);

assign notrhs8_fu_3200_p2 = ((tmp_190_fu_3172_p1 == 52'd0) ? 1'b1 : 1'b0);

assign notrhs9_fu_3218_p2 = ((tmp_191_fu_3190_p1 == 52'd0) ? 1'b1 : 1'b0);

assign notrhs_fu_1356_p2 = ((tmp_106_fu_1346_p1 == 52'd0) ? 1'b1 : 1'b0);

assign p_shl10_fu_1835_p4 = {{{{56'd1}, {i_reg_647}}}, {3'd0}};

assign p_shl11_fu_1845_p4 = {{{{58'd1}, {i_reg_647}}}, {1'd0}};

assign p_shl12_cast_fu_1519_p3 = {{tmp_48_fu_1515_p1}, {4'd0}};

assign p_shl12_fu_2195_p4 = {{{{55'd1}, {i1_reg_752}}}, {4'd0}};

assign p_shl13_cast_fu_1531_p3 = {{tmp_55_fu_1527_p1}, {1'd0}};

assign p_shl13_fu_2205_p4 = {{{{58'd1}, {i1_reg_752}}}, {1'd0}};

assign p_shl14_cast_fu_1480_p3 = {{tmp_35_fu_1476_p1}, {5'd0}};

assign p_shl14_fu_2221_p4 = {{{{54'd1}, {i1_reg_752}}}, {5'd0}};

assign p_shl15_cast_fu_1492_p3 = {{tmp_37_fu_1488_p1}, {2'd0}};

assign p_shl15_fu_2231_p4 = {{{{57'd1}, {i1_reg_752}}}, {2'd0}};

assign p_shl16_cast_fu_1613_p3 = {{tmp_132_fu_1609_p1}, {5'd0}};

assign p_shl16_fu_2602_p4 = {{{{55'd1}, {i2_reg_831}}}, {4'd0}};

assign p_shl17_cast_fu_1625_p3 = {{tmp_133_fu_1621_p1}, {2'd0}};

assign p_shl17_fu_2612_p4 = {{{{58'd1}, {i2_reg_831}}}, {1'd0}};

assign p_shl18_fu_2014_p4 = {{{{57'd2}, {n_reg_741}}}, {4'd0}};

assign p_shl19_fu_2024_p4 = {{{{60'd2}, {n_reg_741}}}, {1'd0}};

assign p_shl1_fu_1395_p4 = {{{{57'd2}, {channel1_reg_568}}}, {4'd0}};

assign p_shl22_cast_fu_1886_p3 = {{tmp_87_fu_1882_p1}, {5'd0}};

assign p_shl23_cast_fu_1898_p3 = {{tmp_89_fu_1894_p1}, {2'd0}};

assign p_shl24_cast_fu_2110_p3 = {{tmp_187_reg_3640}, {2'd0}};

assign p_shl26_cast_fu_2058_p3 = {{tmp_178_reg_3614}, {4'd0}};

assign p_shl27_cast_fu_2065_p3 = {{tmp_179_reg_3619}, {1'd0}};

assign p_shl2_fu_1136_p4 = {{{{60'd2}, {channel_reg_486}}}, {1'd0}};

assign p_shl34_cast_fu_2319_p3 = {{tmp_126_fu_2315_p1}, {4'd0}};

assign p_shl35_cast_fu_2331_p3 = {{tmp_127_fu_2327_p1}, {1'd0}};

assign p_shl36_cast_fu_2280_p3 = {{tmp_117_fu_2276_p1}, {5'd0}};

assign p_shl37_cast_fu_2292_p3 = {{tmp_123_fu_2288_p1}, {2'd0}};

assign p_shl38_cast_fu_2413_p3 = {{tmp_163_fu_2409_p1}, {5'd0}};

assign p_shl39_cast_fu_2425_p3 = {{tmp_164_fu_2421_p1}, {2'd0}};

assign p_shl3_fu_1110_p4 = {{{{56'd2}, {channel_reg_486}}}, {5'd0}};

assign p_shl42_cast_fu_2657_p3 = {{tmp_145_fu_2653_p1}, {4'd0}};

assign p_shl43_cast_fu_2669_p3 = {{tmp_146_fu_2665_p1}, {1'd0}};

assign p_shl44_cast_fu_2802_p1 = tmp_155_fu_2794_p3;

assign p_shl45_cast_fu_2814_p1 = tmp_156_fu_2806_p3;

assign p_shl46_cast_fu_2950_p1 = tmp_168_fu_2942_p3;

assign p_shl47_cast_fu_2962_p1 = tmp_169_fu_2954_p3;

assign p_shl48_cast_fu_3106_p1 = tmp_192_fu_3098_p3;

assign p_shl49_cast_fu_3118_p1 = tmp_193_fu_3110_p3;

assign p_shl4_fu_1120_p4 = {{{{59'd2}, {channel_reg_486}}}, {2'd0}};

assign p_shl5_cast_fu_1177_p3 = {{tmp_16_fu_1173_p1}, {5'd0}};

assign p_shl5_fu_1405_p4 = {{{{60'd2}, {channel1_reg_568}}}, {1'd0}};

assign p_shl6_cast_fu_1189_p3 = {{tmp_17_fu_1185_p1}, {2'd0}};

assign p_shl6_fu_1809_p4 = {{{{54'd1}, {i_reg_647}}}, {5'd0}};

assign p_shl7_cast_fu_1305_p3 = {{tmp_140_fu_1301_p1}, {2'd0}};

assign p_shl7_fu_1819_p4 = {{{{57'd1}, {i_reg_647}}}, {2'd0}};

assign p_shl8_fu_1421_p4 = {{{{56'd2}, {channel1_reg_568}}}, {5'd0}};

assign p_shl9_fu_1431_p4 = {{{{59'd2}, {channel1_reg_568}}}, {2'd0}};

assign p_shl_fu_2683_p3 = {{j1_reg_854}, {2'd0}};

assign row_1_fu_1209_p2 = (row_reg_510 + 5'd1);

assign row_2_fu_1551_p2 = (row3_reg_590 + 4'd1);

assign row_3_fu_1918_p2 = (row7_reg_671 + 4'd1);

assign row_4_fu_2788_p2 = (row4_reg_899 + 9'd1);

assign sel_tmp1_fu_3248_p2 = (tmp_72_reg_3978 ^ 1'd1);

assign sel_tmp2_fu_3253_p2 = (tmp_122_fu_3236_p2 & sel_tmp1_fu_3248_p2);

assign sel_tmp_fu_3241_p3 = ((tmp_72_reg_3978[0:0] === 1'b1) ? 32'd0 : max_index_reg_959);

assign storemerge1_fu_2171_p3 = ((tmp_85_fu_2166_p2[0:0] === 1'b1) ? 64'd0 : reg_1053);

assign storemerge2_fu_2885_p3 = ((tmp_99_fu_2880_p2[0:0] === 1'b1) ? 64'd0 : reg_1053);

assign storemerge3_fu_3037_p3 = ((tmp_104_fu_3032_p2[0:0] === 1'b1) ? 64'd0 : reg_1053);

assign storemerge_fu_1371_p3 = ((tmp_51_fu_1366_p2[0:0] === 1'b1) ? 64'd0 : reg_1053);

assign tmp8_cast_fu_2697_p1 = tmp8_fu_2691_p2;

assign tmp8_fu_2691_p2 = (p_shl_fu_2683_p3 + j1_cast_fu_2628_p1);

assign tmp9_fu_2731_p2 = (k1_cast_fu_2701_p1 + phi_mul_reg_842);

assign tmp_100_fu_3000_p4 = {{tmp_56_to_int_fu_2996_p1[62:52]}};

assign tmp_101_fu_1569_p2 = (tmp_12_cast_fu_1565_p1 + tmp_42_reg_3450);

assign tmp_102_fu_3026_p2 = (notrhs5_fu_3020_p2 | notlhs5_fu_3014_p2);

assign tmp_104_fu_3032_p2 = (tmp_102_fu_3026_p2 & tmp_103_reg_3932);

assign tmp_105_fu_2497_p4 = {{max_value_10_to_int_fu_2493_p1[62:52]}};

assign tmp_106_fu_1346_p1 = tmp_13_to_int_fu_1332_p1[51:0];

assign tmp_107_fu_2515_p4 = {{max_value_18_to_int_fu_2511_p1[62:52]}};

assign tmp_108_fu_2622_p2 = (p_shl16_fu_2602_p4 - p_shl17_fu_2612_p4);

assign tmp_109_fu_2541_p2 = (notrhs6_fu_2535_p2 | notlhs6_fu_2529_p2);

assign tmp_10_fu_1873_p1 = col6_reg_659;

assign tmp_110_fu_2559_p2 = (notrhs7_fu_2553_p2 | notlhs7_fu_2547_p2);

assign tmp_111_fu_2565_p2 = (tmp_109_fu_2541_p2 & tmp_110_fu_2559_p2);

assign tmp_113_fu_2571_p2 = (tmp_111_fu_2565_p2 & tmp_112_reg_3766);

assign tmp_114_fu_3162_p4 = {{max_value_17_to_int_fu_3158_p1[62:52]}};

assign tmp_115_fu_2271_p2 = (tmp_22_fu_2267_p1 + tmp_76_reg_3693);

assign tmp_116_fu_3180_p4 = {{max_value_to_int_fu_3176_p1[62:52]}};

assign tmp_117_fu_2276_p1 = tmp_115_fu_2271_p2[11:0];

assign tmp_118_fu_3206_p2 = (notrhs8_fu_3200_p2 | notlhs8_fu_3194_p2);

assign tmp_119_fu_3224_p2 = (notrhs9_fu_3218_p2 | notlhs9_fu_3212_p2);

assign tmp_11_fu_1557_p3 = {{row3_reg_590}, {1'd0}};

assign tmp_120_fu_3230_p2 = (tmp_118_fu_3206_p2 & tmp_119_fu_3224_p2);

assign tmp_122_fu_3236_p2 = (tmp_120_fu_3230_p2 & tmp_121_reg_3995);

assign tmp_123_fu_2288_p1 = tmp_115_fu_2271_p2[14:0];

assign tmp_124_fu_2300_p2 = (p_shl36_cast_fu_2280_p3 - p_shl37_cast_fu_2292_p3);

assign tmp_125_fu_2310_p2 = (tmp_23_fu_2306_p1 + tmp_65_reg_3688);

assign tmp_126_fu_2315_p1 = tmp_125_fu_2310_p2[10:0];

assign tmp_127_fu_2327_p1 = tmp_125_fu_2310_p2[13:0];

assign tmp_128_fu_2339_p2 = (p_shl34_cast_fu_2319_p3 - p_shl35_cast_fu_2331_p3);

assign tmp_129_fu_1928_p2 = (tmp_96_reg_3552 + tmp_24_cast_fu_1924_p1);

assign tmp_12_cast_fu_1565_p1 = tmp_11_fu_1557_p3;

assign tmp_12_fu_1168_p2 = (tmp_2_reg_3311 + tmp_4_fu_1164_p1);

assign tmp_130_fu_1643_p2 = (tmp_57_reg_3455 + tmp_25_cast_fu_1639_p1);

assign tmp_131_fu_1604_p2 = (tmp_s_reg_3431 + tmp_27_fu_1600_p1);

assign tmp_132_fu_1609_p1 = tmp_131_fu_1604_p2[11:0];

assign tmp_133_fu_1621_p1 = tmp_131_fu_1604_p2[14:0];

assign tmp_134_fu_1633_p2 = (p_shl16_cast_fu_1613_p3 - p_shl17_cast_fu_1625_p3);

assign tmp_135_fu_1277_p3 = {{tmp_15_reg_3355}, {tmp_28_fu_1271_p2}};

assign tmp_136_cast_fu_1224_p1 = tmp_61_fu_1219_p2;

assign tmp_138_fu_1292_p2 = (tmp_30_fu_1288_p1 + tmp_5_reg_3316);

assign tmp_139_fu_1297_p1 = tmp_138_fu_1292_p2[13:0];

assign tmp_13_to_int_fu_1332_p1 = reg_1053;

assign tmp_140_fu_1301_p1 = tmp_138_fu_1292_p2[11:0];

assign tmp_141_fu_1313_p2 = (p_shl7_cast_fu_1305_p3 + tmp_139_fu_1297_p1);

assign tmp_142_fu_1319_p2 = (tmp_17_cast_reg_3360 + tmp_141_fu_1313_p2);

assign tmp_143_cast_fu_1574_p1 = tmp_101_fu_1569_p2;

assign tmp_143_fu_2771_p2 = (tmp_32_cast_fu_2767_p1 + 8'd120);

assign tmp_144_fu_2648_p2 = (tmp_34_fu_2644_p1 + tmp_108_reg_3789);

assign tmp_145_fu_2653_p1 = tmp_144_fu_2648_p2[10:0];

assign tmp_146_fu_2665_p1 = tmp_144_fu_2648_p2[13:0];

assign tmp_147_fu_2677_p2 = (p_shl42_cast_fu_2657_p3 - p_shl43_cast_fu_2669_p3);

assign tmp_148_fu_2369_p2 = (tmp_37_cast_fu_2365_p1 + tmp_124_reg_3712);

assign tmp_149_fu_2146_p1 = tmp_38_to_int_fu_2132_p1[51:0];

assign tmp_14_fu_1336_p4 = {{tmp_13_to_int_fu_1332_p1[62:52]}};

assign tmp_150_fu_1683_p2 = (tmp_134_reg_3486 + tmp_44_cast_fu_1679_p1);

assign tmp_151_fu_1707_p1 = max_value_4_to_int_fu_1693_p1[51:0];

assign tmp_152_fu_1725_p1 = max_value_16_to_int_fu_1711_p1[51:0];

assign tmp_153_cast_fu_1933_p1 = tmp_129_fu_1928_p2;

assign tmp_153_fu_2919_p2 = (tmp_33_cast_fu_2915_p1 + 9'd240);

assign tmp_154_cast_fu_1648_p1 = tmp_130_fu_1643_p2;

assign tmp_154_fu_2858_p1 = tmp_49_to_int_fu_2844_p1[51:0];

assign tmp_155_fu_2794_p3 = {{row4_reg_899}, {7'd0}};

assign tmp_156_fu_2806_p3 = {{row4_reg_899}, {3'd0}};

assign tmp_157_fu_2818_p2 = (p_shl44_cast_fu_2802_p1 - p_shl45_cast_fu_2814_p1);

assign tmp_158_fu_2824_p2 = (tmp_157_fu_2818_p2 + 17'd48000);

assign tmp_159_fu_2830_p2 = (tmp_158_fu_2824_p2 + tmp_32_cast1_reg_3838);

assign tmp_15_fu_1245_p2 = (col_reg_498 + fil_col_cast_fu_1229_p1);

assign tmp_160_fu_2721_p2 = (tmp_147_reg_3802 + tmp_57_cast_fu_2717_p1);

assign tmp_161_fu_2443_p2 = (tmp_128_reg_3717 + tmp_61_cast_fu_2439_p1);

assign tmp_162_cast_fu_1324_p1 = $signed(tmp_137_reg_3373);

assign tmp_162_fu_2404_p2 = (tmp_76_reg_3693 + tmp_63_fu_2400_p1);

assign tmp_163_fu_2409_p1 = tmp_162_fu_2404_p2[11:0];

assign tmp_164_fu_2421_p1 = tmp_162_fu_2404_p2[14:0];

assign tmp_165_fu_2433_p2 = (p_shl38_cast_fu_2413_p3 - p_shl39_cast_fu_2425_p3);

assign tmp_166_cast_fu_1328_p1 = tmp_142_reg_3378;

assign tmp_166_fu_3075_p2 = ($signed(tmp_47_cast_fu_3071_p1) + $signed(9'd360));

assign tmp_167_cast_fu_2777_p1 = tmp_143_fu_2771_p2;

assign tmp_167_fu_3010_p1 = tmp_56_to_int_fu_2996_p1[51:0];

assign tmp_168_fu_2942_p3 = {{j3_reg_935}, {7'd0}};

assign tmp_169_fu_2954_p3 = {{j3_reg_935}, {3'd0}};

assign tmp_16_fu_1173_p1 = tmp_12_fu_1168_p2[11:0];

assign tmp_170_fu_2966_p2 = (p_shl46_cast_fu_2950_p1 - p_shl47_cast_fu_2962_p1);

assign tmp_171_fu_2976_p2 = ($signed(tmp_189_cast_fu_2972_p1) + $signed(17'd96000));

assign tmp_172_cast_fu_2374_p1 = tmp_148_fu_2369_p2;

assign tmp_172_fu_2982_p2 = (tmp_171_fu_2976_p2 + tmp_33_cast1_reg_3894);

assign tmp_173_cast_fu_1688_p1 = tmp_150_fu_1683_p2;

assign tmp_173_fu_2483_p2 = (tmp_165_reg_3748 + tmp_76_cast_fu_2479_p1);

assign tmp_174_cast_fu_2925_p1 = tmp_153_fu_2919_p2;

assign tmp_174_fu_2507_p1 = max_value_10_to_int_fu_2493_p1[51:0];

assign tmp_175_fu_2525_p1 = max_value_18_to_int_fu_2511_p1[51:0];

assign tmp_176_fu_2034_p2 = (p_shl18_fu_2014_p4 - p_shl19_fu_2024_p4);

assign tmp_177_fu_2040_p2 = (tmp_176_fu_2034_p2 + tmp_41_reg_3578);

assign tmp_178_fu_2045_p1 = tmp_177_fu_2040_p2[10:0];

assign tmp_179_cast_fu_2840_p1 = tmp_159_reg_3861;

assign tmp_179_fu_2049_p1 = tmp_177_fu_2040_p2[13:0];

assign tmp_17_cast_fu_1251_p1 = fil_col_reg_534;

assign tmp_17_fu_1185_p1 = tmp_12_fu_1168_p2[14:0];

assign tmp_180_cast_fu_2726_p1 = tmp_160_fu_2721_p2;

assign tmp_180_fu_2072_p2 = (p_shl26_cast_fu_2058_p3 - p_shl27_cast_fu_2065_p3);

assign tmp_181_cast_fu_2448_p1 = tmp_161_fu_2443_p2;

assign tmp_181_fu_2078_p2 = (tmp_180_fu_2072_p2 + tmp_65_cast_reg_3596);

assign tmp_182_fu_2053_p2 = (tmp_25_reg_3539 + tmp_78_fu_2010_p1);

assign tmp_183_fu_2083_p2 = tmp_182_reg_3624 << 64'd2;

assign tmp_184_fu_2088_p2 = (tmp_182_reg_3624 + tmp_183_fu_2083_p2);

assign tmp_185_fu_2093_p2 = (tmp_184_fu_2088_p2 + tmp_66_reg_3601);

assign tmp_186_cast_fu_3081_p1 = tmp_166_fu_3075_p2;

assign tmp_186_fu_2098_p1 = tmp_185_fu_2093_p2[13:0];

assign tmp_187_fu_2102_p1 = tmp_185_fu_2093_p2[11:0];

assign tmp_188_fu_2117_p2 = (tmp_186_reg_3635 + p_shl24_cast_fu_2110_p3);

assign tmp_189_cast_fu_2972_p1 = $signed(tmp_170_fu_2966_p2);

assign tmp_189_fu_2122_p2 = (tmp_188_fu_2117_p2 + tmp_42_cast_reg_3583);

assign tmp_190_fu_3172_p1 = max_value_17_to_int_fu_3158_p1[51:0];

assign tmp_191_cast_fu_2992_p1 = tmp_172_reg_3917;

assign tmp_191_fu_3190_p1 = max_value_to_int_fu_3176_p1[51:0];

assign tmp_192_cast_fu_2488_p1 = tmp_173_fu_2483_p2;

assign tmp_192_fu_3098_p3 = {{j4_reg_994}, {7'd0}};

assign tmp_193_fu_3110_p3 = {{j4_reg_994}, {3'd0}};

assign tmp_194_fu_3122_p2 = (p_shl48_cast_fu_3106_p1 - p_shl49_cast_fu_3118_p1);

assign tmp_195_fu_3132_p2 = ($signed(tmp_208_cast_fu_3128_p1) + $signed(18'd144000));

assign tmp_196_fu_3138_p2 = (tmp_195_fu_3132_p2 + tmp_47_cast1_reg_3950);

assign tmp_198_cast_fu_2106_p1 = tmp_181_reg_3630;

assign tmp_19_fu_1197_p2 = (p_shl5_cast_fu_1177_p3 - p_shl6_cast_fu_1189_p3);

assign tmp_1_fu_1101_p3 = {{61'd2}, {channel_reg_486}};

assign tmp_205_cast_fu_2127_p1 = tmp_189_fu_2122_p2;

assign tmp_208_cast_fu_3128_p1 = $signed(tmp_194_fu_3122_p2);

assign tmp_20_fu_1796_p3 = {{59'd1}, {i_reg_647}};

assign tmp_210_cast_fu_3154_p1 = tmp_196_reg_3973;

assign tmp_21_fu_2259_p3 = {{j_reg_763}, {1'd0}};

assign tmp_22_fu_2267_p1 = tmp_21_fu_2259_p3;

assign tmp_23_fu_2306_p1 = j_reg_763;

assign tmp_24_cast_fu_1924_p1 = row7_reg_671;

assign tmp_24_fu_1829_p2 = (p_shl6_fu_1809_p4 - p_shl7_fu_1819_p4);

assign tmp_25_cast_fu_1639_p1 = row3_reg_590;

assign tmp_25_fu_1855_p2 = (p_shl10_fu_1835_p4 - p_shl11_fu_1845_p4);

assign tmp_26_fu_1595_p2 = (fil_col4_cast_fu_1579_p1 + tmp_7_reg_3445);

assign tmp_27_fu_1600_p1 = tmp_26_fu_1595_p2;

assign tmp_28_fu_1271_p2 = (row_reg_510 + fil_row_cast_fu_1255_p1);

assign tmp_29_fu_1471_p2 = (tmp_8_fu_1467_p1 + tmp_s_reg_3431);

assign tmp_2_fu_1130_p2 = (p_shl3_fu_1110_p4 - p_shl4_fu_1120_p4);

assign tmp_30_fu_1288_p1 = fil_row_reg_557;

assign tmp_32_cast1_fu_2763_p1 = col4_reg_876;

assign tmp_32_cast_fu_2767_p1 = col4_reg_876;

assign tmp_33_cast1_fu_2911_p1 = i4_reg_911;

assign tmp_33_cast_fu_2915_p1 = i4_reg_911;

assign tmp_34_fu_2644_p1 = j1_reg_854;

assign tmp_35_fu_1476_p1 = tmp_29_fu_1471_p2[11:0];

assign tmp_36_fu_2357_p3 = {{k_reg_774}, {1'd0}};

assign tmp_37_cast_fu_2365_p1 = tmp_36_fu_2357_p3;

assign tmp_37_fu_1488_p1 = tmp_29_fu_1471_p2[14:0];

assign tmp_38_to_int_fu_2132_p1 = reg_1053;

assign tmp_39_fu_1362_p2 = (notrhs_reg_3403 | notlhs_reg_3398);

assign tmp_40_fu_1954_p2 = (fil_col8_cast_fu_1938_p1 + col6_reg_659);

assign tmp_41_fu_1960_p1 = tmp_40_fu_1954_p2;

assign tmp_42_cast_fu_1964_p1 = fil_col8_reg_695;

assign tmp_42_fu_1500_p2 = (p_shl14_cast_fu_1480_p3 - p_shl15_cast_fu_1492_p3);

assign tmp_43_fu_1674_p2 = (fil_row5_cast_fu_1658_p1 + tmp_11_reg_3468);

assign tmp_44_cast_fu_1679_p1 = tmp_43_fu_1674_p2;

assign tmp_44_fu_1510_p2 = (tmp_9_fu_1506_p1 + tmp_6_reg_3426);

assign tmp_47_cast1_fu_3067_p1 = max_index_1_reg_947;

assign tmp_47_cast_fu_3071_p1 = max_index_1_reg_947;

assign tmp_48_fu_1515_p1 = tmp_44_fu_1510_p2[10:0];

assign tmp_49_to_int_fu_2844_p1 = reg_1053;

assign tmp_4_fu_1164_p1 = col_reg_498;

assign tmp_51_fu_1366_p2 = (tmp_39_fu_1362_p2 & tmp_45_reg_3408);

assign tmp_52_fu_2835_p1 = row4_reg_899;

assign tmp_55_fu_1527_p1 = tmp_44_fu_1510_p2[13:0];

assign tmp_56_to_int_fu_2996_p1 = reg_1053;

assign tmp_57_cast_fu_2717_p1 = k1_reg_865;

assign tmp_57_fu_1539_p2 = (p_shl12_cast_fu_1519_p3 - p_shl13_cast_fu_1531_p3);

assign tmp_59_fu_2737_p2 = (tmp8_cast_reg_3807 + tmp9_fu_2731_p2);

assign tmp_5_fu_1146_p2 = (p_shl3_fu_1110_p4 - p_shl2_fu_1136_p4);

assign tmp_60_fu_2742_p1 = tmp_59_reg_3825;

assign tmp_61_cast_fu_2439_p1 = k_reg_774;

assign tmp_61_fu_1219_p2 = (tmp_19_reg_3329 + tmp_cast_fu_1215_p1);

assign tmp_62_fu_2395_p2 = (l_cast_fu_2379_p1 + tmp_21_reg_3707);

assign tmp_63_fu_2400_p1 = tmp_62_fu_2395_p2;

assign tmp_64_fu_1984_p2 = (fil_row9_cast_fu_1968_p1 + row7_reg_671);

assign tmp_65_cast_fu_1990_p1 = tmp_64_fu_1984_p2;

assign tmp_65_fu_2215_p2 = (p_shl12_fu_2195_p4 - p_shl13_fu_2205_p4);

assign tmp_66_fu_1994_p1 = fil_row9_reg_718;

assign tmp_6_fu_1415_p2 = (p_shl1_fu_1395_p4 - p_shl5_fu_1405_p4);

assign tmp_72_fu_3143_p2 = ((max_index_1_reg_947 == 4'd0) ? 1'b1 : 1'b0);

assign tmp_75_fu_2474_p2 = (m_cast_fu_2458_p1 + tmp_36_reg_3730);

assign tmp_76_cast_fu_2479_p1 = tmp_75_fu_2474_p2;

assign tmp_76_fu_2241_p2 = (p_shl14_fu_2221_p4 - p_shl15_fu_2231_p4);

assign tmp_77_fu_2136_p4 = {{tmp_38_to_int_fu_2132_p1[62:52]}};

assign tmp_78_fu_2010_p1 = n_reg_741;

assign tmp_7_fu_1459_p3 = {{col2_reg_579}, {1'd0}};

assign tmp_82_fu_1877_p2 = (tmp_24_reg_3534 + tmp_10_fu_1873_p1);

assign tmp_83_fu_2162_p2 = (notrhs1_reg_3665 | notlhs1_reg_3660);

assign tmp_85_fu_2166_p2 = (tmp_83_fu_2162_p2 & tmp_84_reg_3670);

assign tmp_86_fu_1697_p4 = {{max_value_4_to_int_fu_1693_p1[62:52]}};

assign tmp_87_fu_1882_p1 = tmp_82_fu_1877_p2[11:0];

assign tmp_88_fu_1715_p4 = {{max_value_16_to_int_fu_1711_p1[62:52]}};

assign tmp_89_fu_1894_p1 = tmp_82_fu_1877_p2[14:0];

assign tmp_8_fu_1467_p1 = tmp_7_fu_1459_p3;

assign tmp_90_fu_1741_p2 = (notrhs2_fu_1735_p2 | notlhs2_fu_1729_p2);

assign tmp_91_fu_1759_p2 = (notrhs3_fu_1753_p2 | notlhs3_fu_1747_p2);

assign tmp_92_fu_1765_p2 = (tmp_90_fu_1741_p2 & tmp_91_fu_1759_p2);

assign tmp_94_fu_1771_p2 = (tmp_92_fu_1765_p2 & tmp_93_reg_3504);

assign tmp_95_fu_2848_p4 = {{tmp_49_to_int_fu_2844_p1[62:52]}};

assign tmp_96_fu_1906_p2 = (p_shl22_cast_fu_1886_p3 - p_shl23_cast_fu_1898_p3);

assign tmp_97_fu_2874_p2 = (notrhs4_fu_2868_p2 | notlhs4_fu_2862_p2);

assign tmp_99_fu_2880_p2 = (tmp_97_fu_2874_p2 & tmp_98_reg_3881);

assign tmp_9_fu_1506_p1 = col2_reg_579;

assign tmp_cast_fu_1215_p1 = row_reg_510;

assign tmp_fu_1085_p1 = index[24:0];

assign tmp_s_fu_1441_p2 = (p_shl8_fu_1421_p4 - p_shl9_fu_1431_p4);

always @ (posedge ap_clk) begin
    tmp_2_reg_3311[1:0] <= 2'b00;
    tmp_5_reg_3316[0] <= 1'b0;
    tmp_19_reg_3329[1:0] <= 2'b00;
    tmp_17_cast_reg_3360[13:3] <= 11'b00000000000;
    tmp_6_reg_3426[0] <= 1'b0;
    tmp_s_reg_3431[1:0] <= 2'b00;
    tmp_7_reg_3445[0] <= 1'b0;
    tmp_42_reg_3450[2:0] <= 3'b000;
    tmp_57_reg_3455[0] <= 1'b0;
    tmp_11_reg_3468[0] <= 1'b0;
    tmp_134_reg_3486[1:0] <= 2'b00;
    tmp_24_reg_3534[1:0] <= 2'b00;
    tmp_25_reg_3539[0] <= 1'b0;
    tmp_96_reg_3552[1:0] <= 2'b00;
    tmp_41_reg_3578[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    tmp_42_cast_reg_3583[13:3] <= 11'b00000000000;
    tmp_65_cast_reg_3596[14:4] <= 11'b00000000000;
    tmp_66_reg_3601[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    tmp_65_reg_3688[0] <= 1'b0;
    tmp_76_reg_3693[1:0] <= 2'b00;
    tmp_21_reg_3707[0] <= 1'b0;
    tmp_124_reg_3712[2:0] <= 3'b000;
    tmp_128_reg_3717[0] <= 1'b0;
    tmp_36_reg_3730[0] <= 1'b0;
    tmp_165_reg_3748[1:0] <= 2'b00;
    tmp_108_reg_3789[0] <= 1'b0;
    tmp_147_reg_3802[0] <= 1'b0;
    tmp8_cast_reg_3807[8:5] <= 4'b0000;
    tmp_32_cast1_reg_3838[16:7] <= 10'b0000000000;
    fc_bias_addr_reg_3843[8] <= 1'b0;
    tmp_33_cast1_reg_3894[16:7] <= 10'b0000000000;
    max_index_1_cast_reg_3937[31:4] <= 28'b0000000000000000000000000000;
    tmp_47_cast1_reg_3950[17:4] <= 14'b00000000000000;
end

endmodule //lenet5_ap2
