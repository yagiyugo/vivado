-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.2
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity lenet5_ap2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    index : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_bias_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    conv_bias_V_ce0 : OUT STD_LOGIC;
    conv_bias_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_dot_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    conv_dot_V_ce0 : OUT STD_LOGIC;
    conv_dot_V_we0 : OUT STD_LOGIC;
    conv_dot_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    conv_dot_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_weight_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    conv_weight_ce0 : OUT STD_LOGIC;
    conv_weight_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    in_V_address0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    in_V_ce0 : OUT STD_LOGIC;
    in_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pool_dot_V_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    pool_dot_V_ce0 : OUT STD_LOGIC;
    pool_dot_V_we0 : OUT STD_LOGIC;
    pool_dot_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pool_dot_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    fc_in_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    fc_in_V_ce0 : OUT STD_LOGIC;
    fc_in_V_we0 : OUT STD_LOGIC;
    fc_in_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    fc_in_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    fc_dot_V_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    fc_dot_V_ce0 : OUT STD_LOGIC;
    fc_dot_V_we0 : OUT STD_LOGIC;
    fc_dot_V_d0 : OUT STD_LOGIC_VECTOR (unknown downto unknown);
    fc_dot_V_q0 : IN STD_LOGIC_VECTOR (unknown downto unknown);
    fc_dot_V_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    fc_dot_V_ce1 : OUT STD_LOGIC;
    fc_dot_V_we1 : OUT STD_LOGIC;
    fc_dot_V_d1 : OUT STD_LOGIC_VECTOR (unknown downto unknown);
    fc_dot_V_q1 : IN STD_LOGIC_VECTOR (unknown downto unknown);
    fc_weight_address0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    fc_weight_ce0 : OUT STD_LOGIC;
    fc_weight_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    fc_bias_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    fc_bias_V_ce0 : OUT STD_LOGIC;
    fc_bias_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of lenet5_ap2 is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "lenet5_ap2,hls_ip_2017_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.711500,HLS_SYN_LAT=2709062,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=1,HLS_SYN_FF=14816,HLS_SYN_LUT=10174}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state77 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state78 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state79 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state80 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state81 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state82 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state83 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state84 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state85 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state86 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state87 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state88 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state89 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state90 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state91 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state92 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state93 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state94 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state95 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state96 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state97 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state98 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state99 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state100 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state101 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state102 : STD_LOGIC_VECTOR (112 downto 0) := "00000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state103 : STD_LOGIC_VECTOR (112 downto 0) := "00000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state104 : STD_LOGIC_VECTOR (112 downto 0) := "00000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state105 : STD_LOGIC_VECTOR (112 downto 0) := "00000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state106 : STD_LOGIC_VECTOR (112 downto 0) := "00000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state107 : STD_LOGIC_VECTOR (112 downto 0) := "00000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state108 : STD_LOGIC_VECTOR (112 downto 0) := "00000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state109 : STD_LOGIC_VECTOR (112 downto 0) := "00001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state110 : STD_LOGIC_VECTOR (112 downto 0) := "00010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state111 : STD_LOGIC_VECTOR (112 downto 0) := "00100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state112 : STD_LOGIC_VECTOR (112 downto 0) := "01000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state113 : STD_LOGIC_VECTOR (112 downto 0) := "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_4A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001010";
    constant ap_const_lv32_6D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101101";
    constant ap_const_lv32_6F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv32_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000101";
    constant ap_const_lv32_4B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001011";
    constant ap_const_lv32_4C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001100";
    constant ap_const_lv32_4D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001101";
    constant ap_const_lv32_4E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001110";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_51 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010001";
    constant ap_const_lv32_52 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010010";
    constant ap_const_lv32_53 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010011";
    constant ap_const_lv32_55 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010101";
    constant ap_const_lv32_56 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010110";
    constant ap_const_lv32_57 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010111";
    constant ap_const_lv32_58 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011000";
    constant ap_const_lv32_59 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011001";
    constant ap_const_lv32_5B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011011";
    constant ap_const_lv32_5C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011100";
    constant ap_const_lv32_5D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011101";
    constant ap_const_lv32_5E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011110";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_61 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100001";
    constant ap_const_lv32_62 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100010";
    constant ap_const_lv32_63 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100011";
    constant ap_const_lv32_64 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100100";
    constant ap_const_lv32_65 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100101";
    constant ap_const_lv32_66 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100110";
    constant ap_const_lv32_67 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100111";
    constant ap_const_lv32_68 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101000";
    constant ap_const_lv32_69 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101001";
    constant ap_const_lv32_6E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101110";
    constant ap_const_lv32_70 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_54 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010100";
    constant ap_const_lv32_5A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011010";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_6A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101010";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv61_2 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv56_2 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv60_2 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv59_2 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv5_1C : STD_LOGIC_VECTOR (4 downto 0) := "11100";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv57_2 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv11_7EA : STD_LOGIC_VECTOR (10 downto 0) := "11111101010";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv12_16 : STD_LOGIC_VECTOR (11 downto 0) := "000000010110";
    constant ap_const_lv12_FEA : STD_LOGIC_VECTOR (11 downto 0) := "111111101010";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv52_0 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000000";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_36 : STD_LOGIC_VECTOR (11 downto 0) := "000000110110";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv59_1 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv56_1 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv58_1 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv54_1 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv57_1 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv55_1 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv9_19 : STD_LOGIC_VECTOR (8 downto 0) := "000011001";
    constant ap_const_lv7_78 : STD_LOGIC_VECTOR (6 downto 0) := "1111000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv8_78 : STD_LOGIC_VECTOR (7 downto 0) := "01111000";
    constant ap_const_lv9_190 : STD_LOGIC_VECTOR (8 downto 0) := "110010000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv18_190 : STD_LOGIC_VECTOR (17 downto 0) := "000000000110010000";
    constant ap_const_lv19_27100 : STD_LOGIC_VECTOR (18 downto 0) := "0100111000100000000";
    constant ap_const_lv7_54 : STD_LOGIC_VECTOR (6 downto 0) := "1010100";
    constant ap_const_lv9_F0 : STD_LOGIC_VECTOR (8 downto 0) := "011110000";
    constant ap_const_lv16_190 : STD_LOGIC_VECTOR (15 downto 0) := "0000000110010000";
    constant ap_const_lv19_4E200 : STD_LOGIC_VECTOR (18 downto 0) := "1001110001000000000";
    constant ap_const_lv9_168 : STD_LOGIC_VECTOR (8 downto 0) := "101101000";
    constant ap_const_lv17_15300 : STD_LOGIC_VECTOR (16 downto 0) := "10101001100000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv25_2710 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000010011100010000";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (112 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal reg_1094 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal reg_1098 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal ap_CS_fsm_state51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal ap_CS_fsm_state59 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state59 : signal is "none";
    signal ap_CS_fsm_state69 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state69 : signal is "none";
    signal grp_fu_1047_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_1103 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal tmp_12_reg_4723 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal ap_CS_fsm_state65 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state65 : signal is "none";
    signal tmp_34_reg_5126 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state75 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state75 : signal is "none";
    signal ap_CS_fsm_state110 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state110 : signal is "none";
    signal ap_CS_fsm_state112 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state112 : signal is "none";
    signal sel_tmp46_reg_5607 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_137_reg_5613 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_1127_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_reg_4501 : STD_LOGIC_VECTOR (24 downto 0);
    signal channel_1_fu_1137_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal channel_1_reg_4509 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal exitcond1_fu_1131_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_1172_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_2_reg_4525 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_fu_1188_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_reg_4530 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_5_fu_1194_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_5_reg_4535 : STD_LOGIC_VECTOR (30 downto 0);
    signal col_1_fu_1204_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal col_1_reg_4543 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_17_fu_1243_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_17_reg_4548 : STD_LOGIC_VECTOR (16 downto 0);
    signal exitcond3_fu_1198_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal row_1_fu_1255_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal row_1_reg_4556 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal conv_dot_V_addr_reg_4561 : STD_LOGIC_VECTOR (15 downto 0);
    signal exitcond6_fu_1249_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal fil_col_1_fu_1285_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal fil_col_1_reg_4569 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal tmp_17_cast_fu_1291_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_17_cast_reg_4574 : STD_LOGIC_VECTOR (13 downto 0);
    signal exitcond10_fu_1279_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_1295_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_18_reg_4579 : STD_LOGIC_VECTOR (4 downto 0);
    signal fil_row_1_fu_1311_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal fil_row_1_reg_4587 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal tmp_148_fu_1348_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_148_reg_4592 : STD_LOGIC_VECTOR (13 downto 0);
    signal exitcond14_fu_1305_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_4494_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_151_reg_4597 : STD_LOGIC_VECTOR (24 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal tmp_152_fu_1378_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_152_reg_4612 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal tmp_153_reg_4617 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1058_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_154_reg_4624 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_fu_1382_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_reg_4630 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_9_fu_1390_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_9_reg_4636 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_11_fu_1396_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_11_reg_4642 : STD_LOGIC_VECTOR (31 downto 0);
    signal storemerge1_fu_1450_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal storemerge1_reg_4648 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal p_Val2_2_18_fu_1467_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Val2_2_18_reg_4653 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal max_value_load_reg_4658 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal channel_2_fu_1488_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal channel_2_reg_4666 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_s_fu_1514_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_reg_4671 : STD_LOGIC_VECTOR (63 downto 0);
    signal exitcond2_fu_1482_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_1540_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_11_reg_4677 : STD_LOGIC_VECTOR (63 downto 0);
    signal col_2_fu_1552_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal col_2_reg_4685 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal tmp_7_fu_1558_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_7_reg_4690 : STD_LOGIC_VECTOR (4 downto 0);
    signal exitcond5_fu_1546_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_fu_1599_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_37_reg_4695 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_52_fu_1638_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_52_reg_4700 : STD_LOGIC_VECTOR (14 downto 0);
    signal row_3_fu_1650_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal row_3_reg_4708 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal tmp_10_fu_1656_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_10_reg_4713 : STD_LOGIC_VECTOR (4 downto 0);
    signal exitcond9_fu_1644_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1066_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v_assign_ph_fu_1714_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal fil_col_3_fu_1731_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal fil_col_3_reg_4736 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal tmp_143_fu_1775_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_143_reg_4741 : STD_LOGIC_VECTOR (16 downto 0);
    signal exitcond19_fu_1725_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_114_fu_1785_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_114_reg_4746 : STD_LOGIC_VECTOR (14 downto 0);
    signal isneg_reg_4751 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_126_fu_1820_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_126_reg_4757 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_44_fu_1824_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_reg_4762 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_fu_1836_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_reg_4768 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_fu_1854_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_reg_4774 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_50_fu_1862_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_50_reg_4780 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_139_reg_4786 : STD_LOGIC_VECTOR (6 downto 0);
    signal fil_row_3_fu_1893_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal fil_row_3_reg_4794 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal exitcond25_fu_1887_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1121_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_64_reg_4804 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal dp_4_fu_1950_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal dp_4_reg_4810 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal p_0_i1_fu_1954_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_0_i1_reg_4815 : STD_LOGIC_VECTOR (63 downto 0);
    signal notlhs_fu_1978_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs_reg_4821 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal notrhs_fu_1984_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notrhs_reg_4826 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1040_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_104_reg_4831 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_value_5_fu_2060_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal man_V_2_fu_2084_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_2_reg_4841 : STD_LOGIC_VECTOR (53 downto 0);
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal tmp_133_fu_2091_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_133_reg_4846 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_53_fu_2095_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_53_reg_4852 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_fu_2115_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_reg_4858 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp14_fu_2131_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp14_reg_4864 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel3_fu_2228_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel3_reg_4870 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal channel_3_fu_2246_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal channel_3_reg_4878 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal exitcond4_fu_2240_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_2285_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_24_reg_4895 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_25_fu_2311_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_25_reg_4900 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_28_fu_2317_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_28_reg_4905 : STD_LOGIC_VECTOR (30 downto 0);
    signal col_3_fu_2327_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal col_3_reg_4913 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal tmp_76_fu_2366_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_76_reg_4918 : STD_LOGIC_VECTOR (16 downto 0);
    signal exitcond8_fu_2321_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal row_2_fu_2378_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal row_2_reg_4926 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal conv_dot_V_addr_2_reg_4931 : STD_LOGIC_VECTOR (15 downto 0);
    signal exitcond13_fu_2372_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal fil_col_2_fu_2408_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal fil_col_2_reg_4939 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal tmp_38_cast_fu_2414_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_38_cast_reg_4944 : STD_LOGIC_VECTOR (13 downto 0);
    signal exitcond18_fu_2402_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_fu_2424_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_40_reg_4949 : STD_LOGIC_VECTOR (63 downto 0);
    signal fil_row_2_fu_2438_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal fil_row_2_reg_4957 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal tmp_58_fu_2444_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_58_reg_4962 : STD_LOGIC_VECTOR (63 downto 0);
    signal exitcond24_fu_2432_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_60_cast_fu_2454_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_60_cast_reg_4967 : STD_LOGIC_VECTOR (14 downto 0);
    signal sample_fu_2464_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal sample_reg_4975 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state48 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state48 : signal is "none";
    signal tmp_198_fu_2474_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_198_reg_4980 : STD_LOGIC_VECTOR (63 downto 0);
    signal exitcond29_fu_2458_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_208_fu_2510_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_208_reg_4986 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_209_fu_2514_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_209_reg_4991 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_202_fu_2533_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_202_reg_4996 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_state49 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state49 : signal is "none";
    signal tmp_203_fu_2537_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_203_reg_5001 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_211_fu_2561_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_211_reg_5006 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state50 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state50 : signal is "none";
    signal tmp_213_reg_5021 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_214_reg_5028 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev3_fu_2596_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev3_reg_5033 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_31_fu_2606_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_31_reg_5039 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_35_fu_2612_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_35_reg_5045 : STD_LOGIC_VECTOR (31 downto 0);
    signal storemerge5_fu_2666_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal storemerge5_reg_5051 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal p_Val2_6_31_fu_2683_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Val2_6_31_reg_5056 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state54 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal max_value_6_load_reg_5061 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state56 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state56 : signal is "none";
    signal i_1_fu_2704_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_1_reg_5069 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_60_fu_2730_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_60_reg_5074 : STD_LOGIC_VECTOR (63 downto 0);
    signal exitcond7_fu_2698_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_61_fu_2756_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_61_reg_5080 : STD_LOGIC_VECTOR (63 downto 0);
    signal j_1_fu_2768_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_1_reg_5088 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state57 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state57 : signal is "none";
    signal tmp_20_fu_2774_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_20_reg_5093 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond12_fu_2762_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_107_fu_2815_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_107_reg_5098 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_111_fu_2854_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_111_reg_5103 : STD_LOGIC_VECTOR (14 downto 0);
    signal k_2_fu_2866_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal k_2_reg_5111 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state58 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state58 : signal is "none";
    signal tmp_32_fu_2872_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_32_reg_5116 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond17_fu_2860_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v_assign_1_ph_fu_2930_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state66 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state66 : signal is "none";
    signal l_1_fu_2947_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal l_1_reg_5139 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state67 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state67 : signal is "none";
    signal tmp_185_fu_2991_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_185_reg_5144 : STD_LOGIC_VECTOR (16 downto 0);
    signal exitcond27_fu_2941_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_176_fu_3001_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_176_reg_5149 : STD_LOGIC_VECTOR (14 downto 0);
    signal isneg_1_reg_5154 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_179_fu_3036_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_179_reg_5160 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_77_fu_3040_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_77_reg_5165 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_88_fu_3052_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_88_reg_5171 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_1_fu_3070_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_1_reg_5177 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_91_fu_3078_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_91_reg_5183 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_181_reg_5189 : STD_LOGIC_VECTOR (6 downto 0);
    signal m_1_fu_3109_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal m_1_reg_5197 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state68 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state68 : signal is "none";
    signal exitcond28_fu_3103_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_96_reg_5207 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state70 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state70 : signal is "none";
    signal dp_7_fu_3166_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal dp_7_reg_5213 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state76 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state76 : signal is "none";
    signal p_0_i2_fu_3170_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_0_i2_reg_5218 : STD_LOGIC_VECTOR (63 downto 0);
    signal notlhs2_fu_3194_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs2_reg_5224 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state77 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state77 : signal is "none";
    signal notrhs2_fu_3200_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notrhs2_reg_5229 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_120_reg_5234 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_value_s_fu_3276_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state78 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state78 : signal is "none";
    signal man_V_5_fu_3300_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_5_reg_5244 : STD_LOGIC_VECTOR (53 downto 0);
    signal ap_CS_fsm_state79 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state79 : signal is "none";
    signal tmp_180_fu_3307_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_180_reg_5249 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_97_fu_3311_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_97_reg_5255 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp24_fu_3331_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp24_reg_5261 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp29_fu_3347_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp29_reg_5267 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel7_fu_3444_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel7_reg_5273 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state80 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state80 : signal is "none";
    signal next_mul_fu_3456_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal next_mul_reg_5278 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state82 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state82 : signal is "none";
    signal i_2_fu_3468_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_2_reg_5286 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_93_fu_3494_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_93_reg_5291 : STD_LOGIC_VECTOR (63 downto 0);
    signal exitcond11_fu_3462_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_2_fu_3510_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_2_reg_5299 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state83 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state83 : signal is "none";
    signal tmp_159_fu_3557_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_159_reg_5304 : STD_LOGIC_VECTOR (14 downto 0);
    signal exitcond16_fu_3504_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp112_cast_fu_3569_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp112_cast_reg_5309 : STD_LOGIC_VECTOR (8 downto 0);
    signal k_1_fu_3583_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal k_1_reg_5317 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state84 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state84 : signal is "none";
    signal tmp_54_fu_3595_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_54_reg_5322 : STD_LOGIC_VECTOR (8 downto 0);
    signal exitcond23_fu_3577_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal col_4_fu_3624_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal col_4_reg_5335 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state86 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state86 : signal is "none";
    signal tmp_15_cast1_fu_3635_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_15_cast1_reg_5340 : STD_LOGIC_VECTOR (18 downto 0);
    signal exitcond15_fu_3618_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal fc_bias_V_addr_reg_5345 : STD_LOGIC_VECTOR (8 downto 0);
    signal row_4_fu_3664_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal row_4_reg_5358 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state87 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state87 : signal is "none";
    signal next_mul1_fu_3675_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal next_mul1_reg_5363 : STD_LOGIC_VECTOR (17 downto 0);
    signal exitcond22_fu_3658_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_173_reg_5378 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state88 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state88 : signal is "none";
    signal grp_fu_1080_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_174_reg_5385 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1088_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev1_reg_5390 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_16_fu_3705_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_16_reg_5396 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_22_fu_3711_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_22_reg_5402 : STD_LOGIC_VECTOR (31 downto 0);
    signal storemerge3_fu_3765_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state89 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state89 : signal is "none";
    signal p_Val2_s_44_fu_3801_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Val2_s_44_reg_5413 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state90 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state90 : signal is "none";
    signal col_5_fu_3819_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal col_5_reg_5421 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state92 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state92 : signal is "none";
    signal tmp_23_cast1_fu_3830_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_23_cast1_reg_5426 : STD_LOGIC_VECTOR (18 downto 0);
    signal exitcond20_fu_3813_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal fc_bias_V_addr_1_reg_5431 : STD_LOGIC_VECTOR (8 downto 0);
    signal fc_dot_V_addr_1_reg_5436 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_5_fu_3859_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal row_5_reg_5445 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state93 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state93 : signal is "none";
    signal next_mul2_fu_3870_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal next_mul2_reg_5450 : STD_LOGIC_VECTOR (15 downto 0);
    signal exitcond26_fu_3853_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_193_reg_5465 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state94 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state94 : signal is "none";
    signal tmp_194_reg_5472 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev2_reg_5477 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_27_fu_3900_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_27_reg_5483 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_29_fu_3906_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_29_reg_5489 : STD_LOGIC_VECTOR (31 downto 0);
    signal storemerge4_fu_3960_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state95 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state95 : signal is "none";
    signal p_Val2_1_48_fu_3996_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Val2_1_48_reg_5500 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state96 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state96 : signal is "none";
    signal max_index_1_cast_fu_4008_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_index_1_cast_reg_5505 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state98 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state98 : signal is "none";
    signal col_6_fu_4018_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal col_6_reg_5514 : STD_LOGIC_VECTOR (3 downto 0);
    signal fc_bias_V_addr_2_reg_5519 : STD_LOGIC_VECTOR (8 downto 0);
    signal exitcond21_fu_4012_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal row_6_fu_4054_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal row_6_reg_5532 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state99 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state99 : signal is "none";
    signal next_mul3_fu_4060_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal next_mul3_reg_5537 : STD_LOGIC_VECTOR (15 downto 0);
    signal exitcond_fu_4048_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal weight_3_reg_5547 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state100 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state100 : signal is "none";
    signal tmp_226_fu_4121_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_226_reg_5552 : STD_LOGIC_VECTOR (5 downto 0);
    signal isNeg_reg_5558 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state101 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state101 : signal is "none";
    signal sh_assign_1_fu_4143_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal sh_assign_1_reg_5569 : STD_LOGIC_VECTOR (5 downto 0);
    signal storemerge6_fu_4164_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal storemerge6_reg_5574 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state102 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state102 : signal is "none";
    signal p_Val2_19_fu_4190_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state103 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state103 : signal is "none";
    signal p_Val2_4_fu_4196_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_4_reg_5585 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state104 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state104 : signal is "none";
    signal tmp_86_fu_4203_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_86_reg_5591 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state105 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state105 : signal is "none";
    signal tmp_66_fu_4208_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_66_reg_5597 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state106 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state106 : signal is "none";
    signal fc_dot_V_load_1_reg_5602 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp46_fu_4220_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_137_fu_4254_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal dp_11_fu_4292_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal dp_11_reg_5619 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state111 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state111 : signal is "none";
    signal p_0_i_fu_4296_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_0_i_reg_5624 : STD_LOGIC_VECTOR (63 downto 0);
    signal notlhs4_fu_4338_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs4_reg_5630 : STD_LOGIC_VECTOR (0 downto 0);
    signal notrhs4_fu_4344_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notrhs4_reg_5635 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs5_fu_4350_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs5_reg_5640 : STD_LOGIC_VECTOR (0 downto 0);
    signal notrhs5_fu_4356_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notrhs5_reg_5645 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_130_reg_5650 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_value_4_fu_4468_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state113 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state113 : signal is "none";
    signal max_index_2_fu_4486_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal channel_reg_550 : STD_LOGIC_VECTOR (2 downto 0);
    signal col_reg_562 : STD_LOGIC_VECTOR (4 downto 0);
    signal row_reg_574 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal fil_col_reg_586 : STD_LOGIC_VECTOR (2 downto 0);
    signal fil_row_reg_597 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal channel1_reg_608 : STD_LOGIC_VECTOR (2 downto 0);
    signal col2_reg_619 : STD_LOGIC_VECTOR (3 downto 0);
    signal row3_reg_630 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal v_assign_reg_642 : STD_LOGIC_VECTOR (63 downto 0);
    signal fil_col4_reg_652 : STD_LOGIC_VECTOR (1 downto 0);
    signal op1_assign_reg_663 : STD_LOGIC_VECTOR (63 downto 0);
    signal fil_row5_reg_675 : STD_LOGIC_VECTOR (1 downto 0);
    signal channel6_reg_686 : STD_LOGIC_VECTOR (4 downto 0);
    signal col7_reg_698 : STD_LOGIC_VECTOR (3 downto 0);
    signal row8_reg_710 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal fil_col9_reg_722 : STD_LOGIC_VECTOR (2 downto 0);
    signal fil_row2_reg_733 : STD_LOGIC_VECTOR (2 downto 0);
    signal sample1_reg_744 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state53 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal i_reg_755 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_reg_766 : STD_LOGIC_VECTOR (2 downto 0);
    signal k_reg_777 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state81 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state81 : signal is "none";
    signal v_assign_1_reg_789 : STD_LOGIC_VECTOR (63 downto 0);
    signal l_reg_799 : STD_LOGIC_VECTOR (1 downto 0);
    signal op1_assign_1_reg_810 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_reg_822 : STD_LOGIC_VECTOR (1 downto 0);
    signal i1_reg_833 : STD_LOGIC_VECTOR (4 downto 0);
    signal phi_mul_reg_844 : STD_LOGIC_VECTOR (8 downto 0);
    signal j1_reg_856 : STD_LOGIC_VECTOR (2 downto 0);
    signal k1_reg_867 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state85 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state85 : signal is "none";
    signal col4_reg_878 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state91 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state91 : signal is "none";
    signal p_Val2_18_reg_889 : STD_LOGIC_VECTOR (31 downto 0);
    signal row2_reg_902 : STD_LOGIC_VECTOR (8 downto 0);
    signal phi_mul1_reg_913 : STD_LOGIC_VECTOR (17 downto 0);
    signal col5_reg_924 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state97 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state97 : signal is "none";
    signal p_Val2_25_reg_935 : STD_LOGIC_VECTOR (31 downto 0);
    signal row4_reg_948 : STD_LOGIC_VECTOR (6 downto 0);
    signal phi_mul2_reg_959 : STD_LOGIC_VECTOR (15 downto 0);
    signal d_assign_1_reg_970 : STD_LOGIC_VECTOR (63 downto 0);
    signal max_index_reg_980 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_index_1_reg_992 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Val2_37_reg_1004 : STD_LOGIC_VECTOR (31 downto 0);
    signal row5_reg_1017 : STD_LOGIC_VECTOR (6 downto 0);
    signal phi_mul3_reg_1029 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1_fu_1143_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_150_cast_fu_1270_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_176_cast_fu_1370_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_180_cast_fu_1374_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_157_cast_fu_1673_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_187_cast_fu_1913_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_168_cast_fu_2236_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_19_fu_2252_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_167_cast_fu_2393_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_209_cast_fu_2583_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_215_cast_fu_2588_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_186_cast_fu_2889_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_202_cast_fu_3129_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_193_cast_fu_3452_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_192_cast_fu_3609_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_55_fu_3614_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_181_cast_fu_3649_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_191_cast_fu_3692_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_35_fu_3670_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_188_cast_fu_3844_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_201_cast_fu_3887_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_198_cast_fu_4039_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_221_fu_4094_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal max_value_fu_266 : STD_LOGIC_VECTOR (63 downto 0);
    signal max_value_6_fu_270 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal p_Val2_2_cast_19_fu_1475_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_6_cast_32_fu_2691_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_cast_45_fu_3809_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_1_cast_49_fu_4004_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1040_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1040_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1047_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_CS_fsm_state60 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state60 : signal is "none";
    signal ap_CS_fsm_state107 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state107 : signal is "none";
    signal grp_fu_1107_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_shl3_fu_1152_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_shl4_fu_1162_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_shl2_fu_1178_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_4_fu_1210_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_13_fu_1214_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_14_fu_1219_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_16_fu_1231_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl5_cast_fu_1223_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_shl6_cast_fu_1235_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_cast_fu_1261_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_56_fu_1265_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal fil_col_cast_fu_1275_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_26_fu_1317_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_144_fu_1321_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_146_fu_1330_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl7_cast_fu_1334_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_145_fu_1326_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_147_fu_1342_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal fil_row_cast_fu_1301_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_27_fu_1353_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_149_fu_1359_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sh_fu_1387_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp_fu_1412_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_fu_1417_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_v_fu_1422_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp4_fu_1434_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_12_fu_1407_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp2_fu_1428_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp6_fu_1446_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_10_fu_1402_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp5_fu_1438_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_83_fu_1458_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_1113_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_2_cast_fu_1462_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_shl1_fu_1494_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_shl5_fu_1504_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_shl8_fu_1520_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_shl9_fu_1530_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_8_fu_1566_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_31_fu_1570_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_33_fu_1575_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_36_fu_1587_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl14_cast_fu_1579_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_shl15_cast_fu_1591_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_9_fu_1605_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_38_fu_1609_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_41_fu_1614_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_51_fu_1626_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl12_cast_fu_1618_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl13_cast_fu_1630_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_11_cast_fu_1664_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_81_fu_1668_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal res_V_16_fu_1678_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_V_fu_1682_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal exp_V_15_fu_1692_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Result_s_fu_1698_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal dp_fu_1710_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal fil_col4_cast_fu_1721_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_46_fu_1737_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_47_fu_1742_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_124_fu_1746_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_141_fu_1751_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_142_fu_1763_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl16_cast_fu_1755_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_shl17_cast_fu_1767_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_41_cast_fu_1781_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal ireg_V_fu_1790_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_V_fu_1806_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_116_fu_1794_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_42_fu_1816_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_fu_1830_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_48_fu_1842_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_49_fu_1848_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal fil_row5_cast_fu_1883_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_62_fu_1899_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_63_cast_fu_1904_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_163_fu_1908_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal res_V_17_fu_1918_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_V_4_fu_1922_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal exp_V_16_fu_1932_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Result_1_fu_1938_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_0_i1_to_int_fu_1961_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_82_fu_1964_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_164_fu_1974_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal op1_assign_to_int_fu_1990_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_84_fu_1994_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_165_fu_2004_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal notrhs1_fu_2018_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs1_fu_2012_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_87_fu_2008_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_92_fu_2024_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_98_fu_2030_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_105_fu_2036_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_106_fu_2041_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge1_fu_2047_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal op1_assign_mux_fu_2052_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_43_fu_2067_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal p_Result_2_fu_2074_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_1_fu_2078_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal sel_tmp19_demorgan_fu_2105_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp9_fu_2109_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp34_demorgan_fu_2120_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_2100_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp13_fu_2125_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_cast_fu_2137_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_65_fu_2140_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_68_fu_2144_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal sel_tmp7_fu_2165_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp10_fu_2175_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_74_fu_2160_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_140_fu_2149_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp12_fu_2185_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp11_fu_2180_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal storemerge_fu_2153_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp8_fu_2170_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_2196_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel_fu_2189_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel1_fu_2201_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_cond1_fu_2208_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_fu_2222_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel2_fu_2214_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_shl6_fu_2265_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_shl7_fu_2275_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_shl10_fu_2291_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_shl11_fu_2301_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_6_fu_2333_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_63_fu_2337_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_71_fu_2342_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_73_fu_2354_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl22_cast_fu_2346_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_shl23_cast_fu_2358_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_25_cast_fu_2384_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_112_fu_2388_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal fil_col9_cast_fu_2398_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_39_fu_2418_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal fil_row2_cast_fu_2428_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_59_fu_2448_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_80_fu_2470_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_shl18_fu_2479_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_shl19_fu_2489_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_206_fu_2499_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_207_fu_2505_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_199_fu_2518_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_200_fu_2523_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_201_fu_2528_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_shl24_cast_fu_2541_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl25_cast_fu_2548_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_210_fu_2555_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl28_cast_fu_2566_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_204_fu_2573_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_205_fu_2578_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_212_fu_2592_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sh_3_fu_2602_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp36_fu_2628_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp37_fu_2633_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp40_v_fu_2638_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp39_fu_2650_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_36_fu_2623_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp38_fu_2644_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp41_fu_2662_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_34_fu_2618_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp40_fu_2654_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_161_fu_2674_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Val2_6_cast_fu_2678_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_shl12_fu_2710_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_shl13_fu_2720_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_shl14_fu_2736_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_shl15_fu_2746_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_21_fu_2782_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_95_fu_2786_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_99_fu_2791_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_102_fu_2803_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl36_cast_fu_2795_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_shl37_cast_fu_2807_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_22_fu_2821_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_108_fu_2825_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_109_fu_2830_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_110_fu_2842_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl34_cast_fu_2834_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl35_cast_fu_2846_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_33_cast_fu_2880_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_160_fu_2884_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal res_V_fu_2894_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_V_2_fu_2898_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal exp_V_17_fu_2908_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Result_3_fu_2914_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal dp_2_fu_2926_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal l_cast_fu_2937_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_78_fu_2953_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_79_fu_2958_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_178_fu_2962_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_183_fu_2967_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_184_fu_2979_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl38_cast_fu_2971_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_shl39_cast_fu_2983_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_71_cast_fu_2997_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal ireg_V_1_fu_3006_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_V_1_fu_3022_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_177_fu_3010_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_72_fu_3032_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_1_fu_3046_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_89_fu_3058_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_90_fu_3064_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal m_cast_fu_3099_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_94_fu_3115_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_95_cast_fu_3120_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_195_fu_3124_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal res_V_18_fu_3134_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_V_7_fu_3138_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal exp_V_18_fu_3148_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Result_4_fu_3154_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_0_i2_to_int_fu_3177_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_113_fu_3180_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_196_fu_3190_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal op1_assign_1_to_int_fu_3206_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_115_fu_3210_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_197_fu_3220_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal notrhs3_fu_3234_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs3_fu_3228_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_117_fu_3224_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_118_fu_3240_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_119_fu_3246_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_121_fu_3252_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_122_fu_3257_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge2_fu_3263_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal op1_assign_1_mux_fu_3268_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_75_fu_3283_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal p_Result_5_fu_3290_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_4_fu_3294_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal sel_tmp58_demorgan_fu_3321_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp23_fu_3325_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp73_demorgan_fu_3336_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp1_fu_3316_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp28_fu_3341_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_1_cast_fu_3353_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_100_fu_3356_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_101_fu_3360_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal sel_tmp21_fu_3381_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp25_fu_3391_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_103_fu_3376_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_182_fu_3365_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp27_fu_3401_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp26_fu_3396_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal storemerge7_fu_3369_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp22_fu_3386_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_fu_3412_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel4_fu_3405_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel5_fu_3417_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_cond4_fu_3424_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond5_fu_3438_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel6_fu_3430_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_shl16_fu_3474_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_shl17_fu_3484_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_29_fu_3524_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_156_fu_3528_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_157_fu_3533_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_158_fu_3545_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl42_cast_fu_3537_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl43_cast_fu_3549_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl_fu_3516_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal j1_cast_fu_3500_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp109_fu_3563_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal k1_cast_fu_3573_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp110_fu_3589_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_56_cast_fu_3600_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_175_fu_3604_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_15_cast_fu_3639_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_155_fu_3643_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal phi_mul44_cast_fu_3654_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_170_fu_3681_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_171_fu_3687_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_172_fu_3697_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sh_1_fu_3701_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp15_fu_3727_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp16_fu_3732_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp79_v_fu_3737_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp18_fu_3749_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_23_fu_3722_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp17_fu_3743_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp20_fu_3761_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_17_fu_3717_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp19_fu_3753_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_167_fu_3773_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_168_fu_3777_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Val2_s_43_fu_3781_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_169_fu_3793_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_cast_fu_3787_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_23_cast_fu_3834_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_166_fu_3838_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal phi_mul46_cast_fu_3849_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_190_fu_3876_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_191_fu_3882_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_192_fu_3892_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_27_fu_3900_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sh_2_fu_3896_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_29_fu_3906_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp30_fu_3922_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp31_fu_3927_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp88_v_fu_3932_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp33_fu_3944_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_30_fu_3917_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp32_fu_3938_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp35_fu_3956_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_28_fu_3912_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp34_fu_3948_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_187_fu_3968_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_188_fu_3972_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Val2_1_fu_3976_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_189_fu_3988_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_1_cast_fu_3982_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_30_cast_fu_4029_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_186_fu_4033_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal phi_mul48_cast_cast_fu_4044_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_217_fu_4066_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_219_fu_4072_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_220_fu_4082_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_222_fu_4090_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_223_fu_4099_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_117_i_cast_fu_4103_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_118_i_fu_4107_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal i_op_assign_fu_4113_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_68_cast_fu_4138_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_69_fu_4152_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sh_assign_1_cast_fu_4149_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_70_fu_4158_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_70_fu_4158_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_69_fu_4152_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_224_fu_4171_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal mt_fu_4178_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_5_fu_4183_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp45_fu_4214_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp45_fu_4214_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_218_fu_4226_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_218_fu_4226_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_135_fu_4236_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_135_fu_4236_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_134_fu_4230_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_136_fu_4246_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal res_V_20_fu_4260_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_V_12_fu_4264_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal exp_V_20_fu_4274_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Result_7_fu_4280_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_0_i_to_int_fu_4303_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal d_assign_1_to_int_fu_4320_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_123_fu_4306_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_215_fu_4316_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_125_fu_4324_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_216_fu_4334_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal res_V_19_fu_4362_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_V_8_fu_4366_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal exp_V_19_fu_4376_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Result_6_fu_4382_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_127_fu_4398_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_128_fu_4402_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_129_fu_4406_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_131_fu_4412_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_132_fu_4417_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_fu_4423_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp42_fu_4443_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp43_fu_4448_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal d_assign_3_mux_fu_4428_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal dp_9_fu_4394_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sel_tmp44_fu_4454_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal sel_tmp47_fu_4461_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal max_index_mux_fu_4436_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_138_fu_4482_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp48_fu_4475_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_4494_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_4494_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (112 downto 0);
    signal grp_fu_4494_p10 : STD_LOGIC_VECTOR (24 downto 0);

    component lenet5_ap2_dcmp_6bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component lenet5_ap2_sitodpcud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component lenet5_ap2_mac_mudEe IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (14 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        din2 : IN STD_LOGIC_VECTOR (24 downto 0);
        dout : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;



begin
    lenet5_ap2_dcmp_6bkb_U1 : component lenet5_ap2_dcmp_6bkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        din0 => grp_fu_1040_p0,
        din1 => grp_fu_1040_p1,
        opcode => ap_const_lv5_2,
        dout => grp_fu_1040_p2);

    lenet5_ap2_sitodpcud_U2 : component lenet5_ap2_sitodpcud
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1047_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_1047_p1);

    lenet5_ap2_mac_mudEe_U3 : component lenet5_ap2_mac_mudEe
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 10,
        din2_WIDTH => 25,
        dout_WIDTH => 25)
    port map (
        din0 => grp_fu_4494_p0,
        din1 => grp_fu_4494_p1,
        din2 => tmp_reg_4501,
        dout => grp_fu_4494_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    channel1_reg_608_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state17) and (ap_const_lv1_1 = exitcond5_fu_1546_p2))) then 
                channel1_reg_608 <= channel_2_reg_4666;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_lv1_1 = exitcond1_fu_1131_p2))) then 
                channel1_reg_608 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    channel6_reg_686_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state16) and (ap_const_lv1_1 = exitcond2_fu_1482_p2))) then 
                channel6_reg_686 <= ap_const_lv5_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_const_lv1_1 = exitcond8_fu_2321_p2))) then 
                channel6_reg_686 <= channel_3_reg_4878;
            end if; 
        end if;
    end process;

    channel_reg_550_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_1 = exitcond3_fu_1198_p2))) then 
                channel_reg_550 <= channel_1_reg_4509;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                channel_reg_550 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    col2_reg_619_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state18) and (ap_const_lv1_1 = exitcond9_fu_1644_p2))) then 
                col2_reg_619 <= col_2_reg_4685;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state16) and (ap_const_lv1_0 = exitcond2_fu_1482_p2))) then 
                col2_reg_619 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    col4_reg_878_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state82) and (ap_const_lv1_1 = exitcond11_fu_3462_p2))) then 
                col4_reg_878 <= ap_const_lv7_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state91)) then 
                col4_reg_878 <= col_4_reg_5335;
            end if; 
        end if;
    end process;

    col5_reg_924_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state86) and (ap_const_lv1_1 = exitcond15_fu_3618_p2))) then 
                col5_reg_924 <= ap_const_lv7_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state97)) then 
                col5_reg_924 <= col_5_reg_5421;
            end if; 
        end if;
    end process;

    col7_reg_698_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state45) and (ap_const_lv1_1 = exitcond13_fu_2372_p2))) then 
                col7_reg_698 <= col_3_reg_4913;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
                col7_reg_698 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    col_reg_562_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_lv1_1 = exitcond6_fu_1249_p2))) then 
                col_reg_562 <= col_1_reg_4543;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                col_reg_562 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    d_assign_1_reg_970_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state92) and (ap_const_lv1_1 = exitcond20_fu_3813_p2))) then 
                d_assign_1_reg_970 <= max_value_6_load_reg_5061;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state113)) then 
                d_assign_1_reg_970 <= max_value_4_fu_4468_p3;
            end if; 
        end if;
    end process;

    fil_col4_reg_652_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state28) and (ap_const_lv1_1 = exitcond25_fu_1887_p2))) then 
                fil_col4_reg_652 <= fil_col_3_reg_4736;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
                fil_col4_reg_652 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    fil_col9_reg_722_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state47) and (ap_const_lv1_1 = exitcond24_fu_2432_p2))) then 
                fil_col9_reg_722 <= fil_col_2_reg_4939;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state45) and (ap_const_lv1_0 = exitcond13_fu_2372_p2))) then 
                fil_col9_reg_722 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    fil_col_reg_586_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv1_1 = exitcond14_fu_1305_p2))) then 
                fil_col_reg_586 <= fil_col_1_reg_4569;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_lv1_0 = exitcond6_fu_1249_p2))) then 
                fil_col_reg_586 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    fil_row2_reg_733_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state48) and (ap_const_lv1_1 = exitcond29_fu_2458_p2))) then 
                fil_row2_reg_733 <= fil_row_2_reg_4957;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state46) and (ap_const_lv1_0 = exitcond18_fu_2402_p2))) then 
                fil_row2_reg_733 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    fil_row5_reg_675_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state27) and (ap_const_lv1_0 = exitcond19_fu_1725_p2))) then 
                fil_row5_reg_675 <= ap_const_lv2_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
                fil_row5_reg_675 <= fil_row_3_reg_4794;
            end if; 
        end if;
    end process;

    fil_row_reg_597_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_lv1_0 = exitcond10_fu_1279_p2))) then 
                fil_row_reg_597 <= ap_const_lv3_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                fil_row_reg_597 <= fil_row_1_reg_4587;
            end if; 
        end if;
    end process;

    i1_reg_833_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state56) and (ap_const_lv1_1 = exitcond7_fu_2698_p2))) then 
                i1_reg_833 <= ap_const_lv5_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state83) and (ap_const_lv1_1 = exitcond16_fu_3504_p2))) then 
                i1_reg_833 <= i_2_reg_5286;
            end if; 
        end if;
    end process;

    i_reg_755_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state57) and (ap_const_lv1_1 = exitcond12_fu_2762_p2))) then 
                i_reg_755 <= i_1_reg_5069;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state42) and (ap_const_lv1_1 = exitcond4_fu_2240_p2))) then 
                i_reg_755 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    j1_reg_856_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state84) and (ap_const_lv1_1 = exitcond23_fu_3577_p2))) then 
                j1_reg_856 <= j_2_reg_5299;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state82) and (ap_const_lv1_0 = exitcond11_fu_3462_p2))) then 
                j1_reg_856 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    j_reg_766_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state58) and (ap_const_lv1_1 = exitcond17_fu_2860_p2))) then 
                j_reg_766 <= j_1_reg_5088;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state56) and (ap_const_lv1_0 = exitcond7_fu_2698_p2))) then 
                j_reg_766 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    k1_reg_867_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state83) and (ap_const_lv1_0 = exitcond16_fu_3504_p2))) then 
                k1_reg_867 <= ap_const_lv3_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
                k1_reg_867 <= k_1_reg_5317;
            end if; 
        end if;
    end process;

    k_reg_777_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state57) and (ap_const_lv1_0 = exitcond12_fu_2762_p2))) then 
                k_reg_777 <= ap_const_lv3_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state81)) then 
                k_reg_777 <= k_2_reg_5111;
            end if; 
        end if;
    end process;

    l_reg_799_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state68) and (ap_const_lv1_1 = exitcond28_fu_3103_p2))) then 
                l_reg_799 <= l_1_reg_5139;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
                l_reg_799 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    m_reg_822_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state67) and (ap_const_lv1_0 = exitcond27_fu_2941_p2))) then 
                m_reg_822 <= ap_const_lv2_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state78)) then 
                m_reg_822 <= m_1_reg_5197;
            end if; 
        end if;
    end process;

    max_index_1_reg_992_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state92) and (ap_const_lv1_1 = exitcond20_fu_3813_p2))) then 
                max_index_1_reg_992 <= ap_const_lv4_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state113)) then 
                max_index_1_reg_992 <= col_6_reg_5514;
            end if; 
        end if;
    end process;

    max_value_6_fu_270_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state67) and (ap_const_lv1_1 = exitcond27_fu_2941_p2))) then 
                max_value_6_fu_270 <= v_assign_1_reg_789;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state42) and (ap_const_lv1_1 = exitcond4_fu_2240_p2))) then 
                max_value_6_fu_270 <= max_value_load_reg_4658;
            end if; 
        end if;
    end process;

    op1_assign_1_reg_810_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state67) and (ap_const_lv1_0 = exitcond27_fu_2941_p2))) then 
                op1_assign_1_reg_810 <= v_assign_1_reg_789;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state78)) then 
                op1_assign_1_reg_810 <= max_value_s_fu_3276_p3;
            end if; 
        end if;
    end process;

    op1_assign_reg_663_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state27) and (ap_const_lv1_0 = exitcond19_fu_1725_p2))) then 
                op1_assign_reg_663 <= v_assign_reg_642;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
                op1_assign_reg_663 <= max_value_5_fu_2060_p3;
            end if; 
        end if;
    end process;

    p_Val2_18_reg_889_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
                p_Val2_18_reg_889 <= storemerge3_fu_3765_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state86) and (ap_const_lv1_0 = exitcond15_fu_3618_p2))) then 
                p_Val2_18_reg_889 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    p_Val2_25_reg_935_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state95)) then 
                p_Val2_25_reg_935 <= storemerge4_fu_3960_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state92) and (ap_const_lv1_0 = exitcond20_fu_3813_p2))) then 
                p_Val2_25_reg_935 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    p_Val2_37_reg_1004_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state103)) then 
                p_Val2_37_reg_1004 <= p_Val2_19_fu_4190_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state98) and (ap_const_lv1_0 = exitcond21_fu_4012_p2))) then 
                p_Val2_37_reg_1004 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    phi_mul1_reg_913_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
                phi_mul1_reg_913 <= next_mul1_reg_5363;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state86) and (ap_const_lv1_0 = exitcond15_fu_3618_p2))) then 
                phi_mul1_reg_913 <= ap_const_lv18_0;
            end if; 
        end if;
    end process;

    phi_mul2_reg_959_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state95)) then 
                phi_mul2_reg_959 <= next_mul2_reg_5450;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state92) and (ap_const_lv1_0 = exitcond20_fu_3813_p2))) then 
                phi_mul2_reg_959 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    phi_mul3_reg_1029_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state103)) then 
                phi_mul3_reg_1029 <= next_mul3_reg_5537;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state98) and (ap_const_lv1_0 = exitcond21_fu_4012_p2))) then 
                phi_mul3_reg_1029 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    phi_mul_reg_844_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state56) and (ap_const_lv1_1 = exitcond7_fu_2698_p2))) then 
                phi_mul_reg_844 <= ap_const_lv9_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state83) and (ap_const_lv1_1 = exitcond16_fu_3504_p2))) then 
                phi_mul_reg_844 <= next_mul_reg_5278;
            end if; 
        end if;
    end process;

    row2_reg_902_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
                row2_reg_902 <= row_4_reg_5358;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state86) and (ap_const_lv1_0 = exitcond15_fu_3618_p2))) then 
                row2_reg_902 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    row3_reg_630_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state17) and (ap_const_lv1_0 = exitcond5_fu_1546_p2))) then 
                row3_reg_630 <= ap_const_lv4_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
                row3_reg_630 <= row_3_reg_4708;
            end if; 
        end if;
    end process;

    row4_reg_948_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state95)) then 
                row4_reg_948 <= row_5_reg_5445;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state92) and (ap_const_lv1_0 = exitcond20_fu_3813_p2))) then 
                row4_reg_948 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    row5_reg_1017_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state103)) then 
                row5_reg_1017 <= row_6_reg_5532;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state98) and (ap_const_lv1_0 = exitcond21_fu_4012_p2))) then 
                row5_reg_1017 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    row8_reg_710_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_const_lv1_0 = exitcond8_fu_2321_p2))) then 
                row8_reg_710 <= ap_const_lv4_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
                row8_reg_710 <= row_2_reg_4926;
            end if; 
        end if;
    end process;

    row_reg_574_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_0 = exitcond3_fu_1198_p2))) then 
                row_reg_574 <= ap_const_lv5_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                row_reg_574 <= row_1_reg_4556;
            end if; 
        end if;
    end process;

    sample1_reg_744_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state47) and (ap_const_lv1_0 = exitcond24_fu_2432_p2))) then 
                sample1_reg_744 <= ap_const_lv3_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
                sample1_reg_744 <= sample_reg_4975;
            end if; 
        end if;
    end process;

    v_assign_1_reg_789_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state68) and (ap_const_lv1_1 = exitcond28_fu_3103_p2))) then 
                v_assign_1_reg_789 <= op1_assign_1_reg_810;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
                v_assign_1_reg_789 <= v_assign_1_ph_fu_2930_p3;
            end if; 
        end if;
    end process;

    v_assign_reg_642_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state28) and (ap_const_lv1_1 = exitcond25_fu_1887_p2))) then 
                v_assign_reg_642 <= op1_assign_reg_663;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
                v_assign_reg_642 <= v_assign_ph_fu_1714_p3;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                channel_1_reg_4509 <= channel_1_fu_1137_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                channel_2_reg_4666 <= channel_2_fu_1488_p2;
                max_value_load_reg_4658 <= max_value_fu_266;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state42)) then
                channel_3_reg_4878 <= channel_3_fu_2246_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                col_1_reg_4543 <= col_1_fu_1204_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then
                col_2_reg_4685 <= col_2_fu_1552_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state44)) then
                col_3_reg_4913 <= col_3_fu_2327_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state86)) then
                col_4_reg_5335 <= col_4_fu_3624_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state92)) then
                col_5_reg_5421 <= col_5_fu_3819_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state98)) then
                col_6_reg_5514 <= col_6_fu_4018_p2;
                    max_index_1_cast_reg_5505(3 downto 0) <= max_index_1_cast_fu_4008_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state45) and (ap_const_lv1_0 = exitcond13_fu_2372_p2))) then
                conv_dot_V_addr_2_reg_4931 <= tmp_167_cast_fu_2393_p1(16 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_lv1_0 = exitcond6_fu_1249_p2))) then
                conv_dot_V_addr_reg_4561 <= tmp_150_cast_fu_1270_p1(16 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state111)) then
                dp_11_reg_5619 <= dp_11_fu_4292_p1;
                p_0_i_reg_5624 <= p_0_i_fu_4296_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state36)) then
                dp_4_reg_4810 <= dp_4_fu_1950_p1;
                p_0_i1_reg_4815 <= p_0_i1_fu_1954_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state76)) then
                dp_7_reg_5213 <= dp_7_fu_3166_p1;
                p_0_i2_reg_5218 <= p_0_i2_fu_3170_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state92) and (ap_const_lv1_0 = exitcond20_fu_3813_p2))) then
                fc_bias_V_addr_1_reg_5431 <= tmp_188_cast_fu_3844_p1(9 - 1 downto 0);
                    tmp_23_cast1_reg_5426(6 downto 0) <= tmp_23_cast1_fu_3830_p1(6 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state98) and (ap_const_lv1_0 = exitcond21_fu_4012_p2))) then
                fc_bias_V_addr_2_reg_5519 <= tmp_198_cast_fu_4039_p1(9 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state86) and (ap_const_lv1_0 = exitcond15_fu_3618_p2))) then
                    fc_bias_V_addr_reg_5345(7 downto 0) <= tmp_181_cast_fu_3649_p1(9 - 1 downto 0)(7 downto 0);
                    tmp_15_cast1_reg_5340(6 downto 0) <= tmp_15_cast1_fu_3635_p1(6 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state106)) then
                fc_dot_V_load_1_reg_5602 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(fc_dot_V_q0),32));
                sel_tmp46_reg_5607 <= sel_tmp46_fu_4220_p2;
                tmp_137_reg_5613 <= tmp_137_fu_4254_p2;
                tmp_66_reg_5597 <= tmp_66_fu_4208_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                fil_col_1_reg_4569 <= fil_col_1_fu_1285_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state46)) then
                fil_col_2_reg_4939 <= fil_col_2_fu_2408_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state27)) then
                fil_col_3_reg_4736 <= fil_col_3_fu_1731_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                fil_row_1_reg_4587 <= fil_row_1_fu_1311_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state47)) then
                fil_row_2_reg_4957 <= fil_row_2_fu_2438_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state28)) then
                fil_row_3_reg_4794 <= fil_row_3_fu_1893_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state56)) then
                i_1_reg_5069 <= i_1_fu_2704_p2;
                max_value_6_load_reg_5061 <= max_value_6_fu_270;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state82)) then
                i_2_reg_5286 <= i_2_fu_3468_p2;
                next_mul_reg_5278 <= next_mul_fu_3456_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state100)) then
                isNeg_reg_5558 <= i_op_assign_fu_4113_p3(6 downto 6);
                tmp_226_reg_5552 <= tmp_226_fu_4121_p1;
                weight_3_reg_5547 <= fc_weight_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state67) and (ap_const_lv1_1 = exitcond27_fu_2941_p2))) then
                isneg_1_reg_5154 <= ireg_V_1_fu_3006_p1(63 downto 63);
                sh_amt_1_reg_5177 <= sh_amt_1_fu_3070_p3;
                tmp_176_reg_5149 <= tmp_176_fu_3001_p2;
                tmp_179_reg_5160 <= tmp_179_fu_3036_p1;
                tmp_181_reg_5189 <= sh_amt_1_fu_3070_p3(11 downto 5);
                tmp_77_reg_5165 <= tmp_77_fu_3040_p2;
                tmp_88_reg_5171 <= tmp_88_fu_3052_p2;
                tmp_91_reg_5183 <= tmp_91_fu_3078_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state27) and (ap_const_lv1_1 = exitcond19_fu_1725_p2))) then
                isneg_reg_4751 <= ireg_V_fu_1790_p1(63 downto 63);
                max_value_fu_266 <= v_assign_reg_642;
                sh_amt_reg_4774 <= sh_amt_fu_1854_p3;
                tmp_114_reg_4746 <= tmp_114_fu_1785_p2;
                tmp_126_reg_4757 <= tmp_126_fu_1820_p1;
                tmp_139_reg_4786 <= sh_amt_fu_1854_p3(11 downto 5);
                tmp_44_reg_4762 <= tmp_44_fu_1824_p2;
                tmp_45_reg_4768 <= tmp_45_fu_1836_p2;
                tmp_50_reg_4780 <= tmp_50_fu_1862_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state57)) then
                j_1_reg_5088 <= j_1_fu_2768_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state83)) then
                j_2_reg_5299 <= j_2_fu_3510_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state84)) then
                k_1_reg_5317 <= k_1_fu_3583_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state58)) then
                k_2_reg_5111 <= k_2_fu_2866_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state67)) then
                l_1_reg_5139 <= l_1_fu_2947_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state68)) then
                m_1_reg_5197 <= m_1_fu_3109_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state39)) then
                man_V_2_reg_4841 <= man_V_2_fu_2084_p3;
                sel_tmp14_reg_4864 <= sel_tmp14_fu_2131_p2;
                sel_tmp3_reg_4858 <= sel_tmp3_fu_2115_p2;
                tmp_133_reg_4846 <= tmp_133_fu_2091_p1;
                tmp_53_reg_4852 <= tmp_53_fu_2095_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state79)) then
                man_V_5_reg_5244 <= man_V_5_fu_3300_p3;
                sel_tmp24_reg_5261 <= sel_tmp24_fu_3331_p2;
                sel_tmp29_reg_5267 <= sel_tmp29_fu_3347_p2;
                tmp_180_reg_5249 <= tmp_180_fu_3307_p1;
                tmp_97_reg_5255 <= tmp_97_fu_3311_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state113)) then
                max_index_reg_980 <= max_index_2_fu_4486_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state40)) then
                newSel3_reg_4870 <= newSel3_fu_2228_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state80)) then
                newSel7_reg_5273 <= newSel7_fu_3444_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state87) and (ap_const_lv1_0 = exitcond22_fu_3658_p2))) then
                next_mul1_reg_5363 <= next_mul1_fu_3675_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state93) and (ap_const_lv1_0 = exitcond26_fu_3853_p2))) then
                next_mul2_reg_5450 <= next_mul2_fu_3870_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state99) and (ap_const_lv1_0 = exitcond_fu_4048_p2))) then
                next_mul3_reg_5537 <= next_mul3_fu_4060_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state77)) then
                notlhs2_reg_5224 <= notlhs2_fu_3194_p2;
                notrhs2_reg_5229 <= notrhs2_fu_3200_p2;
                tmp_120_reg_5234 <= grp_fu_1040_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state112)) then
                notlhs4_reg_5630 <= notlhs4_fu_4338_p2;
                notlhs5_reg_5640 <= notlhs5_fu_4350_p2;
                notrhs4_reg_5635 <= notrhs4_fu_4344_p2;
                notrhs5_reg_5645 <= notrhs5_fu_4356_p2;
                tmp_130_reg_5650 <= grp_fu_1040_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state37)) then
                notlhs_reg_4821 <= notlhs_fu_1978_p2;
                notrhs_reg_4826 <= notrhs_fu_1984_p2;
                tmp_104_reg_4831 <= grp_fu_1040_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                p_Val2_11_reg_4642 <= p_Val2_11_fu_1396_p2;
                p_Val2_9_reg_4636 <= p_Val2_9_fu_1390_p2;
                rev_reg_4630 <= rev_fu_1382_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state88)) then
                p_Val2_16_reg_5396 <= p_Val2_16_fu_3705_p2;
                p_Val2_22_reg_5402 <= p_Val2_22_fu_3711_p2;
                rev1_reg_5390 <= grp_fu_1088_p2;
                tmp_173_reg_5378 <= fc_weight_q0(7 downto 7);
                tmp_174_reg_5385 <= fc_weight_q0(6 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state96)) then
                p_Val2_1_48_reg_5500 <= p_Val2_1_48_fu_3996_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state94)) then
                p_Val2_27_reg_5483 <= p_Val2_27_fu_3900_p2;
                p_Val2_29_reg_5489 <= p_Val2_29_fu_3906_p2;
                rev2_reg_5477 <= grp_fu_1088_p2;
                tmp_193_reg_5465 <= fc_weight_q0(7 downto 7);
                tmp_194_reg_5472 <= fc_weight_q0(6 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                p_Val2_2_18_reg_4653 <= p_Val2_2_18_fu_1467_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state51)) then
                p_Val2_31_reg_5039 <= p_Val2_31_fu_2606_p2;
                p_Val2_35_reg_5045 <= p_Val2_35_fu_2612_p2;
                rev3_reg_5033 <= rev3_fu_2596_p2;
                tmp_213_reg_5021 <= conv_weight_q0(7 downto 7);
                tmp_214_reg_5028 <= conv_weight_q0(6 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state104)) then
                p_Val2_4_reg_5585 <= p_Val2_4_fu_4196_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state54)) then
                p_Val2_6_31_reg_5056 <= p_Val2_6_31_fu_2683_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state90)) then
                p_Val2_s_44_reg_5413 <= p_Val2_s_44_fu_3801_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state43))) then
                reg_1094 <= conv_bias_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state69))) then
                reg_1098 <= conv_dot_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state25) and (tmp_12_reg_4723 = ap_const_lv1_0)) or (ap_const_logic_1 = ap_CS_fsm_state35) or ((ap_const_logic_1 = ap_CS_fsm_state65) and (ap_const_lv1_0 = tmp_34_reg_5126)) or (ap_const_logic_1 = ap_CS_fsm_state75) or (ap_const_logic_1 = ap_CS_fsm_state110) or ((ap_const_logic_1 = ap_CS_fsm_state112) and (sel_tmp46_reg_5607 = ap_const_lv1_1) and (ap_const_lv1_0 = tmp_137_reg_5613)))) then
                reg_1103 <= grp_fu_1047_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                row_1_reg_4556 <= row_1_fu_1255_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state45)) then
                row_2_reg_4926 <= row_2_fu_2378_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then
                row_3_reg_4708 <= row_3_fu_1650_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state87)) then
                row_4_reg_5358 <= row_4_fu_3664_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state93)) then
                row_5_reg_5445 <= row_5_fu_3859_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state99)) then
                row_6_reg_5532 <= row_6_fu_4054_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state48)) then
                sample_reg_4975 <= sample_fu_2464_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state101)) then
                sh_assign_1_reg_5569 <= sh_assign_1_fu_4143_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                storemerge1_reg_4648 <= storemerge1_fu_1450_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state52)) then
                storemerge5_reg_5051 <= storemerge5_fu_2666_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state102)) then
                storemerge6_reg_5574 <= storemerge6_fu_4164_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state83) and (ap_const_lv1_0 = exitcond16_fu_3504_p2))) then
                    tmp112_cast_reg_5309(4 downto 0) <= tmp112_cast_fu_3569_p1(4 downto 0);
                    tmp_159_reg_5304(14 downto 1) <= tmp_159_fu_3557_p2(14 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state57) and (ap_const_lv1_0 = exitcond12_fu_2762_p2))) then
                    tmp_107_reg_5098(16 downto 3) <= tmp_107_fu_2815_p2(16 downto 3);
                    tmp_111_reg_5103(14 downto 1) <= tmp_111_fu_2854_p2(14 downto 1);
                    tmp_20_reg_5093(3 downto 1) <= tmp_20_fu_2774_p3(3 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state18) and (ap_const_lv1_0 = exitcond9_fu_1644_p2))) then
                    tmp_10_reg_4713(4 downto 1) <= tmp_10_fu_1656_p3(4 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state16) and (ap_const_lv1_0 = exitcond2_fu_1482_p2))) then
                    tmp_11_reg_4677(63 downto 1) <= tmp_11_fu_1540_p2(63 downto 1);
                    tmp_s_reg_4671(63 downto 2) <= tmp_s_fu_1514_p2(63 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then
                tmp_12_reg_4723 <= grp_fu_1066_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state27) and (ap_const_lv1_0 = exitcond19_fu_1725_p2))) then
                    tmp_143_reg_4741(16 downto 2) <= tmp_143_fu_1775_p2(16 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv1_0 = exitcond14_fu_1305_p2))) then
                tmp_148_reg_4592 <= tmp_148_fu_1348_p2;
                tmp_151_reg_4597 <= grp_fu_4494_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                tmp_152_reg_4612 <= tmp_152_fu_1378_p1;
                tmp_153_reg_4617 <= conv_weight_q0(7 downto 7);
                tmp_154_reg_4624 <= conv_weight_q0(6 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_lv1_0 = exitcond10_fu_1279_p2))) then
                    tmp_17_cast_reg_4574(2 downto 0) <= tmp_17_cast_fu_1291_p1(2 downto 0);
                tmp_18_reg_4579 <= tmp_18_fu_1295_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_0 = exitcond3_fu_1198_p2))) then
                    tmp_17_reg_4548(16 downto 2) <= tmp_17_fu_1243_p2(16 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state67) and (ap_const_lv1_0 = exitcond27_fu_2941_p2))) then
                    tmp_185_reg_5144(16 downto 2) <= tmp_185_fu_2991_p2(16 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state48) and (ap_const_lv1_0 = exitcond29_fu_2458_p2))) then
                tmp_198_reg_4980 <= tmp_198_fu_2474_p2;
                tmp_208_reg_4986 <= tmp_208_fu_2510_p1;
                tmp_209_reg_4991 <= tmp_209_fu_2514_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state49)) then
                tmp_202_reg_4996 <= tmp_202_fu_2533_p1;
                tmp_203_reg_5001 <= tmp_203_fu_2537_p1;
                tmp_211_reg_5006 <= tmp_211_fu_2561_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state43)) then
                    tmp_24_reg_4895(63 downto 1) <= tmp_24_fu_2285_p2(63 downto 1);
                    tmp_25_reg_4900(63 downto 2) <= tmp_25_fu_2311_p2(63 downto 2);
                tmp_28_reg_4905 <= tmp_28_fu_2317_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                    tmp_2_reg_4525(63 downto 1) <= tmp_2_fu_1172_p2(63 downto 1);
                    tmp_3_reg_4530(63 downto 2) <= tmp_3_fu_1188_p2(63 downto 2);
                tmp_5_reg_4535 <= tmp_5_fu_1194_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state58) and (ap_const_lv1_0 = exitcond17_fu_2860_p2))) then
                    tmp_32_reg_5116(3 downto 1) <= tmp_32_fu_2872_p3(3 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state59)) then
                tmp_34_reg_5126 <= grp_fu_1066_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state17) and (ap_const_lv1_0 = exitcond5_fu_1546_p2))) then
                    tmp_37_reg_4695(16 downto 3) <= tmp_37_fu_1599_p2(16 downto 3);
                    tmp_52_reg_4700(14 downto 1) <= tmp_52_fu_1638_p2(14 downto 1);
                    tmp_7_reg_4690(4 downto 1) <= tmp_7_fu_1558_p3(4 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state46) and (ap_const_lv1_0 = exitcond18_fu_2402_p2))) then
                    tmp_38_cast_reg_4944(2 downto 0) <= tmp_38_cast_fu_2414_p1(2 downto 0);
                    tmp_40_reg_4949(3 downto 0) <= tmp_40_fu_2424_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state84) and (ap_const_lv1_0 = exitcond23_fu_3577_p2))) then
                tmp_54_reg_5322 <= tmp_54_fu_3595_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state47) and (ap_const_lv1_0 = exitcond24_fu_2432_p2))) then
                    tmp_58_reg_4962(2 downto 0) <= tmp_58_fu_2444_p1(2 downto 0);
                    tmp_60_cast_reg_4967(3 downto 0) <= tmp_60_cast_fu_2454_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state56) and (ap_const_lv1_0 = exitcond7_fu_2698_p2))) then
                    tmp_60_reg_5074(63 downto 2) <= tmp_60_fu_2730_p2(63 downto 2);
                    tmp_61_reg_5080(63 downto 1) <= tmp_61_fu_2756_p2(63 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state30)) then
                tmp_64_reg_4804 <= grp_fu_1121_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_const_lv1_0 = exitcond8_fu_2321_p2))) then
                    tmp_76_reg_4918(16 downto 2) <= tmp_76_fu_2366_p2(16 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state105)) then
                tmp_86_reg_5591 <= tmp_86_fu_4203_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state82) and (ap_const_lv1_0 = exitcond11_fu_3462_p2))) then
                    tmp_93_reg_5291(63 downto 1) <= tmp_93_fu_3494_p2(63 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state70)) then
                tmp_96_reg_5207 <= grp_fu_1121_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                tmp_reg_4501 <= tmp_fu_1127_p1;
            end if;
        end if;
    end process;
    tmp_2_reg_4525(0) <= '0';
    tmp_3_reg_4530(1 downto 0) <= "00";
    tmp_17_reg_4548(1 downto 0) <= "00";
    tmp_17_cast_reg_4574(13 downto 3) <= "00000000000";
    tmp_s_reg_4671(1 downto 0) <= "00";
    tmp_11_reg_4677(0) <= '0';
    tmp_7_reg_4690(0) <= '0';
    tmp_37_reg_4695(2 downto 0) <= "000";
    tmp_52_reg_4700(0) <= '0';
    tmp_10_reg_4713(0) <= '0';
    tmp_143_reg_4741(1 downto 0) <= "00";
    tmp_24_reg_4895(0) <= '0';
    tmp_25_reg_4900(1 downto 0) <= "00";
    tmp_76_reg_4918(1 downto 0) <= "00";
    tmp_38_cast_reg_4944(13 downto 3) <= "00000000000";
    tmp_40_reg_4949(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    tmp_58_reg_4962(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    tmp_60_cast_reg_4967(14 downto 4) <= "00000000000";
    tmp_60_reg_5074(1 downto 0) <= "00";
    tmp_61_reg_5080(0) <= '0';
    tmp_20_reg_5093(0) <= '0';
    tmp_107_reg_5098(2 downto 0) <= "000";
    tmp_111_reg_5103(0) <= '0';
    tmp_32_reg_5116(0) <= '0';
    tmp_185_reg_5144(1 downto 0) <= "00";
    tmp_93_reg_5291(0) <= '0';
    tmp_159_reg_5304(0) <= '0';
    tmp112_cast_reg_5309(8 downto 5) <= "0000";
    tmp_15_cast1_reg_5340(18 downto 7) <= "000000000000";
    fc_bias_V_addr_reg_5345(8) <= '0';
    tmp_23_cast1_reg_5426(18 downto 7) <= "000000000000";
    max_index_1_cast_reg_5505(31 downto 4) <= "0000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, exitcond1_fu_1131_p2, ap_CS_fsm_state4, exitcond3_fu_1198_p2, ap_CS_fsm_state5, exitcond6_fu_1249_p2, ap_CS_fsm_state6, exitcond10_fu_1279_p2, ap_CS_fsm_state7, exitcond14_fu_1305_p2, ap_CS_fsm_state16, exitcond2_fu_1482_p2, ap_CS_fsm_state17, exitcond5_fu_1546_p2, ap_CS_fsm_state18, exitcond9_fu_1644_p2, ap_CS_fsm_state27, exitcond19_fu_1725_p2, ap_CS_fsm_state28, exitcond25_fu_1887_p2, ap_CS_fsm_state42, exitcond4_fu_2240_p2, ap_CS_fsm_state44, exitcond8_fu_2321_p2, ap_CS_fsm_state45, exitcond13_fu_2372_p2, ap_CS_fsm_state46, exitcond18_fu_2402_p2, ap_CS_fsm_state47, exitcond24_fu_2432_p2, ap_CS_fsm_state48, exitcond29_fu_2458_p2, ap_CS_fsm_state56, exitcond7_fu_2698_p2, ap_CS_fsm_state57, exitcond12_fu_2762_p2, ap_CS_fsm_state58, exitcond17_fu_2860_p2, ap_CS_fsm_state67, exitcond27_fu_2941_p2, ap_CS_fsm_state68, exitcond28_fu_3103_p2, ap_CS_fsm_state82, exitcond11_fu_3462_p2, ap_CS_fsm_state83, exitcond16_fu_3504_p2, ap_CS_fsm_state84, exitcond23_fu_3577_p2, ap_CS_fsm_state86, exitcond15_fu_3618_p2, ap_CS_fsm_state87, exitcond22_fu_3658_p2, ap_CS_fsm_state92, exitcond20_fu_3813_p2, ap_CS_fsm_state93, exitcond26_fu_3853_p2, ap_CS_fsm_state98, exitcond21_fu_4012_p2, ap_CS_fsm_state99, exitcond_fu_4048_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_lv1_1 = exitcond1_fu_1131_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_1 = exitcond3_fu_1198_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_lv1_1 = exitcond6_fu_1249_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_lv1_0 = exitcond10_fu_1279_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv1_1 = exitcond14_fu_1305_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state16 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state16) and (ap_const_lv1_1 = exitcond2_fu_1482_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state42;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state17 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state17) and (ap_const_lv1_1 = exitcond5_fu_1546_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when ap_ST_fsm_state18 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state18) and (ap_const_lv1_1 = exitcond9_fu_1644_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state27) and (ap_const_lv1_0 = exitcond19_fu_1725_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state28;
                else
                    ap_NS_fsm <= ap_ST_fsm_state39;
                end if;
            when ap_ST_fsm_state28 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state28) and (ap_const_lv1_1 = exitcond25_fu_1887_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state42 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state42) and (ap_const_lv1_1 = exitcond4_fu_2240_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state56;
                else
                    ap_NS_fsm <= ap_ST_fsm_state43;
                end if;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_const_lv1_1 = exitcond8_fu_2321_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state42;
                else
                    ap_NS_fsm <= ap_ST_fsm_state45;
                end if;
            when ap_ST_fsm_state45 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state45) and (ap_const_lv1_1 = exitcond13_fu_2372_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state44;
                else
                    ap_NS_fsm <= ap_ST_fsm_state46;
                end if;
            when ap_ST_fsm_state46 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state46) and (ap_const_lv1_0 = exitcond18_fu_2402_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state47;
                else
                    ap_NS_fsm <= ap_ST_fsm_state54;
                end if;
            when ap_ST_fsm_state47 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state47) and (ap_const_lv1_1 = exitcond24_fu_2432_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state46;
                else
                    ap_NS_fsm <= ap_ST_fsm_state48;
                end if;
            when ap_ST_fsm_state48 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state48) and (ap_const_lv1_1 = exitcond29_fu_2458_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state47;
                else
                    ap_NS_fsm <= ap_ST_fsm_state49;
                end if;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state55;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state56 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state56) and (ap_const_lv1_1 = exitcond7_fu_2698_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state82;
                else
                    ap_NS_fsm <= ap_ST_fsm_state57;
                end if;
            when ap_ST_fsm_state57 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state57) and (ap_const_lv1_1 = exitcond12_fu_2762_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state56;
                else
                    ap_NS_fsm <= ap_ST_fsm_state58;
                end if;
            when ap_ST_fsm_state58 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state58) and (ap_const_lv1_1 = exitcond17_fu_2860_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state57;
                else
                    ap_NS_fsm <= ap_ST_fsm_state59;
                end if;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_state62;
            when ap_ST_fsm_state62 => 
                ap_NS_fsm <= ap_ST_fsm_state63;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                ap_NS_fsm <= ap_ST_fsm_state65;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state66;
            when ap_ST_fsm_state66 => 
                ap_NS_fsm <= ap_ST_fsm_state67;
            when ap_ST_fsm_state67 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state67) and (ap_const_lv1_0 = exitcond27_fu_2941_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state68;
                else
                    ap_NS_fsm <= ap_ST_fsm_state79;
                end if;
            when ap_ST_fsm_state68 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state68) and (ap_const_lv1_1 = exitcond28_fu_3103_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state67;
                else
                    ap_NS_fsm <= ap_ST_fsm_state69;
                end if;
            when ap_ST_fsm_state69 => 
                ap_NS_fsm <= ap_ST_fsm_state70;
            when ap_ST_fsm_state70 => 
                ap_NS_fsm <= ap_ST_fsm_state71;
            when ap_ST_fsm_state71 => 
                ap_NS_fsm <= ap_ST_fsm_state72;
            when ap_ST_fsm_state72 => 
                ap_NS_fsm <= ap_ST_fsm_state73;
            when ap_ST_fsm_state73 => 
                ap_NS_fsm <= ap_ST_fsm_state74;
            when ap_ST_fsm_state74 => 
                ap_NS_fsm <= ap_ST_fsm_state75;
            when ap_ST_fsm_state75 => 
                ap_NS_fsm <= ap_ST_fsm_state76;
            when ap_ST_fsm_state76 => 
                ap_NS_fsm <= ap_ST_fsm_state77;
            when ap_ST_fsm_state77 => 
                ap_NS_fsm <= ap_ST_fsm_state78;
            when ap_ST_fsm_state78 => 
                ap_NS_fsm <= ap_ST_fsm_state68;
            when ap_ST_fsm_state79 => 
                ap_NS_fsm <= ap_ST_fsm_state80;
            when ap_ST_fsm_state80 => 
                ap_NS_fsm <= ap_ST_fsm_state81;
            when ap_ST_fsm_state81 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state82 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state82) and (ap_const_lv1_1 = exitcond11_fu_3462_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state86;
                else
                    ap_NS_fsm <= ap_ST_fsm_state83;
                end if;
            when ap_ST_fsm_state83 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state83) and (ap_const_lv1_1 = exitcond16_fu_3504_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state82;
                else
                    ap_NS_fsm <= ap_ST_fsm_state84;
                end if;
            when ap_ST_fsm_state84 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state84) and (ap_const_lv1_1 = exitcond23_fu_3577_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state83;
                else
                    ap_NS_fsm <= ap_ST_fsm_state85;
                end if;
            when ap_ST_fsm_state85 => 
                ap_NS_fsm <= ap_ST_fsm_state84;
            when ap_ST_fsm_state86 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state86) and (ap_const_lv1_1 = exitcond15_fu_3618_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state92;
                else
                    ap_NS_fsm <= ap_ST_fsm_state87;
                end if;
            when ap_ST_fsm_state87 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state87) and (ap_const_lv1_1 = exitcond22_fu_3658_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state90;
                else
                    ap_NS_fsm <= ap_ST_fsm_state88;
                end if;
            when ap_ST_fsm_state88 => 
                ap_NS_fsm <= ap_ST_fsm_state89;
            when ap_ST_fsm_state89 => 
                ap_NS_fsm <= ap_ST_fsm_state87;
            when ap_ST_fsm_state90 => 
                ap_NS_fsm <= ap_ST_fsm_state91;
            when ap_ST_fsm_state91 => 
                ap_NS_fsm <= ap_ST_fsm_state86;
            when ap_ST_fsm_state92 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state92) and (ap_const_lv1_1 = exitcond20_fu_3813_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state98;
                else
                    ap_NS_fsm <= ap_ST_fsm_state93;
                end if;
            when ap_ST_fsm_state93 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state93) and (ap_const_lv1_1 = exitcond26_fu_3853_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state96;
                else
                    ap_NS_fsm <= ap_ST_fsm_state94;
                end if;
            when ap_ST_fsm_state94 => 
                ap_NS_fsm <= ap_ST_fsm_state95;
            when ap_ST_fsm_state95 => 
                ap_NS_fsm <= ap_ST_fsm_state93;
            when ap_ST_fsm_state96 => 
                ap_NS_fsm <= ap_ST_fsm_state97;
            when ap_ST_fsm_state97 => 
                ap_NS_fsm <= ap_ST_fsm_state92;
            when ap_ST_fsm_state98 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state98) and (ap_const_lv1_1 = exitcond21_fu_4012_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state99;
                end if;
            when ap_ST_fsm_state99 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state99) and (ap_const_lv1_1 = exitcond_fu_4048_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state104;
                else
                    ap_NS_fsm <= ap_ST_fsm_state100;
                end if;
            when ap_ST_fsm_state100 => 
                ap_NS_fsm <= ap_ST_fsm_state101;
            when ap_ST_fsm_state101 => 
                ap_NS_fsm <= ap_ST_fsm_state102;
            when ap_ST_fsm_state102 => 
                ap_NS_fsm <= ap_ST_fsm_state103;
            when ap_ST_fsm_state103 => 
                ap_NS_fsm <= ap_ST_fsm_state99;
            when ap_ST_fsm_state104 => 
                ap_NS_fsm <= ap_ST_fsm_state105;
            when ap_ST_fsm_state105 => 
                ap_NS_fsm <= ap_ST_fsm_state106;
            when ap_ST_fsm_state106 => 
                ap_NS_fsm <= ap_ST_fsm_state107;
            when ap_ST_fsm_state107 => 
                ap_NS_fsm <= ap_ST_fsm_state108;
            when ap_ST_fsm_state108 => 
                ap_NS_fsm <= ap_ST_fsm_state109;
            when ap_ST_fsm_state109 => 
                ap_NS_fsm <= ap_ST_fsm_state110;
            when ap_ST_fsm_state110 => 
                ap_NS_fsm <= ap_ST_fsm_state111;
            when ap_ST_fsm_state111 => 
                ap_NS_fsm <= ap_ST_fsm_state112;
            when ap_ST_fsm_state112 => 
                ap_NS_fsm <= ap_ST_fsm_state113;
            when ap_ST_fsm_state113 => 
                ap_NS_fsm <= ap_ST_fsm_state98;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    F2_1_fu_3046_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(tmp_72_fu_3032_p1));
    F2_fu_1830_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(tmp_42_fu_1816_p1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state100 <= ap_CS_fsm(99);
    ap_CS_fsm_state101 <= ap_CS_fsm(100);
    ap_CS_fsm_state102 <= ap_CS_fsm(101);
    ap_CS_fsm_state103 <= ap_CS_fsm(102);
    ap_CS_fsm_state104 <= ap_CS_fsm(103);
    ap_CS_fsm_state105 <= ap_CS_fsm(104);
    ap_CS_fsm_state106 <= ap_CS_fsm(105);
    ap_CS_fsm_state107 <= ap_CS_fsm(106);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state110 <= ap_CS_fsm(109);
    ap_CS_fsm_state111 <= ap_CS_fsm(110);
    ap_CS_fsm_state112 <= ap_CS_fsm(111);
    ap_CS_fsm_state113 <= ap_CS_fsm(112);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state40 <= ap_CS_fsm(39);
    ap_CS_fsm_state41 <= ap_CS_fsm(40);
    ap_CS_fsm_state42 <= ap_CS_fsm(41);
    ap_CS_fsm_state43 <= ap_CS_fsm(42);
    ap_CS_fsm_state44 <= ap_CS_fsm(43);
    ap_CS_fsm_state45 <= ap_CS_fsm(44);
    ap_CS_fsm_state46 <= ap_CS_fsm(45);
    ap_CS_fsm_state47 <= ap_CS_fsm(46);
    ap_CS_fsm_state48 <= ap_CS_fsm(47);
    ap_CS_fsm_state49 <= ap_CS_fsm(48);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state50 <= ap_CS_fsm(49);
    ap_CS_fsm_state51 <= ap_CS_fsm(50);
    ap_CS_fsm_state52 <= ap_CS_fsm(51);
    ap_CS_fsm_state53 <= ap_CS_fsm(52);
    ap_CS_fsm_state54 <= ap_CS_fsm(53);
    ap_CS_fsm_state55 <= ap_CS_fsm(54);
    ap_CS_fsm_state56 <= ap_CS_fsm(55);
    ap_CS_fsm_state57 <= ap_CS_fsm(56);
    ap_CS_fsm_state58 <= ap_CS_fsm(57);
    ap_CS_fsm_state59 <= ap_CS_fsm(58);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state60 <= ap_CS_fsm(59);
    ap_CS_fsm_state65 <= ap_CS_fsm(64);
    ap_CS_fsm_state66 <= ap_CS_fsm(65);
    ap_CS_fsm_state67 <= ap_CS_fsm(66);
    ap_CS_fsm_state68 <= ap_CS_fsm(67);
    ap_CS_fsm_state69 <= ap_CS_fsm(68);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state70 <= ap_CS_fsm(69);
    ap_CS_fsm_state75 <= ap_CS_fsm(74);
    ap_CS_fsm_state76 <= ap_CS_fsm(75);
    ap_CS_fsm_state77 <= ap_CS_fsm(76);
    ap_CS_fsm_state78 <= ap_CS_fsm(77);
    ap_CS_fsm_state79 <= ap_CS_fsm(78);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state80 <= ap_CS_fsm(79);
    ap_CS_fsm_state81 <= ap_CS_fsm(80);
    ap_CS_fsm_state82 <= ap_CS_fsm(81);
    ap_CS_fsm_state83 <= ap_CS_fsm(82);
    ap_CS_fsm_state84 <= ap_CS_fsm(83);
    ap_CS_fsm_state85 <= ap_CS_fsm(84);
    ap_CS_fsm_state86 <= ap_CS_fsm(85);
    ap_CS_fsm_state87 <= ap_CS_fsm(86);
    ap_CS_fsm_state88 <= ap_CS_fsm(87);
    ap_CS_fsm_state89 <= ap_CS_fsm(88);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_CS_fsm_state90 <= ap_CS_fsm(89);
    ap_CS_fsm_state91 <= ap_CS_fsm(90);
    ap_CS_fsm_state92 <= ap_CS_fsm(91);
    ap_CS_fsm_state93 <= ap_CS_fsm(92);
    ap_CS_fsm_state94 <= ap_CS_fsm(93);
    ap_CS_fsm_state95 <= ap_CS_fsm(94);
    ap_CS_fsm_state96 <= ap_CS_fsm(95);
    ap_CS_fsm_state97 <= ap_CS_fsm(96);
    ap_CS_fsm_state98 <= ap_CS_fsm(97);
    ap_CS_fsm_state99 <= ap_CS_fsm(98);

    ap_done_assign_proc : process(ap_CS_fsm_state98, exitcond21_fu_4012_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state98) and (ap_const_lv1_1 = exitcond21_fu_4012_p2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state98, exitcond21_fu_4012_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state98) and (ap_const_lv1_1 = exitcond21_fu_4012_p2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= max_index_reg_980;
    brmerge1_fu_2047_p2 <= (tmp_64_reg_4804 or tmp_106_fu_2041_p2);
    brmerge2_fu_3263_p2 <= (tmp_96_reg_5207 or tmp_122_fu_3257_p2);
    brmerge_fu_4423_p2 <= (tmp_86_reg_5591 or tmp_132_fu_4417_p2);
    channel_1_fu_1137_p2 <= std_logic_vector(unsigned(channel_reg_550) + unsigned(ap_const_lv3_1));
    channel_2_fu_1488_p2 <= std_logic_vector(unsigned(channel1_reg_608) + unsigned(ap_const_lv3_1));
    channel_3_fu_2246_p2 <= std_logic_vector(unsigned(channel6_reg_686) + unsigned(ap_const_lv5_1));
    col_1_fu_1204_p2 <= std_logic_vector(unsigned(col_reg_562) + unsigned(ap_const_lv5_1));
    col_2_fu_1552_p2 <= std_logic_vector(unsigned(col2_reg_619) + unsigned(ap_const_lv4_1));
    col_3_fu_2327_p2 <= std_logic_vector(unsigned(col7_reg_698) + unsigned(ap_const_lv4_1));
    col_4_fu_3624_p2 <= std_logic_vector(unsigned(col4_reg_878) + unsigned(ap_const_lv7_1));
    col_5_fu_3819_p2 <= std_logic_vector(unsigned(col5_reg_924) + unsigned(ap_const_lv7_1));
    col_6_fu_4018_p2 <= std_logic_vector(unsigned(max_index_1_reg_992) + unsigned(ap_const_lv4_1));

    conv_bias_V_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state42, tmp_1_fu_1143_p3, tmp_19_fu_2252_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            conv_bias_V_address0 <= tmp_19_fu_2252_p3(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            conv_bias_V_address0 <= tmp_1_fu_1143_p3(6 - 1 downto 0);
        else 
            conv_bias_V_address0 <= "XXXXXX";
        end if; 
    end process;


    conv_bias_V_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state42)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state42))) then 
            conv_bias_V_ce0 <= ap_const_logic_1;
        else 
            conv_bias_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_dot_V_address0_assign_proc : process(ap_CS_fsm_state5, conv_dot_V_addr_reg_4561, ap_CS_fsm_state6, ap_CS_fsm_state18, ap_CS_fsm_state28, ap_CS_fsm_state45, conv_dot_V_addr_2_reg_4931, ap_CS_fsm_state46, ap_CS_fsm_state50, ap_CS_fsm_state58, ap_CS_fsm_state68, ap_CS_fsm_state15, ap_CS_fsm_state13, ap_CS_fsm_state55, ap_CS_fsm_state53, tmp_150_cast_fu_1270_p1, tmp_157_cast_fu_1673_p1, tmp_187_cast_fu_1913_p1, tmp_167_cast_fu_2393_p1, tmp_186_cast_fu_2889_p1, tmp_202_cast_fu_3129_p1, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            conv_dot_V_address0 <= tmp_202_cast_fu_3129_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
            conv_dot_V_address0 <= tmp_186_cast_fu_2889_p1(16 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state53))) then 
            conv_dot_V_address0 <= conv_dot_V_addr_2_reg_4931;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            conv_dot_V_address0 <= tmp_167_cast_fu_2393_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            conv_dot_V_address0 <= tmp_187_cast_fu_1913_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            conv_dot_V_address0 <= tmp_157_cast_fu_1673_p1(16 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            conv_dot_V_address0 <= conv_dot_V_addr_reg_4561;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            conv_dot_V_address0 <= tmp_150_cast_fu_1270_p1(16 - 1 downto 0);
        else 
            conv_dot_V_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv_dot_V_ce0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state18, ap_CS_fsm_state28, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state50, ap_CS_fsm_state58, ap_CS_fsm_state68, ap_CS_fsm_state15, ap_CS_fsm_state13, ap_CS_fsm_state55, ap_CS_fsm_state53, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            conv_dot_V_ce0 <= ap_const_logic_1;
        else 
            conv_dot_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_dot_V_d0_assign_proc : process(ap_CS_fsm_state5, storemerge1_reg_4648, ap_CS_fsm_state45, storemerge5_reg_5051, ap_CS_fsm_state15, ap_CS_fsm_state13, ap_CS_fsm_state55, ap_CS_fsm_state53, p_Val2_2_cast_19_fu_1475_p1, p_Val2_6_cast_32_fu_2691_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            conv_dot_V_d0 <= p_Val2_6_cast_32_fu_2691_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            conv_dot_V_d0 <= storemerge5_reg_5051;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            conv_dot_V_d0 <= p_Val2_2_cast_19_fu_1475_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            conv_dot_V_d0 <= storemerge1_reg_4648;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state45))) then 
            conv_dot_V_d0 <= ap_const_lv32_0;
        else 
            conv_dot_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv_dot_V_we0_assign_proc : process(ap_CS_fsm_state5, exitcond6_fu_1249_p2, ap_CS_fsm_state45, exitcond13_fu_2372_p2, ap_CS_fsm_state15, ap_CS_fsm_state13, ap_CS_fsm_state55, ap_CS_fsm_state53)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_lv1_0 = exitcond6_fu_1249_p2)) or ((ap_const_logic_1 = ap_CS_fsm_state45) and (ap_const_lv1_0 = exitcond13_fu_2372_p2)) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state53))) then 
            conv_dot_V_we0 <= ap_const_logic_1;
        else 
            conv_dot_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_weight_address0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state50, tmp_176_cast_fu_1370_p1, tmp_209_cast_fu_2583_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            conv_weight_address0 <= tmp_209_cast_fu_2583_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv_weight_address0 <= tmp_176_cast_fu_1370_p1(13 - 1 downto 0);
        else 
            conv_weight_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    conv_weight_ce0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state50)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state50))) then 
            conv_weight_ce0 <= ap_const_logic_1;
        else 
            conv_weight_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    d_assign_1_to_int_fu_4320_p1 <= d_assign_1_reg_970;
    d_assign_3_mux_fu_4428_p3 <= 
        ap_const_lv64_0 when (tmp_131_fu_4412_p2(0) = '1') else 
        d_assign_1_reg_970;
    dp_11_fu_4292_p1 <= p_Result_7_fu_4280_p5;
    dp_2_fu_2926_p1 <= p_Result_3_fu_2914_p5;
    dp_4_fu_1950_p1 <= p_Result_1_fu_1938_p5;
    dp_7_fu_3166_p1 <= p_Result_4_fu_3154_p5;
    dp_9_fu_4394_p1 <= p_Result_6_fu_4382_p5;
    dp_fu_1710_p1 <= p_Result_s_fu_1698_p5;
    exitcond10_fu_1279_p2 <= "1" when (fil_col_reg_586 = ap_const_lv3_5) else "0";
    exitcond11_fu_3462_p2 <= "1" when (i1_reg_833 = ap_const_lv5_10) else "0";
    exitcond12_fu_2762_p2 <= "1" when (j_reg_766 = ap_const_lv3_5) else "0";
    exitcond13_fu_2372_p2 <= "1" when (row8_reg_710 = ap_const_lv4_A) else "0";
    exitcond14_fu_1305_p2 <= "1" when (fil_row_reg_597 = ap_const_lv3_5) else "0";
    exitcond15_fu_3618_p2 <= "1" when (col4_reg_878 = ap_const_lv7_78) else "0";
    exitcond16_fu_3504_p2 <= "1" when (j1_reg_856 = ap_const_lv3_5) else "0";
    exitcond17_fu_2860_p2 <= "1" when (k_reg_777 = ap_const_lv3_5) else "0";
    exitcond18_fu_2402_p2 <= "1" when (fil_col9_reg_722 = ap_const_lv3_5) else "0";
    exitcond19_fu_1725_p2 <= "1" when (fil_col4_reg_652 = ap_const_lv2_2) else "0";
    exitcond1_fu_1131_p2 <= "1" when (channel_reg_550 = ap_const_lv3_6) else "0";
    exitcond20_fu_3813_p2 <= "1" when (col5_reg_924 = ap_const_lv7_54) else "0";
    exitcond21_fu_4012_p2 <= "1" when (max_index_1_reg_992 = ap_const_lv4_A) else "0";
    exitcond22_fu_3658_p2 <= "1" when (row2_reg_902 = ap_const_lv9_190) else "0";
    exitcond23_fu_3577_p2 <= "1" when (k1_reg_867 = ap_const_lv3_5) else "0";
    exitcond24_fu_2432_p2 <= "1" when (fil_row2_reg_733 = ap_const_lv3_5) else "0";
    exitcond25_fu_1887_p2 <= "1" when (fil_row5_reg_675 = ap_const_lv2_2) else "0";
    exitcond26_fu_3853_p2 <= "1" when (row4_reg_948 = ap_const_lv7_78) else "0";
    exitcond27_fu_2941_p2 <= "1" when (l_reg_799 = ap_const_lv2_2) else "0";
    exitcond28_fu_3103_p2 <= "1" when (m_reg_822 = ap_const_lv2_2) else "0";
    exitcond29_fu_2458_p2 <= "1" when (sample1_reg_744 = ap_const_lv3_6) else "0";
    exitcond2_fu_1482_p2 <= "1" when (channel1_reg_608 = ap_const_lv3_6) else "0";
    exitcond3_fu_1198_p2 <= "1" when (col_reg_562 = ap_const_lv5_1C) else "0";
    exitcond4_fu_2240_p2 <= "1" when (channel6_reg_686 = ap_const_lv5_10) else "0";
    exitcond5_fu_1546_p2 <= "1" when (col2_reg_619 = ap_const_lv4_E) else "0";
    exitcond6_fu_1249_p2 <= "1" when (row_reg_574 = ap_const_lv5_1C) else "0";
    exitcond7_fu_2698_p2 <= "1" when (i_reg_755 = ap_const_lv5_10) else "0";
    exitcond8_fu_2321_p2 <= "1" when (col7_reg_698 = ap_const_lv4_A) else "0";
    exitcond9_fu_1644_p2 <= "1" when (row3_reg_630 = ap_const_lv4_E) else "0";
    exitcond_fu_4048_p2 <= "1" when (row5_reg_1017 = ap_const_lv7_54) else "0";
    exp_V_12_fu_4264_p4 <= res_V_20_fu_4260_p1(62 downto 52);
    exp_V_15_fu_1692_p2 <= std_logic_vector(unsigned(exp_V_fu_1682_p4) + unsigned(ap_const_lv11_7EA));
    exp_V_16_fu_1932_p2 <= std_logic_vector(signed(ap_const_lv11_7EA) + signed(exp_V_4_fu_1922_p4));
    exp_V_17_fu_2908_p2 <= std_logic_vector(unsigned(exp_V_2_fu_2898_p4) + unsigned(ap_const_lv11_7EA));
    exp_V_18_fu_3148_p2 <= std_logic_vector(signed(ap_const_lv11_7EA) + signed(exp_V_7_fu_3138_p4));
    exp_V_19_fu_4376_p2 <= std_logic_vector(signed(ap_const_lv11_7EA) + signed(exp_V_8_fu_4366_p4));
    exp_V_20_fu_4274_p2 <= std_logic_vector(signed(ap_const_lv11_7EA) + signed(exp_V_12_fu_4264_p4));
    exp_V_2_fu_2898_p4 <= res_V_fu_2894_p1(62 downto 52);
    exp_V_4_fu_1922_p4 <= res_V_17_fu_1918_p1(62 downto 52);
    exp_V_7_fu_3138_p4 <= res_V_18_fu_3134_p1(62 downto 52);
    exp_V_8_fu_4366_p4 <= res_V_19_fu_4362_p1(62 downto 52);
    exp_V_fu_1682_p4 <= res_V_16_fu_1678_p1(62 downto 52);
    exp_tmp_V_1_fu_3022_p4 <= ireg_V_1_fu_3006_p1(62 downto 52);
    exp_tmp_V_fu_1806_p4 <= ireg_V_fu_1790_p1(62 downto 52);

    fc_bias_V_address0_assign_proc : process(fc_bias_V_addr_reg_5345, ap_CS_fsm_state87, fc_bias_V_addr_1_reg_5431, ap_CS_fsm_state93, fc_bias_V_addr_2_reg_5519, ap_CS_fsm_state99)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state99)) then 
            fc_bias_V_address0 <= fc_bias_V_addr_2_reg_5519;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state93)) then 
            fc_bias_V_address0 <= fc_bias_V_addr_1_reg_5431;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state87)) then 
            fc_bias_V_address0 <= fc_bias_V_addr_reg_5345;
        else 
            fc_bias_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    fc_bias_V_ce0_assign_proc : process(ap_CS_fsm_state87, ap_CS_fsm_state93, ap_CS_fsm_state99)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state87) or (ap_const_logic_1 = ap_CS_fsm_state93) or (ap_const_logic_1 = ap_CS_fsm_state99))) then 
            fc_bias_V_ce0 <= ap_const_logic_1;
        else 
            fc_bias_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    fc_dot_V_addr_1_reg_5436 <= ap_const_lv64_2(2 - 1 downto 0);

    fc_dot_V_address0_assign_proc : process(ap_CS_fsm_state87, fc_dot_V_addr_1_reg_5436, ap_CS_fsm_state93, ap_CS_fsm_state101, ap_CS_fsm_state105, ap_CS_fsm_state91)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state105)) then 
            fc_dot_V_address0 <= ap_const_lv2_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state101)) then 
            fc_dot_V_address0 <= ap_const_lv64_2(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state93)) then 
            fc_dot_V_address0 <= fc_dot_V_addr_1_reg_5436;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state87) or (ap_const_logic_1 = ap_CS_fsm_state91))) then 
            fc_dot_V_address0 <= ap_const_lv64_1(2 - 1 downto 0);
        else 
            fc_dot_V_address0 <= "XX";
        end if; 
    end process;


    fc_dot_V_address1_assign_proc : process(ap_CS_fsm_state93, ap_CS_fsm_state99, ap_CS_fsm_state104, ap_CS_fsm_state97)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state99) or (ap_const_logic_1 = ap_CS_fsm_state104))) then 
            fc_dot_V_address1 <= ap_const_lv64_0(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state97)) then 
            fc_dot_V_address1 <= ap_const_lv64_2(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state93)) then 
            fc_dot_V_address1 <= ap_const_lv64_1(2 - 1 downto 0);
        else 
            fc_dot_V_address1 <= "XX";
        end if; 
    end process;


    fc_dot_V_ce0_assign_proc : process(ap_CS_fsm_state87, ap_CS_fsm_state93, ap_CS_fsm_state101, ap_CS_fsm_state105, ap_CS_fsm_state91)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state87) or (ap_const_logic_1 = ap_CS_fsm_state93) or (ap_const_logic_1 = ap_CS_fsm_state101) or (ap_const_logic_1 = ap_CS_fsm_state105) or (ap_const_logic_1 = ap_CS_fsm_state91))) then 
            fc_dot_V_ce0 <= ap_const_logic_1;
        else 
            fc_dot_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    fc_dot_V_ce1_assign_proc : process(ap_CS_fsm_state93, ap_CS_fsm_state99, ap_CS_fsm_state104, ap_CS_fsm_state97)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state93) or (ap_const_logic_1 = ap_CS_fsm_state99) or (ap_const_logic_1 = ap_CS_fsm_state104) or (ap_const_logic_1 = ap_CS_fsm_state97))) then 
            fc_dot_V_ce1 <= ap_const_logic_1;
        else 
            fc_dot_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    fc_dot_V_d0_assign_proc : process(ap_CS_fsm_state87, ap_CS_fsm_state93, ap_CS_fsm_state91, p_Val2_18_reg_889, p_Val2_25_reg_935, p_Val2_cast_45_fu_3809_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state93)) then 
            fc_dot_V_d0 <= p_Val2_25_reg_935(0 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state91)) then 
            fc_dot_V_d0 <= p_Val2_cast_45_fu_3809_p1(0 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state87)) then 
            fc_dot_V_d0 <= p_Val2_18_reg_889(0 - 1 downto 0);
        else 
            fc_dot_V_d0 <= "";
        end if; 
    end process;


    fc_dot_V_d1_assign_proc : process(ap_CS_fsm_state99, p_Val2_4_fu_4196_p2, ap_CS_fsm_state104, ap_CS_fsm_state97, p_Val2_37_reg_1004, p_Val2_1_cast_49_fu_4004_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state104)) then 
            fc_dot_V_d1 <= p_Val2_4_fu_4196_p2(0 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state99)) then 
            fc_dot_V_d1 <= p_Val2_37_reg_1004(0 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state97)) then 
            fc_dot_V_d1 <= p_Val2_1_cast_49_fu_4004_p1(0 - 1 downto 0);
        else 
            fc_dot_V_d1 <= "";
        end if; 
    end process;


    fc_dot_V_we0_assign_proc : process(ap_CS_fsm_state87, ap_CS_fsm_state93, ap_CS_fsm_state91)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state87) or (ap_const_logic_1 = ap_CS_fsm_state93) or (ap_const_logic_1 = ap_CS_fsm_state91))) then 
            fc_dot_V_we0 <= ap_const_logic_1;
        else 
            fc_dot_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    fc_dot_V_we1_assign_proc : process(ap_CS_fsm_state99, ap_CS_fsm_state104, ap_CS_fsm_state97)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state99) or (ap_const_logic_1 = ap_CS_fsm_state104) or (ap_const_logic_1 = ap_CS_fsm_state97))) then 
            fc_dot_V_we1 <= ap_const_logic_1;
        else 
            fc_dot_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    fc_in_V_address0_assign_proc : process(ap_CS_fsm_state87, ap_CS_fsm_state85, tmp_55_fu_3614_p1, tmp_35_fu_3670_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state87)) then 
            fc_in_V_address0 <= tmp_35_fu_3670_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            fc_in_V_address0 <= tmp_55_fu_3614_p1(9 - 1 downto 0);
        else 
            fc_in_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    fc_in_V_ce0_assign_proc : process(ap_CS_fsm_state87, ap_CS_fsm_state85)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state87) or (ap_const_logic_1 = ap_CS_fsm_state85))) then 
            fc_in_V_ce0 <= ap_const_logic_1;
        else 
            fc_in_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    fc_in_V_d0 <= pool_dot_V_q0;

    fc_in_V_we0_assign_proc : process(ap_CS_fsm_state85)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            fc_in_V_we0 <= ap_const_logic_1;
        else 
            fc_in_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    fc_weight_address0_assign_proc : process(ap_CS_fsm_state87, ap_CS_fsm_state93, ap_CS_fsm_state99, tmp_191_cast_fu_3692_p1, tmp_201_cast_fu_3887_p1, tmp_221_fu_4094_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state99)) then 
            fc_weight_address0 <= tmp_221_fu_4094_p1(20 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state93)) then 
            fc_weight_address0 <= tmp_201_cast_fu_3887_p1(20 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state87)) then 
            fc_weight_address0 <= tmp_191_cast_fu_3692_p1(20 - 1 downto 0);
        else 
            fc_weight_address0 <= "XXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    fc_weight_ce0_assign_proc : process(ap_CS_fsm_state87, ap_CS_fsm_state93, ap_CS_fsm_state99)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state87) or (ap_const_logic_1 = ap_CS_fsm_state93) or (ap_const_logic_1 = ap_CS_fsm_state99))) then 
            fc_weight_ce0 <= ap_const_logic_1;
        else 
            fc_weight_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    fil_col4_cast_fu_1721_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(fil_col4_reg_652),5));
    fil_col9_cast_fu_2398_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(fil_col9_reg_722),4));
    fil_col_1_fu_1285_p2 <= std_logic_vector(unsigned(fil_col_reg_586) + unsigned(ap_const_lv3_1));
    fil_col_2_fu_2408_p2 <= std_logic_vector(unsigned(fil_col9_reg_722) + unsigned(ap_const_lv3_1));
    fil_col_3_fu_1731_p2 <= std_logic_vector(unsigned(fil_col4_reg_652) + unsigned(ap_const_lv2_1));
    fil_col_cast_fu_1275_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(fil_col_reg_586),5));
    fil_row2_cast_fu_2428_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(fil_row2_reg_733),4));
    fil_row5_cast_fu_1883_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(fil_row5_reg_675),5));
    fil_row_1_fu_1311_p2 <= std_logic_vector(unsigned(fil_row_reg_597) + unsigned(ap_const_lv3_1));
    fil_row_2_fu_2438_p2 <= std_logic_vector(unsigned(fil_row2_reg_733) + unsigned(ap_const_lv3_1));
    fil_row_3_fu_1893_p2 <= std_logic_vector(unsigned(fil_row5_reg_675) + unsigned(ap_const_lv2_1));
    fil_row_cast_fu_1301_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(fil_row_reg_597),5));

    grp_fu_1040_p0_assign_proc : process(ap_CS_fsm_state112, p_0_i1_reg_4815, ap_CS_fsm_state37, p_0_i2_reg_5218, ap_CS_fsm_state77, p_0_i_reg_5624)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state112)) then 
            grp_fu_1040_p0 <= p_0_i_reg_5624;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            grp_fu_1040_p0 <= p_0_i2_reg_5218;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            grp_fu_1040_p0 <= p_0_i1_reg_4815;
        else 
            grp_fu_1040_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1040_p1_assign_proc : process(ap_CS_fsm_state112, ap_CS_fsm_state37, ap_CS_fsm_state77, op1_assign_reg_663, op1_assign_1_reg_810, d_assign_1_reg_970)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state112)) then 
            grp_fu_1040_p1 <= d_assign_1_reg_970;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            grp_fu_1040_p1 <= op1_assign_1_reg_810;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            grp_fu_1040_p1 <= op1_assign_reg_663;
        else 
            grp_fu_1040_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1047_p0_assign_proc : process(reg_1098, ap_CS_fsm_state30, ap_CS_fsm_state70, p_Val2_4_reg_5585, ap_CS_fsm_state105, fc_dot_V_load_1_reg_5602, ap_CS_fsm_state20, ap_CS_fsm_state60, ap_CS_fsm_state107)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state107)) then 
            grp_fu_1047_p0 <= fc_dot_V_load_1_reg_5602;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state105)) then 
            grp_fu_1047_p0 <= p_Val2_4_reg_5585;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state70) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state60))) then 
            grp_fu_1047_p0 <= reg_1098;
        else 
            grp_fu_1047_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_1058_p3 <= conv_weight_q0(6 downto 6);
    grp_fu_1066_p2 <= "1" when (conv_dot_V_q0 = ap_const_lv32_0) else "0";
    grp_fu_1080_p3 <= fc_weight_q0(6 downto 6);
    grp_fu_1088_p2 <= (grp_fu_1080_p3 xor ap_const_lv1_1);
    grp_fu_1107_p2 <= std_logic_vector(unsigned(conv_dot_V_q0) + unsigned(reg_1094));
    grp_fu_1113_p3 <= grp_fu_1107_p2(31 downto 31);
    grp_fu_1121_p2 <= "1" when (reg_1098 = ap_const_lv32_0) else "0";
    grp_fu_4494_p0 <= ap_const_lv25_2710(15 - 1 downto 0);
    grp_fu_4494_p1 <= grp_fu_4494_p10(10 - 1 downto 0);
    grp_fu_4494_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_149_fu_1359_p3),25));
    i_1_fu_2704_p2 <= std_logic_vector(unsigned(i_reg_755) + unsigned(ap_const_lv5_1));
    i_2_fu_3468_p2 <= std_logic_vector(unsigned(i1_reg_833) + unsigned(ap_const_lv5_1));
    i_op_assign_fu_4113_p3 <= 
        tmp_118_i_fu_4107_p2 when (grp_fu_1080_p3(0) = '1') else 
        tmp_117_i_cast_fu_4103_p1;
    icmp1_fu_3316_p2 <= "1" when (tmp_181_reg_5189 = ap_const_lv7_0) else "0";
    icmp_fu_2100_p2 <= "1" when (tmp_139_reg_4786 = ap_const_lv7_0) else "0";
    in_V_address0 <= tmp_180_cast_fu_1374_p1(24 - 1 downto 0);

    in_V_ce0_assign_proc : process(ap_CS_fsm_state11, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            in_V_ce0 <= ap_const_logic_1;
        else 
            in_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ireg_V_1_fu_3006_p1 <= v_assign_1_reg_789;
    ireg_V_fu_1790_p1 <= v_assign_reg_642;
    j1_cast_fu_3500_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j1_reg_856),5));
    j_1_fu_2768_p2 <= std_logic_vector(unsigned(j_reg_766) + unsigned(ap_const_lv3_1));
    j_2_fu_3510_p2 <= std_logic_vector(unsigned(j1_reg_856) + unsigned(ap_const_lv3_1));
    k1_cast_fu_3573_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k1_reg_867),9));
    k_1_fu_3583_p2 <= std_logic_vector(unsigned(k1_reg_867) + unsigned(ap_const_lv3_1));
    k_2_fu_2866_p2 <= std_logic_vector(unsigned(k_reg_777) + unsigned(ap_const_lv3_1));
    l_1_fu_2947_p2 <= std_logic_vector(unsigned(l_reg_799) + unsigned(ap_const_lv2_1));
    l_cast_fu_2937_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(l_reg_799),4));
    m_1_fu_3109_p2 <= std_logic_vector(unsigned(m_reg_822) + unsigned(ap_const_lv2_1));
    m_cast_fu_3099_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_reg_822),4));
    man_V_1_fu_2078_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_2_fu_2074_p1));
    man_V_2_fu_2084_p3 <= 
        man_V_1_fu_2078_p2 when (isneg_reg_4751(0) = '1') else 
        p_Result_2_fu_2074_p1;
    man_V_4_fu_3294_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_5_fu_3290_p1));
    man_V_5_fu_3300_p3 <= 
        man_V_4_fu_3294_p2 when (isneg_1_reg_5154(0) = '1') else 
        p_Result_5_fu_3290_p1;
    max_index_1_cast_fu_4008_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(max_index_1_reg_992),32));
    max_index_2_fu_4486_p3 <= 
        ap_const_lv32_0 when (tmp_138_fu_4482_p2(0) = '1') else 
        sel_tmp48_fu_4475_p3;
    max_index_mux_fu_4436_p3 <= 
        max_index_1_cast_reg_5505 when (tmp_131_fu_4412_p2(0) = '1') else 
        max_index_reg_980;
    max_value_4_fu_4468_p3 <= 
        ap_const_lv64_0 when (tmp_137_reg_5613(0) = '1') else 
        sel_tmp47_fu_4461_p3;
    max_value_5_fu_2060_p3 <= 
        op1_assign_mux_fu_2052_p3 when (brmerge1_fu_2047_p2(0) = '1') else 
        dp_4_reg_4810;
    max_value_s_fu_3276_p3 <= 
        op1_assign_1_mux_fu_3268_p3 when (brmerge2_fu_3263_p2(0) = '1') else 
        dp_7_reg_5213;
    mt_fu_4178_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(storemerge6_reg_5574));
    newSel1_fu_2201_p3 <= 
        storemerge_fu_2153_p3 when (sel_tmp11_fu_2180_p2(0) = '1') else 
        tmp_133_reg_4846;
    newSel2_fu_2214_p3 <= 
        newSel_fu_2189_p3 when (or_cond_fu_2196_p2(0) = '1') else 
        newSel1_fu_2201_p3;
    newSel3_fu_2228_p3 <= 
        newSel2_fu_2214_p3 when (or_cond2_fu_2222_p2(0) = '1') else 
        ap_const_lv32_0;
    newSel4_fu_3405_p3 <= 
        tmp_103_fu_3376_p2 when (sel_tmp29_reg_5267(0) = '1') else 
        tmp_182_fu_3365_p1;
    newSel5_fu_3417_p3 <= 
        storemerge7_fu_3369_p3 when (sel_tmp26_fu_3396_p2(0) = '1') else 
        tmp_180_reg_5249;
    newSel6_fu_3430_p3 <= 
        newSel4_fu_3405_p3 when (or_cond3_fu_3412_p2(0) = '1') else 
        newSel5_fu_3417_p3;
    newSel7_fu_3444_p3 <= 
        newSel6_fu_3430_p3 when (or_cond5_fu_3438_p2(0) = '1') else 
        ap_const_lv32_0;
    newSel_fu_2189_p3 <= 
        tmp_74_fu_2160_p2 when (sel_tmp14_reg_4864(0) = '1') else 
        tmp_140_fu_2149_p1;
    next_mul1_fu_3675_p2 <= std_logic_vector(unsigned(ap_const_lv18_190) + unsigned(phi_mul1_reg_913));
    next_mul2_fu_3870_p2 <= std_logic_vector(unsigned(ap_const_lv16_190) + unsigned(phi_mul2_reg_959));
    next_mul3_fu_4060_p2 <= std_logic_vector(unsigned(ap_const_lv16_190) + unsigned(phi_mul3_reg_1029));
    next_mul_fu_3456_p2 <= std_logic_vector(unsigned(phi_mul_reg_844) + unsigned(ap_const_lv9_19));
    notlhs1_fu_2012_p2 <= "0" when (tmp_84_fu_1994_p4 = ap_const_lv11_7FF) else "1";
    notlhs2_fu_3194_p2 <= "0" when (tmp_113_fu_3180_p4 = ap_const_lv11_7FF) else "1";
    notlhs3_fu_3228_p2 <= "0" when (tmp_115_fu_3210_p4 = ap_const_lv11_7FF) else "1";
    notlhs4_fu_4338_p2 <= "0" when (tmp_123_fu_4306_p4 = ap_const_lv11_7FF) else "1";
    notlhs5_fu_4350_p2 <= "0" when (tmp_125_fu_4324_p4 = ap_const_lv11_7FF) else "1";
    notlhs_fu_1978_p2 <= "0" when (tmp_82_fu_1964_p4 = ap_const_lv11_7FF) else "1";
    notrhs1_fu_2018_p2 <= "1" when (tmp_165_fu_2004_p1 = ap_const_lv52_0) else "0";
    notrhs2_fu_3200_p2 <= "1" when (tmp_196_fu_3190_p1 = ap_const_lv52_0) else "0";
    notrhs3_fu_3234_p2 <= "1" when (tmp_197_fu_3220_p1 = ap_const_lv52_0) else "0";
    notrhs4_fu_4344_p2 <= "1" when (tmp_215_fu_4316_p1 = ap_const_lv52_0) else "0";
    notrhs5_fu_4356_p2 <= "1" when (tmp_216_fu_4334_p1 = ap_const_lv52_0) else "0";
    notrhs_fu_1984_p2 <= "1" when (tmp_164_fu_1974_p1 = ap_const_lv52_0) else "0";
    op1_assign_1_mux_fu_3268_p3 <= 
        ap_const_lv64_0 when (tmp_121_fu_3252_p2(0) = '1') else 
        op1_assign_1_reg_810;
    op1_assign_1_to_int_fu_3206_p1 <= op1_assign_1_reg_810;
    op1_assign_mux_fu_2052_p3 <= 
        ap_const_lv64_0 when (tmp_105_fu_2036_p2(0) = '1') else 
        op1_assign_reg_663;
    op1_assign_to_int_fu_1990_p1 <= op1_assign_reg_663;
    or_cond1_fu_2208_p2 <= (sel_tmp11_fu_2180_p2 or sel_tmp8_fu_2170_p2);
    or_cond2_fu_2222_p2 <= (or_cond_fu_2196_p2 or or_cond1_fu_2208_p2);
    or_cond3_fu_3412_p2 <= (sel_tmp29_reg_5267 or sel_tmp27_fu_3401_p2);
    or_cond4_fu_3424_p2 <= (sel_tmp26_fu_3396_p2 or sel_tmp22_fu_3386_p2);
    or_cond5_fu_3438_p2 <= (or_cond3_fu_3412_p2 or or_cond4_fu_3424_p2);
    or_cond_fu_2196_p2 <= (sel_tmp14_reg_4864 or sel_tmp12_fu_2185_p2);
    p_0_i1_fu_1954_p3 <= 
        ap_const_lv64_0 when (tmp_64_reg_4804(0) = '1') else 
        dp_4_fu_1950_p1;
    p_0_i1_to_int_fu_1961_p1 <= p_0_i1_reg_4815;
    p_0_i2_fu_3170_p3 <= 
        ap_const_lv64_0 when (tmp_96_reg_5207(0) = '1') else 
        dp_7_fu_3166_p1;
    p_0_i2_to_int_fu_3177_p1 <= p_0_i2_reg_5218;
    p_0_i_fu_4296_p3 <= 
        ap_const_lv64_0 when (tmp_86_reg_5591(0) = '1') else 
        dp_11_fu_4292_p1;
    p_0_i_to_int_fu_4303_p1 <= p_0_i_reg_5624;
    p_Result_1_fu_1938_p5 <= (res_V_17_fu_1918_p1(63 downto 63) & exp_V_16_fu_1932_p2 & res_V_17_fu_1918_p1(51 downto 0));
    p_Result_2_fu_2074_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_43_fu_2067_p3),54));
    p_Result_3_fu_2914_p5 <= (res_V_fu_2894_p1(63 downto 63) & exp_V_17_fu_2908_p2 & res_V_fu_2894_p1(51 downto 0));
    p_Result_4_fu_3154_p5 <= (res_V_18_fu_3134_p1(63 downto 63) & exp_V_18_fu_3148_p2 & res_V_18_fu_3134_p1(51 downto 0));
    p_Result_5_fu_3290_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_75_fu_3283_p3),54));
    p_Result_6_fu_4382_p5 <= (res_V_19_fu_4362_p1(63 downto 63) & exp_V_19_fu_4376_p2 & res_V_19_fu_4362_p1(51 downto 0));
    p_Result_7_fu_4280_p5 <= (res_V_20_fu_4260_p1(63 downto 63) & exp_V_20_fu_4274_p2 & res_V_20_fu_4260_p1(51 downto 0));
    p_Result_s_fu_1698_p5 <= (res_V_16_fu_1678_p1(63 downto 63) & exp_V_15_fu_1692_p2 & res_V_16_fu_1678_p1(51 downto 0));
    p_Val2_10_fu_1402_p2 <= std_logic_vector(unsigned(reg_1098) - unsigned(p_Val2_9_reg_4636));
    p_Val2_11_fu_1396_p2 <= std_logic_vector(shift_right(signed(in_V_q0),to_integer(unsigned('0' & sh_fu_1387_p1(31-1 downto 0)))));
    p_Val2_12_fu_1407_p2 <= std_logic_vector(unsigned(reg_1098) - unsigned(p_Val2_11_reg_4642));
    p_Val2_16_fu_3705_p2 <= std_logic_vector(shift_left(unsigned(fc_in_V_q0),to_integer(unsigned('0' & sh_1_fu_3701_p1(31-1 downto 0)))));
    p_Val2_17_fu_3717_p2 <= std_logic_vector(unsigned(p_Val2_18_reg_889) - unsigned(p_Val2_16_reg_5396));
    p_Val2_19_fu_4190_p2 <= std_logic_vector(unsigned(p_Val2_37_reg_1004) + unsigned(p_Val2_5_fu_4183_p3));
    p_Val2_1_48_fu_3996_p3 <= 
        ap_const_lv31_0 when (tmp_189_fu_3988_p3(0) = '1') else 
        p_Val2_1_cast_fu_3982_p2;
    p_Val2_1_cast_49_fu_4004_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_1_48_reg_5500),32));
    p_Val2_1_cast_fu_3982_p2 <= std_logic_vector(unsigned(tmp_187_fu_3968_p1) + unsigned(tmp_188_fu_3972_p1));
    p_Val2_1_fu_3976_p2 <= std_logic_vector(unsigned(p_Val2_25_reg_935) + unsigned(fc_bias_V_q0));
    p_Val2_22_fu_3711_p2 <= std_logic_vector(shift_right(signed(fc_in_V_q0),to_integer(unsigned('0' & sh_1_fu_3701_p1(31-1 downto 0)))));
    p_Val2_23_fu_3722_p2 <= std_logic_vector(unsigned(p_Val2_18_reg_889) - unsigned(p_Val2_22_reg_5402));
    p_Val2_27_fu_3900_p0 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(fc_dot_V_q1),32));
    p_Val2_27_fu_3900_p2 <= std_logic_vector(shift_left(unsigned(p_Val2_27_fu_3900_p0),to_integer(unsigned('0' & sh_2_fu_3896_p1(31-1 downto 0)))));
    p_Val2_28_fu_3912_p2 <= std_logic_vector(unsigned(p_Val2_25_reg_935) - unsigned(p_Val2_27_reg_5483));
    p_Val2_29_fu_3906_p0 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(fc_dot_V_q1),32));
    p_Val2_29_fu_3906_p2 <= std_logic_vector(shift_right(signed(p_Val2_29_fu_3906_p0),to_integer(unsigned('0' & sh_2_fu_3896_p1(31-1 downto 0)))));
    p_Val2_2_18_fu_1467_p3 <= 
        ap_const_lv31_0 when (grp_fu_1113_p3(0) = '1') else 
        p_Val2_2_cast_fu_1462_p2;
    p_Val2_2_cast_19_fu_1475_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_2_18_reg_4653),32));
    p_Val2_2_cast_fu_1462_p2 <= std_logic_vector(unsigned(tmp_5_reg_4535) + unsigned(tmp_83_fu_1458_p1));
    p_Val2_30_fu_3917_p2 <= std_logic_vector(unsigned(p_Val2_25_reg_935) - unsigned(p_Val2_29_reg_5489));
    p_Val2_31_fu_2606_p2 <= std_logic_vector(shift_left(unsigned(pool_dot_V_q0),to_integer(unsigned('0' & sh_3_fu_2602_p1(31-1 downto 0)))));
    p_Val2_34_fu_2618_p2 <= std_logic_vector(unsigned(reg_1098) - unsigned(p_Val2_31_reg_5039));
    p_Val2_35_fu_2612_p2 <= std_logic_vector(shift_right(signed(pool_dot_V_q0),to_integer(unsigned('0' & sh_3_fu_2602_p1(31-1 downto 0)))));
    p_Val2_36_fu_2623_p2 <= std_logic_vector(unsigned(reg_1098) - unsigned(p_Val2_35_reg_5045));
    p_Val2_4_fu_4196_p2 <= std_logic_vector(unsigned(p_Val2_37_reg_1004) + unsigned(fc_bias_V_q0));
    p_Val2_5_fu_4183_p3 <= 
        mt_fu_4178_p2 when (tmp_224_fu_4171_p3(0) = '1') else 
        storemerge6_reg_5574;
    p_Val2_6_31_fu_2683_p3 <= 
        ap_const_lv31_0 when (grp_fu_1113_p3(0) = '1') else 
        p_Val2_6_cast_fu_2678_p2;
    p_Val2_6_cast_32_fu_2691_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_6_31_reg_5056),32));
    p_Val2_6_cast_fu_2678_p2 <= std_logic_vector(unsigned(tmp_28_reg_4905) + unsigned(tmp_161_fu_2674_p1));
    p_Val2_9_fu_1390_p2 <= std_logic_vector(shift_left(unsigned(in_V_q0),to_integer(unsigned('0' & sh_fu_1387_p1(31-1 downto 0)))));
    p_Val2_cast_45_fu_3809_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_s_44_reg_5413),32));
    p_Val2_cast_fu_3787_p2 <= std_logic_vector(unsigned(tmp_167_fu_3773_p1) + unsigned(tmp_168_fu_3777_p1));
    p_Val2_s_43_fu_3781_p2 <= std_logic_vector(unsigned(p_Val2_18_reg_889) + unsigned(fc_bias_V_q0));
    p_Val2_s_44_fu_3801_p3 <= 
        ap_const_lv31_0 when (tmp_169_fu_3793_p3(0) = '1') else 
        p_Val2_cast_fu_3787_p2;
    p_shl10_fu_2291_p4 <= ((ap_const_lv54_1 & channel6_reg_686) & ap_const_lv5_0);
    p_shl11_fu_2301_p4 <= ((ap_const_lv57_1 & channel6_reg_686) & ap_const_lv2_0);
    p_shl12_cast_fu_1618_p3 <= (tmp_41_fu_1614_p1 & ap_const_lv4_0);
    p_shl12_fu_2710_p4 <= ((ap_const_lv54_1 & i_reg_755) & ap_const_lv5_0);
    p_shl13_cast_fu_1630_p3 <= (tmp_51_fu_1626_p1 & ap_const_lv1_0);
    p_shl13_fu_2720_p4 <= ((ap_const_lv57_1 & i_reg_755) & ap_const_lv2_0);
    p_shl14_cast_fu_1579_p3 <= (tmp_33_fu_1575_p1 & ap_const_lv5_0);
    p_shl14_fu_2736_p4 <= ((ap_const_lv55_1 & i_reg_755) & ap_const_lv4_0);
    p_shl15_cast_fu_1591_p3 <= (tmp_36_fu_1587_p1 & ap_const_lv2_0);
    p_shl15_fu_2746_p4 <= ((ap_const_lv58_1 & i_reg_755) & ap_const_lv1_0);
    p_shl16_cast_fu_1755_p3 <= (tmp_141_fu_1751_p1 & ap_const_lv5_0);
    p_shl16_fu_3474_p4 <= ((ap_const_lv55_1 & i1_reg_833) & ap_const_lv4_0);
    p_shl17_cast_fu_1767_p3 <= (tmp_142_fu_1763_p1 & ap_const_lv2_0);
    p_shl17_fu_3484_p4 <= ((ap_const_lv58_1 & i1_reg_833) & ap_const_lv1_0);
    p_shl18_fu_2479_p4 <= ((ap_const_lv57_2 & sample1_reg_744) & ap_const_lv4_0);
    p_shl19_fu_2489_p4 <= ((ap_const_lv60_2 & sample1_reg_744) & ap_const_lv1_0);
    p_shl1_fu_1494_p4 <= ((ap_const_lv56_2 & channel1_reg_608) & ap_const_lv5_0);
    p_shl22_cast_fu_2346_p3 <= (tmp_71_fu_2342_p1 & ap_const_lv5_0);
    p_shl23_cast_fu_2358_p3 <= (tmp_73_fu_2354_p1 & ap_const_lv2_0);
    p_shl24_cast_fu_2541_p3 <= (tmp_208_reg_4986 & ap_const_lv4_0);
    p_shl25_cast_fu_2548_p3 <= (tmp_209_reg_4991 & ap_const_lv1_0);
    p_shl28_cast_fu_2566_p3 <= (tmp_203_reg_5001 & ap_const_lv2_0);
    p_shl2_fu_1178_p4 <= ((ap_const_lv59_2 & channel_reg_550) & ap_const_lv2_0);
    p_shl34_cast_fu_2834_p3 <= (tmp_109_fu_2830_p1 & ap_const_lv4_0);
    p_shl35_cast_fu_2846_p3 <= (tmp_110_fu_2842_p1 & ap_const_lv1_0);
    p_shl36_cast_fu_2795_p3 <= (tmp_99_fu_2791_p1 & ap_const_lv5_0);
    p_shl37_cast_fu_2807_p3 <= (tmp_102_fu_2803_p1 & ap_const_lv2_0);
    p_shl38_cast_fu_2971_p3 <= (tmp_183_fu_2967_p1 & ap_const_lv5_0);
    p_shl39_cast_fu_2983_p3 <= (tmp_184_fu_2979_p1 & ap_const_lv2_0);
    p_shl3_fu_1152_p4 <= ((ap_const_lv56_2 & channel_reg_550) & ap_const_lv5_0);
    p_shl42_cast_fu_3537_p3 <= (tmp_157_fu_3533_p1 & ap_const_lv4_0);
    p_shl43_cast_fu_3549_p3 <= (tmp_158_fu_3545_p1 & ap_const_lv1_0);
    p_shl4_fu_1162_p4 <= ((ap_const_lv60_2 & channel_reg_550) & ap_const_lv1_0);
    p_shl5_cast_fu_1223_p3 <= (tmp_14_fu_1219_p1 & ap_const_lv5_0);
    p_shl5_fu_1504_p4 <= ((ap_const_lv59_2 & channel1_reg_608) & ap_const_lv2_0);
    p_shl6_cast_fu_1235_p3 <= (tmp_16_fu_1231_p1 & ap_const_lv2_0);
    p_shl6_fu_2265_p4 <= ((ap_const_lv56_1 & channel6_reg_686) & ap_const_lv3_0);
    p_shl7_cast_fu_1334_p3 <= (tmp_146_fu_1330_p1 & ap_const_lv2_0);
    p_shl7_fu_2275_p4 <= ((ap_const_lv58_1 & channel6_reg_686) & ap_const_lv1_0);
    p_shl8_fu_1520_p4 <= ((ap_const_lv57_2 & channel1_reg_608) & ap_const_lv4_0);
    p_shl9_fu_1530_p4 <= ((ap_const_lv60_2 & channel1_reg_608) & ap_const_lv1_0);
    p_shl_fu_3516_p3 <= (j1_reg_856 & ap_const_lv2_0);
    phi_mul44_cast_fu_3654_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(phi_mul1_reg_913),19));
    phi_mul46_cast_fu_3849_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(phi_mul2_reg_959),19));
    phi_mul48_cast_cast_fu_4044_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(phi_mul3_reg_1029),17));

    pool_dot_V_address0_assign_proc : process(ap_CS_fsm_state50, ap_CS_fsm_state84, ap_CS_fsm_state41, ap_CS_fsm_state81, tmp_168_cast_fu_2236_p1, tmp_215_cast_fu_2588_p1, tmp_193_cast_fu_3452_p1, tmp_192_cast_fu_3609_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            pool_dot_V_address0 <= tmp_192_cast_fu_3609_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state81)) then 
            pool_dot_V_address0 <= tmp_193_cast_fu_3452_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            pool_dot_V_address0 <= tmp_215_cast_fu_2588_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            pool_dot_V_address0 <= tmp_168_cast_fu_2236_p1(14 - 1 downto 0);
        else 
            pool_dot_V_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    pool_dot_V_ce0_assign_proc : process(ap_CS_fsm_state50, ap_CS_fsm_state84, ap_CS_fsm_state41, ap_CS_fsm_state81)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state81))) then 
            pool_dot_V_ce0 <= ap_const_logic_1;
        else 
            pool_dot_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    pool_dot_V_d0_assign_proc : process(newSel3_reg_4870, newSel7_reg_5273, ap_CS_fsm_state41, ap_CS_fsm_state81)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state81)) then 
            pool_dot_V_d0 <= newSel7_reg_5273;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            pool_dot_V_d0 <= newSel3_reg_4870;
        else 
            pool_dot_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    pool_dot_V_we0_assign_proc : process(ap_CS_fsm_state41, ap_CS_fsm_state81)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state81))) then 
            pool_dot_V_we0 <= ap_const_logic_1;
        else 
            pool_dot_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    res_V_16_fu_1678_p1 <= reg_1103;
    res_V_17_fu_1918_p1 <= reg_1103;
    res_V_18_fu_3134_p1 <= reg_1103;
    res_V_19_fu_4362_p1 <= reg_1103;
    res_V_20_fu_4260_p1 <= reg_1103;
    res_V_fu_2894_p1 <= reg_1103;
    rev3_fu_2596_p2 <= (grp_fu_1058_p3 xor ap_const_lv1_1);
    rev_fu_1382_p2 <= (tmp_154_reg_4624 xor ap_const_lv1_1);
    row_1_fu_1255_p2 <= std_logic_vector(unsigned(row_reg_574) + unsigned(ap_const_lv5_1));
    row_2_fu_2378_p2 <= std_logic_vector(unsigned(row8_reg_710) + unsigned(ap_const_lv4_1));
    row_3_fu_1650_p2 <= std_logic_vector(unsigned(row3_reg_630) + unsigned(ap_const_lv4_1));
    row_4_fu_3664_p2 <= std_logic_vector(unsigned(row2_reg_902) + unsigned(ap_const_lv9_1));
    row_5_fu_3859_p2 <= std_logic_vector(unsigned(row4_reg_948) + unsigned(ap_const_lv7_1));
    row_6_fu_4054_p2 <= std_logic_vector(unsigned(row5_reg_1017) + unsigned(ap_const_lv7_1));
    sample_fu_2464_p2 <= std_logic_vector(unsigned(sample1_reg_744) + unsigned(ap_const_lv3_1));
    sel_tmp10_fu_2175_p2 <= (tmp_53_reg_4852 xor ap_const_lv1_1);
    sel_tmp11_fu_2180_p2 <= (sel_tmp3_reg_4858 and sel_tmp10_fu_2175_p2);
    sel_tmp12_fu_2185_p2 <= (sel_tmp3_reg_4858 and tmp_53_reg_4852);
    sel_tmp13_fu_2125_p2 <= (sel_tmp34_demorgan_fu_2120_p2 xor ap_const_lv1_1);
    sel_tmp14_fu_2131_p2 <= (icmp_fu_2100_p2 and sel_tmp13_fu_2125_p2);
    sel_tmp15_fu_3727_p2 <= (tmp_173_reg_5378 xor ap_const_lv1_1);
    sel_tmp16_fu_3732_p2 <= (rev1_reg_5390 and sel_tmp15_fu_3727_p2);
    sel_tmp17_fu_3743_p2 <= std_logic_vector(unsigned(sel_tmp79_v_fu_3737_p3) + unsigned(p_Val2_18_reg_889));
    sel_tmp18_fu_3749_p2 <= (tmp_173_reg_5378 and tmp_174_reg_5385);
    sel_tmp19_demorgan_fu_2105_p2 <= (tmp_44_reg_4762 or tmp_50_reg_4780);
    sel_tmp19_fu_3753_p3 <= 
        p_Val2_23_fu_3722_p2 when (sel_tmp18_fu_3749_p2(0) = '1') else 
        sel_tmp17_fu_3743_p2;
    sel_tmp1_fu_1417_p2 <= (rev_reg_4630 and sel_tmp_fu_1412_p2);
    sel_tmp20_fu_3761_p2 <= (tmp_173_reg_5378 and rev1_reg_5390);
    sel_tmp21_fu_3381_p2 <= (tmp_77_reg_5165 xor ap_const_lv1_1);
    sel_tmp22_fu_3386_p2 <= (tmp_91_reg_5183 and sel_tmp21_fu_3381_p2);
    sel_tmp23_fu_3325_p2 <= (sel_tmp58_demorgan_fu_3321_p2 xor ap_const_lv1_1);
    sel_tmp24_fu_3331_p2 <= (tmp_88_reg_5171 and sel_tmp23_fu_3325_p2);
    sel_tmp25_fu_3391_p2 <= (tmp_97_reg_5255 xor ap_const_lv1_1);
    sel_tmp26_fu_3396_p2 <= (sel_tmp24_reg_5261 and sel_tmp25_fu_3391_p2);
    sel_tmp27_fu_3401_p2 <= (sel_tmp24_reg_5261 and tmp_97_reg_5255);
    sel_tmp28_fu_3341_p2 <= (sel_tmp73_demorgan_fu_3336_p2 xor ap_const_lv1_1);
    sel_tmp29_fu_3347_p2 <= (icmp1_fu_3316_p2 and sel_tmp28_fu_3341_p2);
    sel_tmp2_fu_1428_p2 <= std_logic_vector(unsigned(reg_1098) + unsigned(sel_tmp2_v_fu_1422_p3));
    sel_tmp2_v_fu_1422_p3 <= 
        p_Val2_9_reg_4636 when (sel_tmp1_fu_1417_p2(0) = '1') else 
        p_Val2_11_reg_4642;
    sel_tmp30_fu_3922_p2 <= (tmp_193_reg_5465 xor ap_const_lv1_1);
    sel_tmp31_fu_3927_p2 <= (rev2_reg_5477 and sel_tmp30_fu_3922_p2);
    sel_tmp32_fu_3938_p2 <= std_logic_vector(unsigned(sel_tmp88_v_fu_3932_p3) + unsigned(p_Val2_25_reg_935));
    sel_tmp33_fu_3944_p2 <= (tmp_193_reg_5465 and tmp_194_reg_5472);
    sel_tmp34_demorgan_fu_2120_p2 <= (sel_tmp19_demorgan_fu_2105_p2 or tmp_45_reg_4768);
    sel_tmp34_fu_3948_p3 <= 
        p_Val2_30_fu_3917_p2 when (sel_tmp33_fu_3944_p2(0) = '1') else 
        sel_tmp32_fu_3938_p2;
    sel_tmp35_fu_3956_p2 <= (tmp_193_reg_5465 and rev2_reg_5477);
    sel_tmp36_fu_2628_p2 <= (tmp_213_reg_5021 xor ap_const_lv1_1);
    sel_tmp37_fu_2633_p2 <= (rev3_reg_5033 and sel_tmp36_fu_2628_p2);
    sel_tmp38_fu_2644_p2 <= std_logic_vector(unsigned(sel_tmp40_v_fu_2638_p3) + unsigned(reg_1098));
    sel_tmp39_fu_2650_p2 <= (tmp_213_reg_5021 and tmp_214_reg_5028);
    sel_tmp3_fu_2115_p2 <= (tmp_45_reg_4768 and sel_tmp9_fu_2109_p2);
    sel_tmp40_fu_2654_p3 <= 
        p_Val2_36_fu_2623_p2 when (sel_tmp39_fu_2650_p2(0) = '1') else 
        sel_tmp38_fu_2644_p2;
    sel_tmp40_v_fu_2638_p3 <= 
        p_Val2_31_reg_5039 when (sel_tmp37_fu_2633_p2(0) = '1') else 
        p_Val2_35_reg_5045;
    sel_tmp41_fu_2662_p2 <= (tmp_213_reg_5021 and rev3_reg_5033);
    sel_tmp42_fu_4443_p2 <= (tmp_66_reg_5597 xor ap_const_lv1_1);
    sel_tmp43_fu_4448_p2 <= (brmerge_fu_4423_p2 and sel_tmp42_fu_4443_p2);
    sel_tmp44_fu_4454_p3 <= 
        d_assign_3_mux_fu_4428_p3 when (sel_tmp43_fu_4448_p2(0) = '1') else 
        dp_11_reg_5619;
    sel_tmp45_fu_4214_p0 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(fc_dot_V_q0),32));
    sel_tmp45_fu_4214_p2 <= "0" when (sel_tmp45_fu_4214_p0 = ap_const_lv32_0) else "1";
    sel_tmp46_fu_4220_p2 <= (tmp_66_fu_4208_p2 and sel_tmp45_fu_4214_p2);
    sel_tmp47_fu_4461_p3 <= 
        dp_9_fu_4394_p1 when (sel_tmp46_reg_5607(0) = '1') else 
        sel_tmp44_fu_4454_p3;
    sel_tmp48_fu_4475_p3 <= 
        max_index_mux_fu_4436_p3 when (sel_tmp43_fu_4448_p2(0) = '1') else 
        max_index_1_cast_reg_5505;
    sel_tmp4_fu_1434_p2 <= (tmp_153_reg_4617 and tmp_154_reg_4624);
    sel_tmp58_demorgan_fu_3321_p2 <= (tmp_77_reg_5165 or tmp_91_reg_5183);
    sel_tmp5_fu_1438_p3 <= 
        p_Val2_12_fu_1407_p2 when (sel_tmp4_fu_1434_p2(0) = '1') else 
        sel_tmp2_fu_1428_p2;
    sel_tmp6_fu_1446_p2 <= (tmp_153_reg_4617 and rev_reg_4630);
    sel_tmp73_demorgan_fu_3336_p2 <= (sel_tmp58_demorgan_fu_3321_p2 or tmp_88_reg_5171);
    sel_tmp79_v_fu_3737_p3 <= 
        p_Val2_16_reg_5396 when (sel_tmp16_fu_3732_p2(0) = '1') else 
        p_Val2_22_reg_5402;
    sel_tmp7_fu_2165_p2 <= (tmp_44_reg_4762 xor ap_const_lv1_1);
    sel_tmp88_v_fu_3932_p3 <= 
        p_Val2_27_reg_5483 when (sel_tmp31_fu_3927_p2(0) = '1') else 
        p_Val2_29_reg_5489;
    sel_tmp8_fu_2170_p2 <= (tmp_50_reg_4780 and sel_tmp7_fu_2165_p2);
    sel_tmp9_fu_2109_p2 <= (sel_tmp19_demorgan_fu_2105_p2 xor ap_const_lv1_1);
    sel_tmp_fu_1412_p2 <= (tmp_153_reg_4617 xor ap_const_lv1_1);
    sh_1_fu_3701_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_172_fu_3697_p1),32));
    sh_2_fu_3896_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_192_fu_3892_p1),32));
    sh_3_fu_2602_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_212_fu_2592_p1),32));
        sh_amt_1_cast_fu_3353_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_1_reg_5177),32));

    sh_amt_1_fu_3070_p3 <= 
        tmp_89_fu_3058_p2 when (tmp_88_fu_3052_p2(0) = '1') else 
        tmp_90_fu_3064_p2;
        sh_amt_cast_fu_2137_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_reg_4774),32));

    sh_amt_fu_1854_p3 <= 
        tmp_48_fu_1842_p2 when (tmp_45_fu_1836_p2(0) = '1') else 
        tmp_49_fu_1848_p2;
    sh_assign_1_cast_fu_4149_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_assign_1_reg_5569),32));
    sh_assign_1_fu_4143_p3 <= 
        tmp_68_cast_fu_4138_p2 when (isNeg_reg_5558(0) = '1') else 
        tmp_226_reg_5552;
    sh_fu_1387_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_152_reg_4612),32));
    storemerge1_fu_1450_p3 <= 
        p_Val2_10_fu_1402_p2 when (sel_tmp6_fu_1446_p2(0) = '1') else 
        sel_tmp5_fu_1438_p3;
    storemerge3_fu_3765_p3 <= 
        p_Val2_17_fu_3717_p2 when (sel_tmp20_fu_3761_p2(0) = '1') else 
        sel_tmp19_fu_3753_p3;
    storemerge4_fu_3960_p3 <= 
        p_Val2_28_fu_3912_p2 when (sel_tmp35_fu_3956_p2(0) = '1') else 
        sel_tmp34_fu_3948_p3;
    storemerge5_fu_2666_p3 <= 
        p_Val2_34_fu_2618_p2 when (sel_tmp41_fu_2662_p2(0) = '1') else 
        sel_tmp40_fu_2654_p3;
    storemerge6_fu_4164_p3 <= 
        tmp_70_fu_4158_p2 when (isNeg_reg_5558(0) = '1') else 
        tmp_69_fu_4152_p2;
    storemerge7_fu_3369_p3 <= 
        ap_const_lv32_FFFFFFFF when (isneg_1_reg_5154(0) = '1') else 
        ap_const_lv32_0;
    storemerge_fu_2153_p3 <= 
        ap_const_lv32_FFFFFFFF when (isneg_reg_4751(0) = '1') else 
        ap_const_lv32_0;
    tmp109_fu_3563_p2 <= std_logic_vector(unsigned(p_shl_fu_3516_p3) + unsigned(j1_cast_fu_3500_p1));
    tmp110_fu_3589_p2 <= std_logic_vector(unsigned(k1_cast_fu_3573_p1) + unsigned(phi_mul_reg_844));
    tmp112_cast_fu_3569_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp109_fu_3563_p2),9));
    tmp_100_fu_3356_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_amt_1_cast_fu_3353_p1),54));
    tmp_101_fu_3360_p2 <= std_logic_vector(shift_right(signed(man_V_5_reg_5244),to_integer(unsigned('0' & tmp_100_fu_3356_p1(31-1 downto 0)))));
    tmp_102_fu_2803_p1 <= tmp_95_fu_2786_p2(15 - 1 downto 0);
    tmp_103_fu_3376_p2 <= std_logic_vector(shift_left(unsigned(tmp_180_reg_5249),to_integer(unsigned('0' & sh_amt_1_cast_fu_3353_p1(31-1 downto 0)))));
    tmp_105_fu_2036_p2 <= (tmp_98_fu_2030_p2 and tmp_104_reg_4831);
    tmp_106_fu_2041_p2 <= (tmp_105_fu_2036_p2 xor ap_const_lv1_1);
    tmp_107_fu_2815_p2 <= std_logic_vector(unsigned(p_shl36_cast_fu_2795_p3) - unsigned(p_shl37_cast_fu_2807_p3));
    tmp_108_fu_2825_p2 <= std_logic_vector(unsigned(tmp_22_fu_2821_p1) + unsigned(tmp_61_reg_5080));
    tmp_109_fu_2830_p1 <= tmp_108_fu_2825_p2(11 - 1 downto 0);
    tmp_10_fu_1656_p3 <= (row3_reg_630 & ap_const_lv1_0);
    tmp_110_fu_2842_p1 <= tmp_108_fu_2825_p2(14 - 1 downto 0);
    tmp_111_fu_2854_p2 <= std_logic_vector(unsigned(p_shl34_cast_fu_2834_p3) - unsigned(p_shl35_cast_fu_2846_p3));
    tmp_112_fu_2388_p2 <= std_logic_vector(unsigned(tmp_76_reg_4918) + unsigned(tmp_25_cast_fu_2384_p1));
    tmp_113_fu_3180_p4 <= p_0_i2_to_int_fu_3177_p1(62 downto 52);
    tmp_114_fu_1785_p2 <= std_logic_vector(unsigned(tmp_41_cast_fu_1781_p1) + unsigned(tmp_52_reg_4700));
    tmp_115_fu_3210_p4 <= op1_assign_1_to_int_fu_3206_p1(62 downto 52);
    tmp_116_fu_1794_p1 <= ireg_V_fu_1790_p1(63 - 1 downto 0);
    tmp_117_fu_3224_p2 <= (notrhs2_reg_5229 or notlhs2_reg_5224);
    tmp_117_i_cast_fu_4103_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_223_fu_4099_p1),7));
    tmp_118_fu_3240_p2 <= (notrhs3_fu_3234_p2 or notlhs3_fu_3228_p2);
    tmp_118_i_fu_4107_p2 <= std_logic_vector(unsigned(ap_const_lv7_0) - unsigned(tmp_117_i_cast_fu_4103_p1));
    tmp_119_fu_3246_p2 <= (tmp_117_fu_3224_p2 and tmp_118_fu_3240_p2);
    tmp_11_cast_fu_1664_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_10_fu_1656_p3),17));
    tmp_11_fu_1540_p2 <= std_logic_vector(unsigned(p_shl8_fu_1520_p4) - unsigned(p_shl9_fu_1530_p4));
    tmp_121_fu_3252_p2 <= (tmp_119_fu_3246_p2 and tmp_120_reg_5234);
    tmp_122_fu_3257_p2 <= (tmp_121_fu_3252_p2 xor ap_const_lv1_1);
    tmp_123_fu_4306_p4 <= p_0_i_to_int_fu_4303_p1(62 downto 52);
    tmp_124_fu_1746_p2 <= std_logic_vector(unsigned(tmp_s_reg_4671) + unsigned(tmp_47_fu_1742_p1));
    tmp_125_fu_4324_p4 <= d_assign_1_to_int_fu_4320_p1(62 downto 52);
    tmp_126_fu_1820_p1 <= ireg_V_fu_1790_p1(52 - 1 downto 0);
    tmp_127_fu_4398_p2 <= (notrhs4_reg_5635 or notlhs4_reg_5630);
    tmp_128_fu_4402_p2 <= (notrhs5_reg_5645 or notlhs5_reg_5640);
    tmp_129_fu_4406_p2 <= (tmp_127_fu_4398_p2 and tmp_128_fu_4402_p2);
    tmp_131_fu_4412_p2 <= (tmp_129_fu_4406_p2 and tmp_130_reg_5650);
    tmp_132_fu_4417_p2 <= (tmp_131_fu_4412_p2 xor ap_const_lv1_1);
    tmp_133_fu_2091_p1 <= man_V_2_fu_2084_p3(32 - 1 downto 0);
    tmp_134_fu_4230_p2 <= (tmp_218_fu_4226_p1 or max_index_1_reg_992);
    tmp_135_fu_4236_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(fc_dot_V_q0),32));
    tmp_135_fu_4236_p4 <= tmp_135_fu_4236_p1(31 downto 4);
    tmp_136_fu_4246_p3 <= (tmp_135_fu_4236_p4 & tmp_134_fu_4230_p2);
    tmp_137_fu_4254_p2 <= "1" when (tmp_136_fu_4246_p3 = ap_const_lv32_0) else "0";
    tmp_138_fu_4482_p2 <= (tmp_137_reg_5613 or sel_tmp46_reg_5607);
    tmp_13_fu_1214_p2 <= std_logic_vector(unsigned(tmp_3_reg_4530) + unsigned(tmp_4_fu_1210_p1));
    tmp_140_fu_2149_p1 <= tmp_68_fu_2144_p2(32 - 1 downto 0);
    tmp_141_fu_1751_p1 <= tmp_124_fu_1746_p2(12 - 1 downto 0);
    tmp_142_fu_1763_p1 <= tmp_124_fu_1746_p2(15 - 1 downto 0);
    tmp_143_fu_1775_p2 <= std_logic_vector(unsigned(p_shl16_cast_fu_1755_p3) - unsigned(p_shl17_cast_fu_1767_p3));
    tmp_144_fu_1321_p2 <= std_logic_vector(unsigned(tmp_26_fu_1317_p1) + unsigned(tmp_2_reg_4525));
    tmp_145_fu_1326_p1 <= tmp_144_fu_1321_p2(14 - 1 downto 0);
    tmp_146_fu_1330_p1 <= tmp_144_fu_1321_p2(12 - 1 downto 0);
    tmp_147_fu_1342_p2 <= std_logic_vector(unsigned(p_shl7_cast_fu_1334_p3) + unsigned(tmp_145_fu_1326_p1));
    tmp_148_fu_1348_p2 <= std_logic_vector(unsigned(tmp_17_cast_reg_4574) + unsigned(tmp_147_fu_1342_p2));
    tmp_149_fu_1359_p3 <= (tmp_18_reg_4579 & tmp_27_fu_1353_p2);
    tmp_14_fu_1219_p1 <= tmp_13_fu_1214_p2(12 - 1 downto 0);
    tmp_150_cast_fu_1270_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_56_fu_1265_p2),64));
    tmp_152_fu_1378_p1 <= conv_weight_q0(6 - 1 downto 0);
    tmp_155_fu_3643_p2 <= std_logic_vector(unsigned(tmp_15_cast_fu_3639_p1) + unsigned(ap_const_lv8_78));
    tmp_156_fu_3528_p2 <= std_logic_vector(unsigned(tmp_29_fu_3524_p1) + unsigned(tmp_93_reg_5291));
    tmp_157_cast_fu_1673_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_81_fu_1668_p2),64));
    tmp_157_fu_3533_p1 <= tmp_156_fu_3528_p2(11 - 1 downto 0);
    tmp_158_fu_3545_p1 <= tmp_156_fu_3528_p2(14 - 1 downto 0);
    tmp_159_fu_3557_p2 <= std_logic_vector(unsigned(p_shl42_cast_fu_3537_p3) - unsigned(p_shl43_cast_fu_3549_p3));
    tmp_15_cast1_fu_3635_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col4_reg_878),19));
    tmp_15_cast_fu_3639_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col4_reg_878),8));
    tmp_160_fu_2884_p2 <= std_logic_vector(unsigned(tmp_33_cast_fu_2880_p1) + unsigned(tmp_107_reg_5098));
    tmp_161_fu_2674_p1 <= conv_dot_V_q0(31 - 1 downto 0);
    tmp_163_fu_1908_p2 <= std_logic_vector(unsigned(tmp_143_reg_4741) + unsigned(tmp_63_cast_fu_1904_p1));
    tmp_164_fu_1974_p1 <= p_0_i1_to_int_fu_1961_p1(52 - 1 downto 0);
    tmp_165_fu_2004_p1 <= op1_assign_to_int_fu_1990_p1(52 - 1 downto 0);
    tmp_166_fu_3838_p2 <= std_logic_vector(unsigned(tmp_23_cast_fu_3834_p1) + unsigned(ap_const_lv9_F0));
    tmp_167_cast_fu_2393_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_112_fu_2388_p2),64));
    tmp_167_fu_3773_p1 <= fc_bias_V_q0(31 - 1 downto 0);
    tmp_168_cast_fu_2236_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_114_reg_4746),64));
    tmp_168_fu_3777_p1 <= p_Val2_18_reg_889(31 - 1 downto 0);
    tmp_169_fu_3793_p3 <= p_Val2_s_43_fu_3781_p2(31 downto 31);
    tmp_16_fu_1231_p1 <= tmp_13_fu_1214_p2(15 - 1 downto 0);
    tmp_170_fu_3681_p2 <= std_logic_vector(unsigned(ap_const_lv19_27100) + unsigned(phi_mul44_cast_fu_3654_p1));
    tmp_171_fu_3687_p2 <= std_logic_vector(unsigned(tmp_170_fu_3681_p2) + unsigned(tmp_15_cast1_reg_5340));
    tmp_172_fu_3697_p1 <= fc_weight_q0(6 - 1 downto 0);
    tmp_175_fu_3604_p2 <= std_logic_vector(unsigned(tmp_159_reg_5304) + unsigned(tmp_56_cast_fu_3600_p1));
    tmp_176_cast_fu_1370_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_148_reg_4592),64));
    tmp_176_fu_3001_p2 <= std_logic_vector(unsigned(tmp_71_cast_fu_2997_p1) + unsigned(tmp_111_reg_5103));
    tmp_177_fu_3010_p1 <= ireg_V_1_fu_3006_p1(63 - 1 downto 0);
    tmp_178_fu_2962_p2 <= std_logic_vector(unsigned(tmp_60_reg_5074) + unsigned(tmp_79_fu_2958_p1));
    tmp_179_fu_3036_p1 <= ireg_V_1_fu_3006_p1(52 - 1 downto 0);
    tmp_17_cast_fu_1291_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(fil_col_reg_586),14));
    tmp_17_fu_1243_p2 <= std_logic_vector(unsigned(p_shl5_cast_fu_1223_p3) - unsigned(p_shl6_cast_fu_1235_p3));
        tmp_180_cast_fu_1374_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_151_reg_4597),64));

    tmp_180_fu_3307_p1 <= man_V_5_fu_3300_p3(32 - 1 downto 0);
    tmp_181_cast_fu_3649_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_155_fu_3643_p2),64));
    tmp_182_fu_3365_p1 <= tmp_101_fu_3360_p2(32 - 1 downto 0);
    tmp_183_fu_2967_p1 <= tmp_178_fu_2962_p2(12 - 1 downto 0);
    tmp_184_fu_2979_p1 <= tmp_178_fu_2962_p2(15 - 1 downto 0);
    tmp_185_fu_2991_p2 <= std_logic_vector(unsigned(p_shl38_cast_fu_2971_p3) - unsigned(p_shl39_cast_fu_2983_p3));
    tmp_186_cast_fu_2889_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_160_fu_2884_p2),64));
    tmp_186_fu_4033_p2 <= std_logic_vector(unsigned(tmp_30_cast_fu_4029_p1) + unsigned(ap_const_lv9_168));
    tmp_187_cast_fu_1913_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_163_fu_1908_p2),64));
    tmp_187_fu_3968_p1 <= fc_bias_V_q0(31 - 1 downto 0);
    tmp_188_cast_fu_3844_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_166_fu_3838_p2),64));
    tmp_188_fu_3972_p1 <= p_Val2_25_reg_935(31 - 1 downto 0);
    tmp_189_fu_3988_p3 <= p_Val2_1_fu_3976_p2(31 downto 31);
    tmp_18_fu_1295_p2 <= std_logic_vector(unsigned(col_reg_562) + unsigned(fil_col_cast_fu_1275_p1));
    tmp_190_fu_3876_p2 <= std_logic_vector(signed(ap_const_lv19_4E200) + signed(phi_mul46_cast_fu_3849_p1));
    tmp_191_cast_fu_3692_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_171_fu_3687_p2),64));
    tmp_191_fu_3882_p2 <= std_logic_vector(unsigned(tmp_190_fu_3876_p2) + unsigned(tmp_23_cast1_reg_5426));
    tmp_192_cast_fu_3609_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_175_fu_3604_p2),64));
    tmp_192_fu_3892_p1 <= fc_weight_q0(6 - 1 downto 0);
    tmp_193_cast_fu_3452_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_176_reg_5149),64));
    tmp_195_fu_3124_p2 <= std_logic_vector(unsigned(tmp_185_reg_5144) + unsigned(tmp_95_cast_fu_3120_p1));
    tmp_196_fu_3190_p1 <= p_0_i2_to_int_fu_3177_p1(52 - 1 downto 0);
    tmp_197_fu_3220_p1 <= op1_assign_1_to_int_fu_3206_p1(52 - 1 downto 0);
    tmp_198_cast_fu_4039_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_186_fu_4033_p2),64));
    tmp_198_fu_2474_p2 <= std_logic_vector(unsigned(tmp_24_reg_4895) + unsigned(tmp_80_fu_2470_p1));
    tmp_199_fu_2518_p2 <= std_logic_vector(shift_left(unsigned(tmp_198_reg_4980),to_integer(unsigned('0' & ap_const_lv64_2(31-1 downto 0)))));
    tmp_19_fu_2252_p3 <= (ap_const_lv59_1 & channel6_reg_686);
    tmp_1_fu_1143_p3 <= (ap_const_lv61_2 & channel_reg_550);
    tmp_200_fu_2523_p2 <= std_logic_vector(unsigned(tmp_198_reg_4980) + unsigned(tmp_199_fu_2518_p2));
    tmp_201_cast_fu_3887_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_191_fu_3882_p2),64));
    tmp_201_fu_2528_p2 <= std_logic_vector(unsigned(tmp_200_fu_2523_p2) + unsigned(tmp_58_reg_4962));
    tmp_202_cast_fu_3129_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_195_fu_3124_p2),64));
    tmp_202_fu_2533_p1 <= tmp_201_fu_2528_p2(14 - 1 downto 0);
    tmp_203_fu_2537_p1 <= tmp_201_fu_2528_p2(12 - 1 downto 0);
    tmp_204_fu_2573_p2 <= std_logic_vector(unsigned(tmp_202_reg_4996) + unsigned(p_shl28_cast_fu_2566_p3));
    tmp_205_fu_2578_p2 <= std_logic_vector(unsigned(tmp_204_fu_2573_p2) + unsigned(tmp_38_cast_reg_4944));
    tmp_206_fu_2499_p2 <= std_logic_vector(unsigned(p_shl18_fu_2479_p4) - unsigned(p_shl19_fu_2489_p4));
    tmp_207_fu_2505_p2 <= std_logic_vector(unsigned(tmp_206_fu_2499_p2) + unsigned(tmp_40_reg_4949));
    tmp_208_fu_2510_p1 <= tmp_207_fu_2505_p2(11 - 1 downto 0);
    tmp_209_cast_fu_2583_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_205_fu_2578_p2),64));
    tmp_209_fu_2514_p1 <= tmp_207_fu_2505_p2(14 - 1 downto 0);
    tmp_20_fu_2774_p3 <= (j_reg_766 & ap_const_lv1_0);
    tmp_210_fu_2555_p2 <= std_logic_vector(unsigned(p_shl24_cast_fu_2541_p3) - unsigned(p_shl25_cast_fu_2548_p3));
    tmp_211_fu_2561_p2 <= std_logic_vector(unsigned(tmp_210_fu_2555_p2) + unsigned(tmp_60_cast_reg_4967));
    tmp_212_fu_2592_p1 <= conv_weight_q0(6 - 1 downto 0);
    tmp_215_cast_fu_2588_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_211_reg_5006),64));
    tmp_215_fu_4316_p1 <= p_0_i_to_int_fu_4303_p1(52 - 1 downto 0);
    tmp_216_fu_4334_p1 <= d_assign_1_to_int_fu_4320_p1(52 - 1 downto 0);
    tmp_217_fu_4066_p2 <= std_logic_vector(signed(ap_const_lv17_15300) + signed(phi_mul48_cast_cast_fu_4044_p1));
    tmp_218_fu_4226_p0 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(fc_dot_V_q0),32));
    tmp_218_fu_4226_p1 <= tmp_218_fu_4226_p0(4 - 1 downto 0);
    tmp_219_fu_4072_p4 <= tmp_217_fu_4066_p2(16 downto 4);
    tmp_21_fu_2782_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_20_fu_2774_p3),64));
    tmp_220_fu_4082_p3 <= (tmp_219_fu_4072_p4 & max_index_1_reg_992);
    tmp_221_fu_4094_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_222_fu_4090_p1),64));
        tmp_222_fu_4090_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_220_fu_4082_p3),19));

    tmp_223_fu_4099_p1 <= fc_weight_q0(6 - 1 downto 0);
    tmp_224_fu_4171_p3 <= weight_3_reg_5547(7 downto 7);
    tmp_226_fu_4121_p1 <= i_op_assign_fu_4113_p3(6 - 1 downto 0);
    tmp_22_fu_2821_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_reg_766),64));
    tmp_23_cast1_fu_3830_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col5_reg_924),19));
    tmp_23_cast_fu_3834_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col5_reg_924),9));
    tmp_24_fu_2285_p2 <= std_logic_vector(unsigned(p_shl6_fu_2265_p4) - unsigned(p_shl7_fu_2275_p4));
    tmp_25_cast_fu_2384_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(row8_reg_710),17));
    tmp_25_fu_2311_p2 <= std_logic_vector(unsigned(p_shl10_fu_2291_p4) - unsigned(p_shl11_fu_2301_p4));
    tmp_26_fu_1317_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(fil_row_reg_597),64));
    tmp_27_fu_1353_p2 <= std_logic_vector(unsigned(row_reg_574) + unsigned(fil_row_cast_fu_1301_p1));
    tmp_28_fu_2317_p1 <= conv_bias_V_q0(31 - 1 downto 0);
    tmp_29_fu_3524_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j1_reg_856),64));
    tmp_2_fu_1172_p2 <= std_logic_vector(unsigned(p_shl3_fu_1152_p4) - unsigned(p_shl4_fu_1162_p4));
    tmp_30_cast_fu_4029_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(max_index_1_reg_992),9));
    tmp_31_fu_1570_p2 <= std_logic_vector(unsigned(tmp_8_fu_1566_p1) + unsigned(tmp_s_reg_4671));
    tmp_32_fu_2872_p3 <= (k_reg_777 & ap_const_lv1_0);
    tmp_33_cast_fu_2880_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_32_fu_2872_p3),17));
    tmp_33_fu_1575_p1 <= tmp_31_fu_1570_p2(12 - 1 downto 0);
    tmp_35_fu_3670_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(row2_reg_902),64));
    tmp_36_fu_1587_p1 <= tmp_31_fu_1570_p2(15 - 1 downto 0);
    tmp_37_fu_1599_p2 <= std_logic_vector(unsigned(p_shl14_cast_fu_1579_p3) - unsigned(p_shl15_cast_fu_1591_p3));
    tmp_38_cast_fu_2414_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(fil_col9_reg_722),14));
    tmp_38_fu_1609_p2 <= std_logic_vector(unsigned(tmp_9_fu_1605_p1) + unsigned(tmp_11_reg_4677));
    tmp_39_fu_2418_p2 <= std_logic_vector(unsigned(fil_col9_cast_fu_2398_p1) + unsigned(col7_reg_698));
    tmp_3_fu_1188_p2 <= std_logic_vector(unsigned(p_shl3_fu_1152_p4) - unsigned(p_shl2_fu_1178_p4));
    tmp_40_fu_2424_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_39_fu_2418_p2),64));
    tmp_41_cast_fu_1781_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(row3_reg_630),15));
    tmp_41_fu_1614_p1 <= tmp_38_fu_1609_p2(11 - 1 downto 0);
    tmp_42_fu_1816_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_V_fu_1806_p4),12));
    tmp_43_fu_2067_p3 <= (ap_const_lv1_1 & tmp_126_reg_4757);
    tmp_44_fu_1824_p2 <= "1" when (tmp_116_fu_1794_p1 = ap_const_lv63_0) else "0";
    tmp_45_fu_1836_p2 <= "1" when (signed(F2_fu_1830_p2) > signed(ap_const_lv12_16)) else "0";
    tmp_46_fu_1737_p2 <= std_logic_vector(unsigned(fil_col4_cast_fu_1721_p1) + unsigned(tmp_7_reg_4690));
    tmp_47_fu_1742_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_46_fu_1737_p2),64));
    tmp_48_fu_1842_p2 <= std_logic_vector(signed(ap_const_lv12_FEA) + signed(F2_fu_1830_p2));
    tmp_49_fu_1848_p2 <= std_logic_vector(unsigned(ap_const_lv12_16) - unsigned(F2_fu_1830_p2));
    tmp_4_fu_1210_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_reg_562),64));
    tmp_50_fu_1862_p2 <= "1" when (F2_fu_1830_p2 = ap_const_lv12_16) else "0";
    tmp_51_fu_1626_p1 <= tmp_38_fu_1609_p2(14 - 1 downto 0);
    tmp_52_fu_1638_p2 <= std_logic_vector(unsigned(p_shl12_cast_fu_1618_p3) - unsigned(p_shl13_cast_fu_1630_p3));
    tmp_53_fu_2095_p2 <= "1" when (unsigned(sh_amt_reg_4774) < unsigned(ap_const_lv12_36)) else "0";
    tmp_54_fu_3595_p2 <= std_logic_vector(unsigned(tmp112_cast_reg_5309) + unsigned(tmp110_fu_3589_p2));
    tmp_55_fu_3614_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_54_reg_5322),64));
    tmp_56_cast_fu_3600_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k1_reg_867),15));
    tmp_56_fu_1265_p2 <= std_logic_vector(unsigned(tmp_17_reg_4548) + unsigned(tmp_cast_fu_1261_p1));
    tmp_58_fu_2444_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(fil_row2_reg_733),64));
    tmp_59_fu_2448_p2 <= std_logic_vector(unsigned(fil_row2_cast_fu_2428_p1) + unsigned(row8_reg_710));
    tmp_5_fu_1194_p1 <= conv_bias_V_q0(31 - 1 downto 0);
    tmp_60_cast_fu_2454_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_59_fu_2448_p2),15));
    tmp_60_fu_2730_p2 <= std_logic_vector(unsigned(p_shl12_fu_2710_p4) - unsigned(p_shl13_fu_2720_p4));
    tmp_61_fu_2756_p2 <= std_logic_vector(unsigned(p_shl14_fu_2736_p4) - unsigned(p_shl15_fu_2746_p4));
    tmp_62_fu_1899_p2 <= std_logic_vector(unsigned(fil_row5_cast_fu_1883_p1) + unsigned(tmp_10_reg_4713));
    tmp_63_cast_fu_1904_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_62_fu_1899_p2),17));
    tmp_63_fu_2337_p2 <= std_logic_vector(unsigned(tmp_25_reg_4900) + unsigned(tmp_6_fu_2333_p1));
    tmp_65_fu_2140_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_amt_cast_fu_2137_p1),54));
    tmp_66_fu_4208_p2 <= "1" when (max_index_1_reg_992 = ap_const_lv4_0) else "0";
    tmp_68_cast_fu_4138_p2 <= std_logic_vector(unsigned(ap_const_lv6_0) - unsigned(tmp_226_reg_5552));
    tmp_68_fu_2144_p2 <= std_logic_vector(shift_right(signed(man_V_2_reg_4841),to_integer(unsigned('0' & tmp_65_fu_2140_p1(31-1 downto 0)))));
    tmp_69_fu_4152_p0 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(fc_dot_V_q0),32));
    tmp_69_fu_4152_p2 <= std_logic_vector(shift_left(unsigned(tmp_69_fu_4152_p0),to_integer(unsigned('0' & sh_assign_1_cast_fu_4149_p1(31-1 downto 0)))));
    tmp_6_fu_2333_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col7_reg_698),64));
    tmp_70_fu_4158_p0 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(fc_dot_V_q0),32));
    tmp_70_fu_4158_p2 <= std_logic_vector(shift_right(signed(tmp_70_fu_4158_p0),to_integer(unsigned('0' & sh_assign_1_cast_fu_4149_p1(31-1 downto 0)))));
    tmp_71_cast_fu_2997_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k_reg_777),15));
    tmp_71_fu_2342_p1 <= tmp_63_fu_2337_p2(12 - 1 downto 0);
    tmp_72_fu_3032_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_V_1_fu_3022_p4),12));
    tmp_73_fu_2354_p1 <= tmp_63_fu_2337_p2(15 - 1 downto 0);
    tmp_74_fu_2160_p2 <= std_logic_vector(shift_left(unsigned(tmp_133_reg_4846),to_integer(unsigned('0' & sh_amt_cast_fu_2137_p1(31-1 downto 0)))));
    tmp_75_fu_3283_p3 <= (ap_const_lv1_1 & tmp_179_reg_5160);
    tmp_76_fu_2366_p2 <= std_logic_vector(unsigned(p_shl22_cast_fu_2346_p3) - unsigned(p_shl23_cast_fu_2358_p3));
    tmp_77_fu_3040_p2 <= "1" when (tmp_177_fu_3010_p1 = ap_const_lv63_0) else "0";
    tmp_78_fu_2953_p2 <= std_logic_vector(unsigned(l_cast_fu_2937_p1) + unsigned(tmp_20_reg_5093));
    tmp_79_fu_2958_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_78_fu_2953_p2),64));
    tmp_7_fu_1558_p3 <= (col2_reg_619 & ap_const_lv1_0);
    tmp_80_fu_2470_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sample1_reg_744),64));
    tmp_81_fu_1668_p2 <= std_logic_vector(unsigned(tmp_11_cast_fu_1664_p1) + unsigned(tmp_37_reg_4695));
    tmp_82_fu_1964_p4 <= p_0_i1_to_int_fu_1961_p1(62 downto 52);
    tmp_83_fu_1458_p1 <= conv_dot_V_q0(31 - 1 downto 0);
    tmp_84_fu_1994_p4 <= op1_assign_to_int_fu_1990_p1(62 downto 52);
    tmp_86_fu_4203_p2 <= "1" when (p_Val2_4_reg_5585 = ap_const_lv32_0) else "0";
    tmp_87_fu_2008_p2 <= (notrhs_reg_4826 or notlhs_reg_4821);
    tmp_88_fu_3052_p2 <= "1" when (signed(F2_1_fu_3046_p2) > signed(ap_const_lv12_16)) else "0";
    tmp_89_fu_3058_p2 <= std_logic_vector(signed(ap_const_lv12_FEA) + signed(F2_1_fu_3046_p2));
    tmp_8_fu_1566_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_7_fu_1558_p3),64));
    tmp_90_fu_3064_p2 <= std_logic_vector(unsigned(ap_const_lv12_16) - unsigned(F2_1_fu_3046_p2));
    tmp_91_fu_3078_p2 <= "1" when (F2_1_fu_3046_p2 = ap_const_lv12_16) else "0";
    tmp_92_fu_2024_p2 <= (notrhs1_fu_2018_p2 or notlhs1_fu_2012_p2);
    tmp_93_fu_3494_p2 <= std_logic_vector(unsigned(p_shl16_fu_3474_p4) - unsigned(p_shl17_fu_3484_p4));
    tmp_94_fu_3115_p2 <= std_logic_vector(unsigned(m_cast_fu_3099_p1) + unsigned(tmp_32_reg_5116));
    tmp_95_cast_fu_3120_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_94_fu_3115_p2),17));
    tmp_95_fu_2786_p2 <= std_logic_vector(unsigned(tmp_21_fu_2782_p1) + unsigned(tmp_60_reg_5074));
    tmp_97_fu_3311_p2 <= "1" when (unsigned(sh_amt_1_reg_5177) < unsigned(ap_const_lv12_36)) else "0";
    tmp_98_fu_2030_p2 <= (tmp_87_fu_2008_p2 and tmp_92_fu_2024_p2);
    tmp_99_fu_2791_p1 <= tmp_95_fu_2786_p2(12 - 1 downto 0);
    tmp_9_fu_1605_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col2_reg_619),64));
    tmp_cast_fu_1261_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(row_reg_574),17));
    tmp_fu_1127_p1 <= index(25 - 1 downto 0);
    tmp_s_fu_1514_p2 <= std_logic_vector(unsigned(p_shl1_fu_1494_p4) - unsigned(p_shl5_fu_1504_p4));
    v_assign_1_ph_fu_2930_p3 <= 
        ap_const_lv64_0 when (tmp_34_reg_5126(0) = '1') else 
        dp_2_fu_2926_p1;
    v_assign_ph_fu_1714_p3 <= 
        ap_const_lv64_0 when (tmp_12_reg_4723(0) = '1') else 
        dp_fu_1710_p1;
end behav;
