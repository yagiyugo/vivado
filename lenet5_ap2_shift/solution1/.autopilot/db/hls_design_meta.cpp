#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_start", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_done", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_idle", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_ready", 1, hls_out, -1, "", "", 1),
	Port_Property("index", 32, hls_in, 0, "ap_none", "in_data", 1),
	Port_Property("conv_bias_V_address0", 6, hls_out, 1, "ap_memory", "mem_address", 1),
	Port_Property("conv_bias_V_ce0", 1, hls_out, 1, "ap_memory", "mem_ce", 1),
	Port_Property("conv_bias_V_q0", 30, hls_in, 1, "ap_memory", "mem_dout", 1),
	Port_Property("conv_dot_V_address0", 16, hls_out, 2, "ap_memory", "mem_address", 1),
	Port_Property("conv_dot_V_ce0", 1, hls_out, 2, "ap_memory", "mem_ce", 1),
	Port_Property("conv_dot_V_we0", 1, hls_out, 2, "ap_memory", "mem_we", 1),
	Port_Property("conv_dot_V_d0", 30, hls_out, 2, "ap_memory", "mem_din", 1),
	Port_Property("conv_dot_V_q0", 30, hls_in, 2, "ap_memory", "mem_dout", 1),
	Port_Property("conv_weight_address0", 14, hls_out, 3, "ap_memory", "mem_address", 1),
	Port_Property("conv_weight_ce0", 1, hls_out, 3, "ap_memory", "mem_ce", 1),
	Port_Property("conv_weight_q0", 32, hls_in, 3, "ap_memory", "mem_dout", 1),
	Port_Property("conv_weight_address1", 14, hls_out, 3, "ap_memory", "mem_address", 1),
	Port_Property("conv_weight_ce1", 1, hls_out, 3, "ap_memory", "mem_ce", 1),
	Port_Property("conv_weight_q1", 32, hls_in, 3, "ap_memory", "mem_dout", 1),
	Port_Property("in_V_address0", 24, hls_out, 4, "ap_memory", "mem_address", 1),
	Port_Property("in_V_ce0", 1, hls_out, 4, "ap_memory", "mem_ce", 1),
	Port_Property("in_V_q0", 30, hls_in, 4, "ap_memory", "mem_dout", 1),
	Port_Property("pool_dot_V_address0", 14, hls_out, 5, "ap_memory", "mem_address", 1),
	Port_Property("pool_dot_V_ce0", 1, hls_out, 5, "ap_memory", "mem_ce", 1),
	Port_Property("pool_dot_V_we0", 1, hls_out, 5, "ap_memory", "mem_we", 1),
	Port_Property("pool_dot_V_d0", 30, hls_out, 5, "ap_memory", "mem_din", 1),
	Port_Property("pool_dot_V_q0", 30, hls_in, 5, "ap_memory", "mem_dout", 1),
	Port_Property("fc_in_V_address0", 9, hls_out, 6, "ap_memory", "mem_address", 1),
	Port_Property("fc_in_V_ce0", 1, hls_out, 6, "ap_memory", "mem_ce", 1),
	Port_Property("fc_in_V_we0", 1, hls_out, 6, "ap_memory", "mem_we", 1),
	Port_Property("fc_in_V_d0", 30, hls_out, 6, "ap_memory", "mem_din", 1),
	Port_Property("fc_in_V_q0", 30, hls_in, 6, "ap_memory", "mem_dout", 1),
	Port_Property("fc_dot_V_address0", 2, hls_out, 7, "ap_memory", "mem_address", 1),
	Port_Property("fc_dot_V_ce0", 1, hls_out, 7, "ap_memory", "mem_ce", 1),
	Port_Property("fc_dot_V_we0", 1, hls_out, 7, "ap_memory", "mem_we", 1),
	Port_Property("fc_dot_V_d0", 0, hls_out, 7, "ap_memory", "mem_din", 1),
	Port_Property("fc_dot_V_q0", 0, hls_in, 7, "ap_memory", "mem_dout", 1),
	Port_Property("fc_weight_address0", 21, hls_out, 8, "ap_memory", "mem_address", 1),
	Port_Property("fc_weight_ce0", 1, hls_out, 8, "ap_memory", "mem_ce", 1),
	Port_Property("fc_weight_q0", 32, hls_in, 8, "ap_memory", "mem_dout", 1),
	Port_Property("fc_weight_address1", 21, hls_out, 8, "ap_memory", "mem_address", 1),
	Port_Property("fc_weight_ce1", 1, hls_out, 8, "ap_memory", "mem_ce", 1),
	Port_Property("fc_weight_q1", 32, hls_in, 8, "ap_memory", "mem_dout", 1),
	Port_Property("fc_bias_V_address0", 9, hls_out, 9, "ap_memory", "mem_address", 1),
	Port_Property("fc_bias_V_ce0", 1, hls_out, 9, "ap_memory", "mem_ce", 1),
	Port_Property("fc_bias_V_q0", 30, hls_in, 9, "ap_memory", "mem_dout", 1),
	Port_Property("ap_return", 32, hls_out, -1, "", "", 1),
};
const char* HLS_Design_Meta::dut_name = "lenet5_ap2";
